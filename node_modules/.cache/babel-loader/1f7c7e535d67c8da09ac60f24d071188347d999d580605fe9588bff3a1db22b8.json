{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nessc\\\\Semental fit ultima\\\\sementalfit2\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { onAuthStateChanged, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, updateProfile, signInWithPopup } from 'firebase/auth';\nimport { doc, getDoc, setDoc, serverTimestamp } from 'firebase/firestore';\nimport { auth, db, googleProvider } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Función para traducir errores de Firebase a mensajes amigables\n  function getErrorMessage(error) {\n    switch (error.code) {\n      case 'auth/email-already-in-use':\n        return 'Este correo electrónico ya está registrado. Por favor, inicia sesión o usa otro correo.';\n      case 'auth/invalid-email':\n        return 'El correo electrónico no es válido.';\n      case 'auth/operation-not-allowed':\n        return 'El registro con correo y contraseña no está habilitado.';\n      case 'auth/weak-password':\n        return 'La contraseña es demasiado débil. Debe tener al menos 6 caracteres.';\n      case 'auth/user-disabled':\n        return 'Esta cuenta ha sido deshabilitada.';\n      case 'auth/user-not-found':\n        return 'No existe una cuenta con este correo electrónico.';\n      case 'auth/wrong-password':\n        return 'Contraseña incorrecta.';\n      case 'auth/too-many-requests':\n        return 'Demasiados intentos fallidos. Por favor, intente más tarde.';\n      case 'auth/popup-closed-by-user':\n        return 'La ventana de inicio de sesión fue cerrada.';\n      case 'auth/popup-blocked':\n        return 'La ventana emergente fue bloqueada. Por favor, permita las ventanas emergentes.';\n      case 'auth/cancelled-popup-request':\n        return 'La solicitud de inicio de sesión fue cancelada.';\n      case 'auth/account-exists-with-different-credential':\n        return 'Ya existe una cuenta con este correo electrónico usando otro método de inicio de sesión.';\n      default:\n        return 'Ocurrió un error. Por favor, intente nuevamente.';\n    }\n  }\n  async function login(email, password) {\n    try {\n      setError(null);\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n\n      // Actualizar último inicio de sesión\n      await setDoc(doc(db, 'users', userCredential.user.uid), {\n        lastLogin: serverTimestamp()\n      }, {\n        merge: true\n      });\n      return userCredential;\n    } catch (error) {\n      console.error('Error en login:', error);\n      setError(getErrorMessage(error));\n      throw error;\n    }\n  }\n  async function register(email, password, name, role = 1) {\n    try {\n      setError(null);\n      // Si se intenta crear un personal trainer (rol 2) y el usuario actual no es admin (rol 3), lanzar error\n      if (role === 2 && (!currentUser || currentUser.role !== 3)) {\n        throw new Error('Solo un administrador puede crear un Personal Trainer.');\n      }\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n\n      // Crear documento de usuario en Firestore\n      await setDoc(doc(db, 'users', userCredential.user.uid), {\n        email,\n        name,\n        role,\n        // Guardar como número\n        createdAt: serverTimestamp(),\n        lastLogin: serverTimestamp(),\n        status: 'active'\n      });\n      console.log('Documento de usuario creado en Firestore:', userCredential.user.uid);\n\n      // Actualizar perfil de Firebase Auth\n      await updateProfile(userCredential.user, {\n        displayName: name\n      });\n      return userCredential;\n    } catch (error) {\n      console.error('Error en registro:', error);\n      setError(getErrorMessage(error));\n      throw error;\n    }\n  }\n  async function loginWithGoogle() {\n    try {\n      setError(null);\n      const result = await signInWithPopup(auth, googleProvider);\n      const user = result.user;\n\n      // Verificar si el usuario ya existe en Firestore\n      const userDoc = await getDoc(doc(db, 'users', user.uid));\n      if (!userDoc.exists()) {\n        // Si es un nuevo usuario, crear su documento en Firestore\n        await setDoc(doc(db, 'users', user.uid), {\n          email: user.email,\n          name: user.displayName,\n          role: 'user',\n          createdAt: serverTimestamp(),\n          lastLogin: serverTimestamp(),\n          status: 'active',\n          photoURL: user.photoURL\n        });\n      } else {\n        // Si el usuario existe, actualizar último inicio de sesión\n        await setDoc(doc(db, 'users', user.uid), {\n          lastLogin: serverTimestamp(),\n          photoURL: user.photoURL\n        }, {\n          merge: true\n        });\n      }\n      return result;\n    } catch (error) {\n      console.error('Error en login con Google:', error);\n      setError(getErrorMessage(error));\n      throw error;\n    }\n  }\n  async function logout() {\n    try {\n      setError(null);\n      await signOut(auth);\n    } catch (error) {\n      console.error('Error en logout:', error);\n      setError(getErrorMessage(error));\n      throw error;\n    }\n  }\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      if (user) {\n        try {\n          const userDoc = await getDoc(doc(db, 'users', user.uid));\n          if (userDoc.exists()) {\n            const userData = userDoc.data();\n            if (userData.status === 'blocked') {\n              await signOut(auth);\n              setError('Usuario bloqueado');\n              return;\n            }\n            setCurrentUser({\n              ...user,\n              ...userData\n            });\n          }\n        } catch (error) {\n          console.error('Error al obtener datos del usuario:', error);\n          setError(getErrorMessage(error));\n        }\n      } else {\n        setCurrentUser(null);\n      }\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    loginWithGoogle,\n    loading,\n    error\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","onAuthStateChanged","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","updateProfile","signInWithPopup","doc","getDoc","setDoc","serverTimestamp","auth","db","googleProvider","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","error","setError","getErrorMessage","code","login","email","password","userCredential","user","uid","lastLogin","merge","console","register","name","role","Error","createdAt","status","log","displayName","loginWithGoogle","result","userDoc","exists","photoURL","logout","unsubscribe","userData","data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nessc/Semental fit ultima/sementalfit2/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { \r\n    onAuthStateChanged, \r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n    signOut,\r\n    updateProfile,\r\n    signInWithPopup\r\n} from 'firebase/auth';\r\nimport { doc, getDoc, setDoc, serverTimestamp } from 'firebase/firestore';\r\nimport { auth, db, googleProvider } from '../firebase';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Función para traducir errores de Firebase a mensajes amigables\r\n    function getErrorMessage(error) {\r\n        switch (error.code) {\r\n            case 'auth/email-already-in-use':\r\n                return 'Este correo electrónico ya está registrado. Por favor, inicia sesión o usa otro correo.';\r\n            case 'auth/invalid-email':\r\n                return 'El correo electrónico no es válido.';\r\n            case 'auth/operation-not-allowed':\r\n                return 'El registro con correo y contraseña no está habilitado.';\r\n            case 'auth/weak-password':\r\n                return 'La contraseña es demasiado débil. Debe tener al menos 6 caracteres.';\r\n            case 'auth/user-disabled':\r\n                return 'Esta cuenta ha sido deshabilitada.';\r\n            case 'auth/user-not-found':\r\n                return 'No existe una cuenta con este correo electrónico.';\r\n            case 'auth/wrong-password':\r\n                return 'Contraseña incorrecta.';\r\n            case 'auth/too-many-requests':\r\n                return 'Demasiados intentos fallidos. Por favor, intente más tarde.';\r\n            case 'auth/popup-closed-by-user':\r\n                return 'La ventana de inicio de sesión fue cerrada.';\r\n            case 'auth/popup-blocked':\r\n                return 'La ventana emergente fue bloqueada. Por favor, permita las ventanas emergentes.';\r\n            case 'auth/cancelled-popup-request':\r\n                return 'La solicitud de inicio de sesión fue cancelada.';\r\n            case 'auth/account-exists-with-different-credential':\r\n                return 'Ya existe una cuenta con este correo electrónico usando otro método de inicio de sesión.';\r\n            default:\r\n                return 'Ocurrió un error. Por favor, intente nuevamente.';\r\n        }\r\n    }\r\n\r\n    async function login(email, password) {\r\n        try {\r\n            setError(null);\r\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n            \r\n            // Actualizar último inicio de sesión\r\n            await setDoc(doc(db, 'users', userCredential.user.uid), {\r\n                lastLogin: serverTimestamp()\r\n            }, { merge: true });\r\n\r\n            return userCredential;\r\n        } catch (error) {\r\n            console.error('Error en login:', error);\r\n            setError(getErrorMessage(error));\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async function register(email, password, name, role = 1) {\r\n        try {\r\n            setError(null);\r\n            // Si se intenta crear un personal trainer (rol 2) y el usuario actual no es admin (rol 3), lanzar error\r\n            if (role === 2 && (!currentUser || currentUser.role !== 3)) {\r\n                throw new Error('Solo un administrador puede crear un Personal Trainer.');\r\n            }\r\n            const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n            \r\n            // Crear documento de usuario en Firestore\r\n            await setDoc(doc(db, 'users', userCredential.user.uid), {\r\n                email,\r\n                name,\r\n                role, // Guardar como número\r\n                createdAt: serverTimestamp(),\r\n                lastLogin: serverTimestamp(),\r\n                status: 'active'\r\n            });\r\n            console.log('Documento de usuario creado en Firestore:', userCredential.user.uid);\r\n\r\n            // Actualizar perfil de Firebase Auth\r\n            await updateProfile(userCredential.user, {\r\n                displayName: name\r\n            });\r\n\r\n            return userCredential;\r\n        } catch (error) {\r\n            console.error('Error en registro:', error);\r\n            setError(getErrorMessage(error));\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async function loginWithGoogle() {\r\n        try {\r\n            setError(null);\r\n            const result = await signInWithPopup(auth, googleProvider);\r\n            const user = result.user;\r\n            \r\n            // Verificar si el usuario ya existe en Firestore\r\n            const userDoc = await getDoc(doc(db, 'users', user.uid));\r\n            \r\n            if (!userDoc.exists()) {\r\n                // Si es un nuevo usuario, crear su documento en Firestore\r\n                await setDoc(doc(db, 'users', user.uid), {\r\n                    email: user.email,\r\n                    name: user.displayName,\r\n                    role: 'user',\r\n                    createdAt: serverTimestamp(),\r\n                    lastLogin: serverTimestamp(),\r\n                    status: 'active',\r\n                    photoURL: user.photoURL\r\n                });\r\n            } else {\r\n                // Si el usuario existe, actualizar último inicio de sesión\r\n                await setDoc(doc(db, 'users', user.uid), {\r\n                    lastLogin: serverTimestamp(),\r\n                    photoURL: user.photoURL\r\n                }, { merge: true });\r\n            }\r\n\r\n            return result;\r\n        } catch (error) {\r\n            console.error('Error en login con Google:', error);\r\n            setError(getErrorMessage(error));\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async function logout() {\r\n        try {\r\n            setError(null);\r\n            await signOut(auth);\r\n        } catch (error) {\r\n            console.error('Error en logout:', error);\r\n            setError(getErrorMessage(error));\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n            if (user) {\r\n                try {\r\n                    const userDoc = await getDoc(doc(db, 'users', user.uid));\r\n                    if (userDoc.exists()) {\r\n                        const userData = userDoc.data();\r\n                        if (userData.status === 'blocked') {\r\n                            await signOut(auth);\r\n                            setError('Usuario bloqueado');\r\n                            return;\r\n                        }\r\n                        setCurrentUser({\r\n                            ...user,\r\n                            ...userData\r\n                        });\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error al obtener datos del usuario:', error);\r\n                    setError(getErrorMessage(error));\r\n                }\r\n            } else {\r\n                setCurrentUser(null);\r\n            }\r\n            setLoading(false);\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        register,\r\n        logout,\r\n        loginWithGoogle,\r\n        loading,\r\n        error\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
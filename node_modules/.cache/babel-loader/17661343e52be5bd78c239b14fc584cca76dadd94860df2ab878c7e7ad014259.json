{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nessc\\\\AndroidStudioProjects\\\\sementalfit\\\\sementalfit2\\\\src\\\\components\\\\TrainingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { saveUserRoutine, getUserProfile, updateUserProgress, updateUserStats } from '../services/firebaseUtils';\n\n// Grupos musculares y sus ejercicios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MUSCLE_GROUPS = {\n  'Pecho': ['Press de Banca', 'Press Inclinado', 'Press Declinado', 'Aperturas con Mancuernas', 'Fondos en Paralelas', 'Pullover'],\n  'Espalda': ['Dominadas', 'Remo con Barra', 'Remo con Mancuernas', 'Pulldown', 'Pullover', 'Remo en Polea'],\n  'Hombros': ['Press Militar', 'Elevaciones Laterales', 'Elevaciones Frontales', 'Elevaciones Posteriores', 'Press Arnold', 'Face Pull'],\n  'Bíceps': ['Curl con Barra', 'Curl con Mancuernas', 'Curl Martillo', 'Curl Concentrado', 'Curl en Polea', 'Curl Invertido'],\n  'Tríceps': ['Extensiones en Polea', 'Extensiones con Mancuernas', 'Press Francés', 'Fondos en Banco', 'Extensiones Tras Nuca', 'Kickbacks'],\n  'Piernas': ['Sentadillas', 'Peso Muerto', 'Extensiones de Cuádriceps', 'Curl de Femoral', 'Prensa', 'Zancadas'],\n  'Abdominales': ['Crunches', 'Plancha', 'Elevaciones de Piernas', 'Russian Twists', 'Ab Wheel', 'Leg Raises']\n};\nconst DAYS_OF_WEEK = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\nconst TrainingPage = () => {\n  _s();\n  var _userRoutine$selected;\n  const [error, setError] = useState('');\n  const [userRoutine, setUserRoutine] = useState({});\n  const [profile, setProfile] = useState(null);\n  const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\n  const [selectedMuscleGroup, setSelectedMuscleGroup] = useState('');\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [restTimer, setRestTimer] = useState(90); // 90 segundos por defecto\n  const [timerActive, setTimerActive] = useState(false);\n  const [timerTime, setTimerTime] = useState(0);\n  useEffect(() => {\n    // Inicializar la rutina para cada día si no existe\n    const initializeRoutine = () => {\n      const newRoutine = {};\n      DAYS_OF_WEEK.forEach(day => {\n        if (!userRoutine[day]) {\n          newRoutine[day] = [];\n        }\n      });\n      if (Object.keys(newRoutine).length > 0) {\n        setUserRoutine(prev => ({\n          ...prev,\n          ...newRoutine\n        }));\n      }\n    };\n    initializeRoutine();\n  }, []);\n  useEffect(() => {\n    let interval;\n    if (timerActive && timerTime > 0) {\n      interval = setInterval(() => {\n        setTimerTime(prev => prev - 1);\n      }, 1000);\n    } else if (timerTime === 0) {\n      setTimerActive(false);\n    }\n    return () => clearInterval(interval);\n  }, [timerActive, timerTime]);\n  const handleAddExercise = () => {\n    if (!selectedMuscleGroup || !selectedExercise) {\n      setError('Por favor selecciona un grupo muscular y un ejercicio');\n      return;\n    }\n    const newExercise = {\n      id: Date.now(),\n      name: selectedExercise,\n      muscleGroup: selectedMuscleGroup,\n      series: [{\n        reps: 0,\n        weight: 0,\n        completed: false,\n        restTime: restTimer\n      }]\n    };\n    const newRoutine = {\n      ...userRoutine\n    };\n    newRoutine[selectedDay] = [...(newRoutine[selectedDay] || []), newExercise];\n    setUserRoutine(newRoutine);\n    saveUserRoutine('default', newRoutine);\n\n    // Resetear selecciones\n    setSelectedMuscleGroup('');\n    setSelectedExercise('');\n  };\n  const handleDeleteExercise = async (exerciseId, day) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar este ejercicio?')) {\n      try {\n        const newRoutine = {\n          ...userRoutine\n        };\n        newRoutine[day] = newRoutine[day].filter(ex => ex.id !== exerciseId);\n        await saveUserRoutine('default', newRoutine);\n        setUserRoutine(newRoutine);\n      } catch (error) {\n        console.error('Error al eliminar ejercicio:', error);\n        setError('Error al eliminar ejercicio');\n      }\n    }\n  };\n  const updateExerciseInRoutine = async (exerciseId, updatedExercise, day) => {\n    try {\n      const newRoutine = {\n        ...userRoutine\n      };\n      const exerciseIndex = newRoutine[day].findIndex(ex => ex.id === exerciseId);\n      if (exerciseIndex !== -1) {\n        const existingExercise = newRoutine[day][exerciseIndex];\n        const updatedSeries = existingExercise.series.map((serie, index) => {\n          const updatedSerie = updatedExercise.series[index];\n          if (updatedSerie) {\n            return {\n              ...serie,\n              reps: updatedSerie.reps !== undefined ? Number(updatedSerie.reps) : serie.reps,\n              weight: updatedSerie.weight !== undefined ? Number(updatedSerie.weight) : serie.weight,\n              completed: updatedSerie.completed !== undefined ? updatedSerie.completed : serie.completed,\n              restTime: updatedSerie.restTime !== undefined ? Number(updatedSerie.restTime) : serie.restTime\n            };\n          }\n          return serie;\n        });\n        newRoutine[day][exerciseIndex] = {\n          ...existingExercise,\n          ...updatedExercise,\n          series: updatedSeries\n        };\n        await saveUserRoutine('default', newRoutine);\n        setUserRoutine(newRoutine);\n        const hasWeightChanges = updatedSeries.some((serie, index) => serie.weight !== existingExercise.series[index].weight || serie.reps !== existingExercise.series[index].reps);\n        if (hasWeightChanges) {\n          var _userProfile$stats, _userProfile$stats2;\n          await updateUserProgress('default', 'weight_update');\n          const userProfile = await getUserProfile('default');\n          setProfile(userProfile);\n          const totalWeight = updatedSeries.reduce((sum, serie) => sum + Number(serie.weight) * Number(serie.reps), 0);\n          await updateUserStats('default', {\n            totalExercises: ((userProfile === null || userProfile === void 0 ? void 0 : (_userProfile$stats = userProfile.stats) === null || _userProfile$stats === void 0 ? void 0 : _userProfile$stats.totalExercises) || 0) + 1,\n            totalWeightLifted: ((userProfile === null || userProfile === void 0 ? void 0 : (_userProfile$stats2 = userProfile.stats) === null || _userProfile$stats2 === void 0 ? void 0 : _userProfile$stats2.totalWeightLifted) || 0) + totalWeight\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Error al actualizar ejercicio:', error);\n      setError('Error al actualizar ejercicio en la rutina');\n    }\n  };\n  const startTimer = restTime => {\n    setTimerTime(restTime);\n    setTimerActive(true);\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-black text-white p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-8\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-yellow-500\",\n          children: \"SementalFit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-900/20 text-red-500 p-4 rounded-lg mb-6\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-900 rounded-xl p-6 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Selecciona el d\\xEDa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-7 gap-2\",\n          children: DAYS_OF_WEEK.map(day => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedDay(day),\n            className: `p-2 rounded-lg transition-colors ${selectedDay === day ? 'bg-yellow-500 text-black' : 'bg-gray-800 hover:bg-gray-700'}`,\n            children: day.slice(0, 3)\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-900 rounded-xl p-6 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Agregar Ejercicio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-300 mb-2\",\n              children: \"Grupo Muscular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedMuscleGroup,\n              onChange: e => {\n                setSelectedMuscleGroup(e.target.value);\n                setSelectedExercise('');\n              },\n              className: \"w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-yellow-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Selecciona un grupo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 33\n              }, this), Object.keys(MUSCLE_GROUPS).map(group => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: group,\n                children: group\n              }, group, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-300 mb-2\",\n              children: \"Ejercicio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedExercise,\n              onChange: e => setSelectedExercise(e.target.value),\n              className: \"w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-yellow-500\",\n              disabled: !selectedMuscleGroup,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Selecciona un ejercicio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, this), selectedMuscleGroup && MUSCLE_GROUPS[selectedMuscleGroup].map(exercise => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: exercise,\n                children: exercise\n              }, exercise, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-300 mb-2\",\n            children: \"Tiempo de Descanso (segundos)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: restTimer,\n            onChange: e => setRestTimer(Number(e.target.value)),\n            className: \"w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-yellow-500\",\n            min: \"0\",\n            step: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddExercise,\n          className: \"w-full bg-yellow-500 text-black py-3 px-4 rounded-lg hover:bg-yellow-600 transition-colors font-semibold\",\n          children: \"Agregar Ejercicio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-900 rounded-xl p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: [\"Rutina de \", selectedDay]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), ((_userRoutine$selected = userRoutine[selectedDay]) === null || _userRoutine$selected === void 0 ? void 0 : _userRoutine$selected.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: userRoutine[selectedDay].map(exercise => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 p-4 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-start mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"text-lg font-medium\",\n                  children: exercise.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-400\",\n                  children: exercise.muscleGroup\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteExercise(exercise.id, selectedDay),\n                className: \"text-red-500 hover:text-red-400\",\n                children: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: exercise.series.map((serie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-400\",\n                  children: [\"Serie \", index + 1, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: serie.reps,\n                  onChange: e => {\n                    const updatedExercise = {\n                      ...exercise,\n                      series: exercise.series.map((s, i) => i === index ? {\n                        ...s,\n                        reps: e.target.value\n                      } : s)\n                    };\n                    updateExerciseInRoutine(exercise.id, updatedExercise, selectedDay);\n                  },\n                  className: \"w-20 bg-gray-700 rounded px-2 py-1\",\n                  placeholder: \"Reps\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: serie.weight,\n                  onChange: e => {\n                    const updatedExercise = {\n                      ...exercise,\n                      series: exercise.series.map((s, i) => i === index ? {\n                        ...s,\n                        weight: e.target.value\n                      } : s)\n                    };\n                    updateExerciseInRoutine(exercise.id, updatedExercise, selectedDay);\n                  },\n                  className: \"w-20 bg-gray-700 rounded px-2 py-1\",\n                  placeholder: \"Peso\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: serie.completed,\n                  onChange: e => {\n                    const updatedExercise = {\n                      ...exercise,\n                      series: exercise.series.map((s, i) => i === index ? {\n                        ...s,\n                        completed: e.target.checked\n                      } : s)\n                    };\n                    updateExerciseInRoutine(exercise.id, updatedExercise, selectedDay);\n                  },\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: serie.restTime,\n                    onChange: e => {\n                      const updatedExercise = {\n                        ...exercise,\n                        series: exercise.series.map((s, i) => i === index ? {\n                          ...s,\n                          restTime: Number(e.target.value)\n                        } : s)\n                      };\n                      updateExerciseInRoutine(exercise.id, updatedExercise, selectedDay);\n                    },\n                    className: \"w-20 bg-gray-700 rounded px-2 py-1\",\n                    placeholder: \"Descanso\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => startTimer(serie.restTime),\n                    className: \"px-3 py-1 bg-yellow-500 text-black rounded hover:bg-yellow-600\",\n                    children: timerActive && timerTime > 0 ? formatTime(timerTime) : 'Iniciar'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 37\n            }, this)]\n          }, exercise.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: \"No tienes ejercicios en tu rutina. Agrega algunos ejercicios para comenzar.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 9\n  }, this);\n};\n_s(TrainingPage, \"plBONyLnMjNfhEhdlvAdH2DqHEU=\");\n_c = TrainingPage;\nexport default TrainingPage;\nvar _c;\n$RefreshReg$(_c, \"TrainingPage\");","map":{"version":3,"names":["React","useState","useEffect","saveUserRoutine","getUserProfile","updateUserProgress","updateUserStats","jsxDEV","_jsxDEV","MUSCLE_GROUPS","DAYS_OF_WEEK","TrainingPage","_s","_userRoutine$selected","error","setError","userRoutine","setUserRoutine","profile","setProfile","selectedDay","setSelectedDay","selectedMuscleGroup","setSelectedMuscleGroup","selectedExercise","setSelectedExercise","restTimer","setRestTimer","timerActive","setTimerActive","timerTime","setTimerTime","initializeRoutine","newRoutine","forEach","day","Object","keys","length","prev","interval","setInterval","clearInterval","handleAddExercise","newExercise","id","Date","now","name","muscleGroup","series","reps","weight","completed","restTime","handleDeleteExercise","exerciseId","window","confirm","filter","ex","console","updateExerciseInRoutine","updatedExercise","exerciseIndex","findIndex","existingExercise","updatedSeries","map","serie","index","updatedSerie","undefined","Number","hasWeightChanges","some","_userProfile$stats","_userProfile$stats2","userProfile","totalWeight","reduce","sum","totalExercises","stats","totalWeightLifted","startTimer","formatTime","seconds","mins","Math","floor","secs","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","slice","value","onChange","e","target","group","disabled","exercise","type","min","step","s","i","placeholder","checked","_c","$RefreshReg$"],"sources":["C:/Users/nessc/AndroidStudioProjects/sementalfit/sementalfit2/src/components/TrainingPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { saveUserRoutine, getUserProfile, updateUserProgress, updateUserStats } from '../services/firebaseUtils';\r\n\r\n// Grupos musculares y sus ejercicios\r\nconst MUSCLE_GROUPS = {\r\n    'Pecho': [\r\n        'Press de Banca',\r\n        'Press Inclinado',\r\n        'Press Declinado',\r\n        'Aperturas con Mancuernas',\r\n        'Fondos en Paralelas',\r\n        'Pullover'\r\n    ],\r\n    'Espalda': [\r\n        'Dominadas',\r\n        'Remo con Barra',\r\n        'Remo con Mancuernas',\r\n        'Pulldown',\r\n        'Pullover',\r\n        'Remo en Polea'\r\n    ],\r\n    'Hombros': [\r\n        'Press Militar',\r\n        'Elevaciones Laterales',\r\n        'Elevaciones Frontales',\r\n        'Elevaciones Posteriores',\r\n        'Press Arnold',\r\n        'Face Pull'\r\n    ],\r\n    'Bíceps': [\r\n        'Curl con Barra',\r\n        'Curl con Mancuernas',\r\n        'Curl Martillo',\r\n        'Curl Concentrado',\r\n        'Curl en Polea',\r\n        'Curl Invertido'\r\n    ],\r\n    'Tríceps': [\r\n        'Extensiones en Polea',\r\n        'Extensiones con Mancuernas',\r\n        'Press Francés',\r\n        'Fondos en Banco',\r\n        'Extensiones Tras Nuca',\r\n        'Kickbacks'\r\n    ],\r\n    'Piernas': [\r\n        'Sentadillas',\r\n        'Peso Muerto',\r\n        'Extensiones de Cuádriceps',\r\n        'Curl de Femoral',\r\n        'Prensa',\r\n        'Zancadas'\r\n    ],\r\n    'Abdominales': [\r\n        'Crunches',\r\n        'Plancha',\r\n        'Elevaciones de Piernas',\r\n        'Russian Twists',\r\n        'Ab Wheel',\r\n        'Leg Raises'\r\n    ]\r\n};\r\n\r\nconst DAYS_OF_WEEK = [\r\n    'Lunes',\r\n    'Martes',\r\n    'Miércoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado',\r\n    'Domingo'\r\n];\r\n\r\nconst TrainingPage = () => {\r\n    const [error, setError] = useState('');\r\n    const [userRoutine, setUserRoutine] = useState({});\r\n    const [profile, setProfile] = useState(null);\r\n    const [selectedDay, setSelectedDay] = useState(DAYS_OF_WEEK[0]);\r\n    const [selectedMuscleGroup, setSelectedMuscleGroup] = useState('');\r\n    const [selectedExercise, setSelectedExercise] = useState('');\r\n    const [restTimer, setRestTimer] = useState(90); // 90 segundos por defecto\r\n    const [timerActive, setTimerActive] = useState(false);\r\n    const [timerTime, setTimerTime] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // Inicializar la rutina para cada día si no existe\r\n        const initializeRoutine = () => {\r\n            const newRoutine = {};\r\n            DAYS_OF_WEEK.forEach(day => {\r\n                if (!userRoutine[day]) {\r\n                    newRoutine[day] = [];\r\n                }\r\n            });\r\n            if (Object.keys(newRoutine).length > 0) {\r\n                setUserRoutine(prev => ({ ...prev, ...newRoutine }));\r\n            }\r\n        };\r\n        initializeRoutine();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n        if (timerActive && timerTime > 0) {\r\n            interval = setInterval(() => {\r\n                setTimerTime(prev => prev - 1);\r\n            }, 1000);\r\n        } else if (timerTime === 0) {\r\n            setTimerActive(false);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [timerActive, timerTime]);\r\n\r\n    const handleAddExercise = () => {\r\n        if (!selectedMuscleGroup || !selectedExercise) {\r\n            setError('Por favor selecciona un grupo muscular y un ejercicio');\r\n            return;\r\n        }\r\n\r\n        const newExercise = {\r\n            id: Date.now(),\r\n            name: selectedExercise,\r\n            muscleGroup: selectedMuscleGroup,\r\n            series: [\r\n                { reps: 0, weight: 0, completed: false, restTime: restTimer }\r\n            ]\r\n        };\r\n\r\n        const newRoutine = { ...userRoutine };\r\n        newRoutine[selectedDay] = [...(newRoutine[selectedDay] || []), newExercise];\r\n        setUserRoutine(newRoutine);\r\n        saveUserRoutine('default', newRoutine);\r\n\r\n        // Resetear selecciones\r\n        setSelectedMuscleGroup('');\r\n        setSelectedExercise('');\r\n    };\r\n\r\n    const handleDeleteExercise = async (exerciseId, day) => {\r\n        if (window.confirm('¿Estás seguro de que quieres eliminar este ejercicio?')) {\r\n            try {\r\n                const newRoutine = { ...userRoutine };\r\n                newRoutine[day] = newRoutine[day].filter(ex => ex.id !== exerciseId);\r\n                await saveUserRoutine('default', newRoutine);\r\n                setUserRoutine(newRoutine);\r\n            } catch (error) {\r\n                console.error('Error al eliminar ejercicio:', error);\r\n                setError('Error al eliminar ejercicio');\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateExerciseInRoutine = async (exerciseId, updatedExercise, day) => {\r\n        try {\r\n            const newRoutine = { ...userRoutine };\r\n            const exerciseIndex = newRoutine[day].findIndex(\r\n                ex => ex.id === exerciseId\r\n            );\r\n\r\n            if (exerciseIndex !== -1) {\r\n                const existingExercise = newRoutine[day][exerciseIndex];\r\n                const updatedSeries = existingExercise.series.map((serie, index) => {\r\n                    const updatedSerie = updatedExercise.series[index];\r\n                    if (updatedSerie) {\r\n                        return {\r\n                            ...serie,\r\n                            reps: updatedSerie.reps !== undefined ? Number(updatedSerie.reps) : serie.reps,\r\n                            weight: updatedSerie.weight !== undefined ? Number(updatedSerie.weight) : serie.weight,\r\n                            completed: updatedSerie.completed !== undefined ? updatedSerie.completed : serie.completed,\r\n                            restTime: updatedSerie.restTime !== undefined ? Number(updatedSerie.restTime) : serie.restTime\r\n                        };\r\n                    }\r\n                    return serie;\r\n                });\r\n\r\n                newRoutine[day][exerciseIndex] = {\r\n                    ...existingExercise,\r\n                    ...updatedExercise,\r\n                    series: updatedSeries\r\n                };\r\n\r\n                await saveUserRoutine('default', newRoutine);\r\n                setUserRoutine(newRoutine);\r\n\r\n                const hasWeightChanges = updatedSeries.some((serie, index) => \r\n                    serie.weight !== existingExercise.series[index].weight ||\r\n                    serie.reps !== existingExercise.series[index].reps\r\n                );\r\n\r\n                if (hasWeightChanges) {\r\n                    await updateUserProgress('default', 'weight_update');\r\n                    const userProfile = await getUserProfile('default');\r\n                    setProfile(userProfile);\r\n\r\n                    const totalWeight = updatedSeries.reduce((sum, serie) => \r\n                        sum + (Number(serie.weight) * Number(serie.reps)), 0);\r\n                    \r\n                    await updateUserStats('default', {\r\n                        totalExercises: (userProfile?.stats?.totalExercises || 0) + 1,\r\n                        totalWeightLifted: (userProfile?.stats?.totalWeightLifted || 0) + totalWeight\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al actualizar ejercicio:', error);\r\n            setError('Error al actualizar ejercicio en la rutina');\r\n        }\r\n    };\r\n\r\n    const startTimer = (restTime) => {\r\n        setTimerTime(restTime);\r\n        setTimerActive(true);\r\n    };\r\n\r\n    const formatTime = (seconds) => {\r\n        const mins = Math.floor(seconds / 60);\r\n        const secs = seconds % 60;\r\n        return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-black text-white p-4\">\r\n            <div className=\"max-w-4xl mx-auto\">\r\n                <div className=\"flex justify-between items-center mb-8\">\r\n                    <h1 className=\"text-3xl font-bold text-yellow-500\">SementalFit</h1>\r\n                </div>\r\n\r\n                {error && (\r\n                    <div className=\"bg-red-900/20 text-red-500 p-4 rounded-lg mb-6\">\r\n                        {error}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Selector de día */}\r\n                <div className=\"bg-gray-900 rounded-xl p-6 mb-6\">\r\n                    <h2 className=\"text-2xl font-semibold mb-4\">Selecciona el día</h2>\r\n                    <div className=\"grid grid-cols-7 gap-2\">\r\n                        {DAYS_OF_WEEK.map(day => (\r\n                            <button\r\n                                key={day}\r\n                                onClick={() => setSelectedDay(day)}\r\n                                className={`p-2 rounded-lg transition-colors ${\r\n                                    selectedDay === day\r\n                                        ? 'bg-yellow-500 text-black'\r\n                                        : 'bg-gray-800 hover:bg-gray-700'\r\n                                }`}\r\n                            >\r\n                                {day.slice(0, 3)}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Agregar ejercicio */}\r\n                <div className=\"bg-gray-900 rounded-xl p-6 mb-6\">\r\n                    <h2 className=\"text-2xl font-semibold mb-4\">Agregar Ejercicio</h2>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                                Grupo Muscular\r\n                            </label>\r\n                            <select\r\n                                value={selectedMuscleGroup}\r\n                                onChange={(e) => {\r\n                                    setSelectedMuscleGroup(e.target.value);\r\n                                    setSelectedExercise('');\r\n                                }}\r\n                                className=\"w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-yellow-500\"\r\n                            >\r\n                                <option value=\"\">Selecciona un grupo</option>\r\n                                {Object.keys(MUSCLE_GROUPS).map(group => (\r\n                                    <option key={group} value={group}>{group}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                                Ejercicio\r\n                            </label>\r\n                            <select\r\n                                value={selectedExercise}\r\n                                onChange={(e) => setSelectedExercise(e.target.value)}\r\n                                className=\"w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-yellow-500\"\r\n                                disabled={!selectedMuscleGroup}\r\n                            >\r\n                                <option value=\"\">Selecciona un ejercicio</option>\r\n                                {selectedMuscleGroup && MUSCLE_GROUPS[selectedMuscleGroup].map(exercise => (\r\n                                    <option key={exercise} value={exercise}>{exercise}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                            Tiempo de Descanso (segundos)\r\n                        </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={restTimer}\r\n                            onChange={(e) => setRestTimer(Number(e.target.value))}\r\n                            className=\"w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-yellow-500\"\r\n                            min=\"0\"\r\n                            step=\"5\"\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        onClick={handleAddExercise}\r\n                        className=\"w-full bg-yellow-500 text-black py-3 px-4 rounded-lg hover:bg-yellow-600 transition-colors font-semibold\"\r\n                    >\r\n                        Agregar Ejercicio\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Lista de ejercicios */}\r\n                <div className=\"bg-gray-900 rounded-xl p-6\">\r\n                    <h3 className=\"text-xl font-semibold mb-4\">Rutina de {selectedDay}</h3>\r\n                    {userRoutine[selectedDay]?.length > 0 ? (\r\n                        <div className=\"space-y-4\">\r\n                            {userRoutine[selectedDay].map((exercise) => (\r\n                                <div key={exercise.id} className=\"bg-gray-800 p-4 rounded-lg\">\r\n                                    <div className=\"flex justify-between items-start mb-2\">\r\n                                        <div>\r\n                                            <h5 className=\"text-lg font-medium\">{exercise.name}</h5>\r\n                                            <p className=\"text-sm text-gray-400\">{exercise.muscleGroup}</p>\r\n                                        </div>\r\n                                        <button\r\n                                            onClick={() => handleDeleteExercise(exercise.id, selectedDay)}\r\n                                            className=\"text-red-500 hover:text-red-400\"\r\n                                        >\r\n                                            Eliminar\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"space-y-2\">\r\n                                        {exercise.series.map((serie, index) => (\r\n                                            <div key={index} className=\"flex items-center space-x-4\">\r\n                                                <span className=\"text-gray-400\">Serie {index + 1}:</span>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    value={serie.reps}\r\n                                                    onChange={(e) => {\r\n                                                        const updatedExercise = {\r\n                                                            ...exercise,\r\n                                                            series: exercise.series.map((s, i) =>\r\n                                                                i === index ? { ...s, reps: e.target.value } : s\r\n                                                            )\r\n                                                        };\r\n                                                        updateExerciseInRoutine(exercise.id, updatedExercise, selectedDay);\r\n                                                    }}\r\n                                                    className=\"w-20 bg-gray-700 rounded px-2 py-1\"\r\n                                                    placeholder=\"Reps\"\r\n                                                />\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    value={serie.weight}\r\n                                                    onChange={(e) => {\r\n                                                        const updatedExercise = {\r\n                                                            ...exercise,\r\n                                                            series: exercise.series.map((s, i) =>\r\n                                                                i === index ? { ...s, weight: e.target.value } : s\r\n                                                            )\r\n                                                        };\r\n                                                        updateExerciseInRoutine(exercise.id, updatedExercise, selectedDay);\r\n                                                    }}\r\n                                                    className=\"w-20 bg-gray-700 rounded px-2 py-1\"\r\n                                                    placeholder=\"Peso\"\r\n                                                />\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    checked={serie.completed}\r\n                                                    onChange={(e) => {\r\n                                                        const updatedExercise = {\r\n                                                            ...exercise,\r\n                                                            series: exercise.series.map((s, i) =>\r\n                                                                i === index ? { ...s, completed: e.target.checked } : s\r\n                                                            )\r\n                                                        };\r\n                                                        updateExerciseInRoutine(exercise.id, updatedExercise, selectedDay);\r\n                                                    }}\r\n                                                    className=\"w-4 h-4\"\r\n                                                />\r\n                                                <div className=\"flex items-center space-x-2\">\r\n                                                    <input\r\n                                                        type=\"number\"\r\n                                                        value={serie.restTime}\r\n                                                        onChange={(e) => {\r\n                                                            const updatedExercise = {\r\n                                                                ...exercise,\r\n                                                                series: exercise.series.map((s, i) =>\r\n                                                                    i === index ? { ...s, restTime: Number(e.target.value) } : s\r\n                                                                )\r\n                                                            };\r\n                                                            updateExerciseInRoutine(exercise.id, updatedExercise, selectedDay);\r\n                                                        }}\r\n                                                        className=\"w-20 bg-gray-700 rounded px-2 py-1\"\r\n                                                        placeholder=\"Descanso\"\r\n                                                    />\r\n                                                    <button\r\n                                                        onClick={() => startTimer(serie.restTime)}\r\n                                                        className=\"px-3 py-1 bg-yellow-500 text-black rounded hover:bg-yellow-600\"\r\n                                                    >\r\n                                                        {timerActive && timerTime > 0 ? formatTime(timerTime) : 'Iniciar'}\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <p className=\"text-gray-400\">\r\n                            No tienes ejercicios en tu rutina. Agrega algunos ejercicios para comenzar.\r\n                        </p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TrainingPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
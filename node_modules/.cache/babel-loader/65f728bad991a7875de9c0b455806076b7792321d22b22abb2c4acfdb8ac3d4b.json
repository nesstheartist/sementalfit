{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nessc\\\\AndroidStudioProjects\\\\sementalfit\\\\sementalfit2\\\\src\\\\components\\\\TrainingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { saveUserRoutine, getUserProfile, updateUserProgress, updateUserStats } from '../services/firebaseUtils';\nimport { FaHome, FaDumbbell, FaAppleAlt, FaShoppingCart, FaSignOutAlt } from 'react-icons/fa';\n\n// Grupos musculares y sus ejercicios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MUSCLE_GROUPS = {\n  'Pecho': ['Press de Banca', 'Press Inclinado', 'Press Declinado', 'Aperturas con Mancuernas', 'Fondos en Paralelas', 'Pullover'],\n  'Espalda': ['Dominadas', 'Remo con Barra', 'Remo con Mancuernas', 'Pulldown', 'Pullover', 'Remo en Polea'],\n  'Hombros': ['Press Militar', 'Elevaciones Laterales', 'Elevaciones Frontales', 'Elevaciones Posteriores', 'Press Arnold', 'Face Pull'],\n  'Bíceps': ['Curl con Barra', 'Curl con Mancuernas', 'Curl Martillo', 'Curl Concentrado', 'Curl en Polea', 'Curl Invertido'],\n  'Tríceps': ['Extensiones en Polea', 'Extensiones con Mancuernas', 'Press Francés', 'Fondos en Banco', 'Extensiones Tras Nuca', 'Kickbacks'],\n  'Piernas': ['Sentadillas', 'Peso Muerto', 'Extensiones de Cuádriceps', 'Curl de Femoral', 'Prensa', 'Zancadas'],\n  'Abdominales': ['Crunches', 'Plancha', 'Elevaciones de Piernas', 'Russian Twists', 'Ab Wheel', 'Leg Raises']\n};\nconst DAYS_OF_WEEK = ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'];\nconst TrainingPage = () => {\n  _s();\n  var _userRoutine$selected;\n  const [error, setError] = useState('');\n  const [userRoutine, setUserRoutine] = useState({});\n  const [profile, setProfile] = useState(null);\n  const [selectedDay, setSelectedDay] = useState(() => {\n    const today = new Date().getDay(); // 0 es domingo, 1 es lunes, etc.\n    return DAYS_OF_WEEK[today];\n  });\n  const [selectedMuscleGroup, setSelectedMuscleGroup] = useState('');\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [restTimer, setRestTimer] = useState(90); // 90 segundos por defecto\n  const [timerActive, setTimerActive] = useState(false);\n  const [timerTime, setTimerTime] = useState(0);\n  const [timerStates, setTimerStates] = useState({});\n  useEffect(() => {\n    // Inicializar la rutina para cada día si no existe\n    const initializeRoutine = () => {\n      const newRoutine = {};\n      DAYS_OF_WEEK.forEach(day => {\n        if (!userRoutine[day]) {\n          newRoutine[day] = [];\n        }\n      });\n      if (Object.keys(newRoutine).length > 0) {\n        setUserRoutine(prev => ({\n          ...prev,\n          ...newRoutine\n        }));\n      }\n    };\n    initializeRoutine();\n  }, []);\n  useEffect(() => {\n    let intervals = {};\n    Object.entries(timerStates).forEach(([key, state]) => {\n      if (state.active && state.time > 0) {\n        intervals[key] = setInterval(() => {\n          setTimerStates(prev => ({\n            ...prev,\n            [key]: {\n              ...prev[key],\n              time: prev[key].time - 1\n            }\n          }));\n        }, 1000);\n      } else if (state.time === 0) {\n        setTimerStates(prev => ({\n          ...prev,\n          [key]: {\n            ...prev[key],\n            active: false\n          }\n        }));\n      }\n    });\n    return () => {\n      Object.values(intervals).forEach(interval => clearInterval(interval));\n    };\n  }, [timerStates]);\n  const handleAddExercise = () => {\n    if (!selectedMuscleGroup || !selectedExercise) {\n      setError('Por favor selecciona un grupo muscular y un ejercicio');\n      return;\n    }\n    const newExercise = {\n      id: Date.now(),\n      name: selectedExercise,\n      muscleGroup: selectedMuscleGroup,\n      series: [{\n        reps: '',\n        weight: '',\n        completed: false,\n        restTime: 60\n      }]\n    };\n    const newRoutine = {\n      ...userRoutine\n    };\n    newRoutine[selectedDay] = [...(newRoutine[selectedDay] || []), newExercise];\n    setUserRoutine(newRoutine);\n    saveUserRoutine('default', newRoutine);\n    setSelectedMuscleGroup('');\n    setSelectedExercise('');\n  };\n  const addSeries = (exerciseId, day) => {\n    const newRoutine = {\n      ...userRoutine\n    };\n    const exerciseIndex = newRoutine[day].findIndex(ex => ex.id === exerciseId);\n    if (exerciseIndex !== -1) {\n      const exercise = newRoutine[day][exerciseIndex];\n      const lastSeries = exercise.series[exercise.series.length - 1];\n      newRoutine[day][exerciseIndex] = {\n        ...exercise,\n        series: [...exercise.series, {\n          reps: lastSeries.reps,\n          weight: lastSeries.weight,\n          completed: false,\n          restTime: lastSeries.restTime\n        }]\n      };\n      setUserRoutine(newRoutine);\n      saveUserRoutine('default', newRoutine);\n    }\n  };\n  const removeSeries = (exerciseId, day, seriesIndex) => {\n    const newRoutine = {\n      ...userRoutine\n    };\n    const exerciseIndex = newRoutine[day].findIndex(ex => ex.id === exerciseId);\n    if (exerciseIndex !== -1 && newRoutine[day][exerciseIndex].series.length > 1) {\n      newRoutine[day][exerciseIndex] = {\n        ...newRoutine[day][exerciseIndex],\n        series: newRoutine[day][exerciseIndex].series.filter((_, index) => index !== seriesIndex)\n      };\n      setUserRoutine(newRoutine);\n      saveUserRoutine('default', newRoutine);\n    }\n  };\n  const handleDeleteExercise = async (exerciseId, day) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar este ejercicio?')) {\n      try {\n        const newRoutine = {\n          ...userRoutine\n        };\n        newRoutine[day] = newRoutine[day].filter(ex => ex.id !== exerciseId);\n        await saveUserRoutine('default', newRoutine);\n        setUserRoutine(newRoutine);\n      } catch (error) {\n        console.error('Error al eliminar ejercicio:', error);\n        setError('Error al eliminar ejercicio');\n      }\n    }\n  };\n  const updateExerciseInRoutine = async (exerciseId, updatedExercise, day) => {\n    try {\n      const newRoutine = {\n        ...userRoutine\n      };\n      const exerciseIndex = newRoutine[day].findIndex(ex => ex.id === exerciseId);\n      if (exerciseIndex !== -1) {\n        const existingExercise = newRoutine[day][exerciseIndex];\n        const updatedSeries = existingExercise.series.map((serie, index) => {\n          const updatedSerie = updatedExercise.series[index];\n          if (updatedSerie) {\n            return {\n              ...serie,\n              reps: updatedSerie.reps !== undefined ? Number(updatedSerie.reps) : serie.reps,\n              weight: updatedSerie.weight !== undefined ? Number(updatedSerie.weight) : serie.weight,\n              completed: updatedSerie.completed !== undefined ? updatedSerie.completed : serie.completed,\n              restTime: updatedSerie.restTime !== undefined ? Number(updatedSerie.restTime) : serie.restTime\n            };\n          }\n          return serie;\n        });\n        newRoutine[day][exerciseIndex] = {\n          ...existingExercise,\n          ...updatedExercise,\n          series: updatedSeries\n        };\n        await saveUserRoutine('default', newRoutine);\n        setUserRoutine(newRoutine);\n        const hasWeightChanges = updatedSeries.some((serie, index) => serie.weight !== existingExercise.series[index].weight || serie.reps !== existingExercise.series[index].reps);\n        if (hasWeightChanges) {\n          var _userProfile$stats, _userProfile$stats2;\n          await updateUserProgress('default', 'weight_update');\n          const userProfile = await getUserProfile('default');\n          setProfile(userProfile);\n          const totalWeight = updatedSeries.reduce((sum, serie) => sum + Number(serie.weight) * Number(serie.reps), 0);\n          await updateUserStats('default', {\n            totalExercises: ((userProfile === null || userProfile === void 0 ? void 0 : (_userProfile$stats = userProfile.stats) === null || _userProfile$stats === void 0 ? void 0 : _userProfile$stats.totalExercises) || 0) + 1,\n            totalWeightLifted: ((userProfile === null || userProfile === void 0 ? void 0 : (_userProfile$stats2 = userProfile.stats) === null || _userProfile$stats2 === void 0 ? void 0 : _userProfile$stats2.totalWeightLifted) || 0) + totalWeight\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Error al actualizar ejercicio:', error);\n      setError('Error al actualizar ejercicio en la rutina');\n    }\n  };\n  const startTimer = (exerciseId, seriesIndex, restTime) => {\n    const timerKey = `${exerciseId}-${seriesIndex}`;\n    setTimerStates(prev => ({\n      ...prev,\n      [timerKey]: {\n        time: restTime,\n        active: true\n      }\n    }));\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-black text-white p-2 pb-16\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-sm mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-bold text-yellow-500\",\n          children: \"SementalFit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-900/20 text-red-500 p-2 rounded-lg mb-3 text-xs\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-900 rounded-xl p-3 mb-3 overflow-x-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"D\\xEDa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-1 min-w-max\",\n          children: DAYS_OF_WEEK.map(day => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedDay(day),\n            className: `px-2 py-1 rounded-lg transition-colors text-sm ${selectedDay === day ? 'bg-yellow-500 text-black' : 'bg-gray-800 hover:bg-gray-700'}`,\n            children: day.slice(0, 3)\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-900 rounded-xl p-3 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Agregar Ejercicio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs font-medium text-gray-300 mb-1\",\n              children: \"Grupo Muscular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedMuscleGroup,\n              onChange: e => {\n                setSelectedMuscleGroup(e.target.value);\n                setSelectedExercise('');\n              },\n              className: \"w-full px-2 py-1 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-yellow-500 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Selecciona un grupo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 33\n              }, this), Object.keys(MUSCLE_GROUPS).map(group => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: group,\n                children: group\n              }, group, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs font-medium text-gray-300 mb-1\",\n              children: \"Ejercicio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedExercise,\n              onChange: e => setSelectedExercise(e.target.value),\n              className: \"w-full px-2 py-1 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-yellow-500 text-sm\",\n              disabled: !selectedMuscleGroup,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Selecciona un ejercicio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 33\n              }, this), selectedMuscleGroup && MUSCLE_GROUPS[selectedMuscleGroup].map(exercise => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: exercise,\n                children: exercise\n              }, exercise, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddExercise,\n            className: \"w-full bg-yellow-500 text-black py-1 px-3 rounded-lg hover:bg-yellow-600 transition-colors font-semibold text-sm\",\n            children: \"Agregar Ejercicio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-900 rounded-xl p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: [\"Rutina de \", selectedDay]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this), ((_userRoutine$selected = userRoutine[selectedDay]) === null || _userRoutine$selected === void 0 ? void 0 : _userRoutine$selected.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: userRoutine[selectedDay].map(exercise => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 p-2 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-start mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"text-base font-medium\",\n                  children: exercise.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-gray-400\",\n                  children: exercise.muscleGroup\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => addSeries(exercise.id, selectedDay),\n                className: \"px-2 py-1 bg-green-500 text-black rounded hover:bg-green-600 text-xs\",\n                children: \"+ Serie\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: exercise.series.map((serie, index) => {\n                var _timerStates;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-700 p-2 rounded-lg\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-between mb-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-xs text-gray-300\",\n                      children: [\"Serie \", index + 1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 53\n                    }, this), exercise.series.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => removeSeries(exercise.id, selectedDay, index),\n                      className: \"text-red-500 hover:text-red-400 text-xs\",\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"grid grid-cols-2 gap-2 mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"block text-xs text-gray-400 mb-1\",\n                        children: \"Reps\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 403,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: serie.reps,\n                        onChange: e => {\n                          const updatedExercise = {\n                            ...exercise,\n                            series: exercise.series.map((s, i) => i === index ? {\n                              ...s,\n                              reps: e.target.value\n                            } : s)\n                          };\n                          updateExerciseInRoutine(exercise.id, updatedExercise, selectedDay);\n                        },\n                        className: \"w-full bg-gray-800 rounded px-2 py-1 text-center text-sm\",\n                        min: \"0\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 404,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"block text-xs text-gray-400 mb-1\",\n                        children: \"Kg\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 421,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: serie.weight,\n                        onChange: e => {\n                          const updatedExercise = {\n                            ...exercise,\n                            series: exercise.series.map((s, i) => i === index ? {\n                              ...s,\n                              weight: e.target.value\n                            } : s)\n                          };\n                          updateExerciseInRoutine(exercise.id, updatedExercise, selectedDay);\n                        },\n                        className: \"w-full bg-gray-800 rounded px-2 py-1 text-center text-sm\",\n                        min: \"0\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 422,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-between\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center space-x-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        checked: serie.completed,\n                        onChange: e => {\n                          const updatedExercise = {\n                            ...exercise,\n                            series: exercise.series.map((s, i) => i === index ? {\n                              ...s,\n                              completed: e.target.checked\n                            } : s)\n                          };\n                          updateExerciseInRoutine(exercise.id, updatedExercise, selectedDay);\n                        },\n                        className: \"w-3 h-3\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: serie.restTime,\n                        onChange: e => {\n                          const updatedExercise = {\n                            ...exercise,\n                            series: exercise.series.map((s, i) => i === index ? {\n                              ...s,\n                              restTime: Number(e.target.value)\n                            } : s)\n                          };\n                          updateExerciseInRoutine(exercise.id, updatedExercise, selectedDay);\n                        },\n                        className: \"w-16 bg-gray-800 rounded px-1 py-1 text-center text-xs\",\n                        min: \"0\",\n                        placeholder: \"Seg\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 455,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => startTimer(exercise.id, index, serie.restTime),\n                      className: \"px-2 py-1 bg-yellow-500 text-black rounded hover:bg-yellow-600 text-xs\",\n                      children: (_timerStates = timerStates[`${exercise.id}-${index}`]) !== null && _timerStates !== void 0 && _timerStates.active ? formatTime(timerStates[`${exercise.id}-${index}`].time) : 'Iniciar'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 472,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 49\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 37\n            }, this)]\n          }, exercise.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400 text-center py-3 text-sm\",\n          children: \"No tienes ejercicios en tu rutina. Agrega algunos ejercicios para comenzar.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-0 left-0 right-0 bg-gray-900 border-t border-gray-800\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-sm mx-auto px-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center h-16\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"flex flex-col items-center justify-center w-1/5 text-yellow-500\",\n            children: [/*#__PURE__*/_jsxDEV(FaHome, {\n              className: \"text-xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs mt-1\",\n              children: \"Inicio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"flex flex-col items-center justify-center w-1/5 text-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(FaDumbbell, {\n              className: \"text-xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs mt-1\",\n              children: \"Rutina\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"flex flex-col items-center justify-center w-1/5 text-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(FaAppleAlt, {\n              className: \"text-xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs mt-1\",\n              children: \"Nutrici\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"flex flex-col items-center justify-center w-1/5 text-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(FaShoppingCart, {\n              className: \"text-xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs mt-1\",\n              children: \"Shop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"flex flex-col items-center justify-center w-1/5 text-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(FaSignOutAlt, {\n              className: \"text-xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs mt-1\",\n              children: \"Salir\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 9\n  }, this);\n};\n_s(TrainingPage, \"YIRH9Z0LEeKEHKr4crbGm243KPQ=\");\n_c = TrainingPage;\nexport default TrainingPage;\nvar _c;\n$RefreshReg$(_c, \"TrainingPage\");","map":{"version":3,"names":["React","useState","useEffect","saveUserRoutine","getUserProfile","updateUserProgress","updateUserStats","FaHome","FaDumbbell","FaAppleAlt","FaShoppingCart","FaSignOutAlt","jsxDEV","_jsxDEV","MUSCLE_GROUPS","DAYS_OF_WEEK","TrainingPage","_s","_userRoutine$selected","error","setError","userRoutine","setUserRoutine","profile","setProfile","selectedDay","setSelectedDay","today","Date","getDay","selectedMuscleGroup","setSelectedMuscleGroup","selectedExercise","setSelectedExercise","restTimer","setRestTimer","timerActive","setTimerActive","timerTime","setTimerTime","timerStates","setTimerStates","initializeRoutine","newRoutine","forEach","day","Object","keys","length","prev","intervals","entries","key","state","active","time","setInterval","values","interval","clearInterval","handleAddExercise","newExercise","id","now","name","muscleGroup","series","reps","weight","completed","restTime","addSeries","exerciseId","exerciseIndex","findIndex","ex","exercise","lastSeries","removeSeries","seriesIndex","filter","_","index","handleDeleteExercise","window","confirm","console","updateExerciseInRoutine","updatedExercise","existingExercise","updatedSeries","map","serie","updatedSerie","undefined","Number","hasWeightChanges","some","_userProfile$stats","_userProfile$stats2","userProfile","totalWeight","reduce","sum","totalExercises","stats","totalWeightLifted","startTimer","timerKey","formatTime","seconds","mins","Math","floor","secs","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","slice","value","onChange","e","target","group","disabled","_timerStates","type","s","i","min","checked","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/nessc/AndroidStudioProjects/sementalfit/sementalfit2/src/components/TrainingPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { saveUserRoutine, getUserProfile, updateUserProgress, updateUserStats } from '../services/firebaseUtils';\r\nimport { FaHome, FaDumbbell, FaAppleAlt, FaShoppingCart, FaSignOutAlt } from 'react-icons/fa';\r\n\r\n// Grupos musculares y sus ejercicios\r\nconst MUSCLE_GROUPS = {\r\n    'Pecho': [\r\n        'Press de Banca',\r\n        'Press Inclinado',\r\n        'Press Declinado',\r\n        'Aperturas con Mancuernas',\r\n        'Fondos en Paralelas',\r\n        'Pullover'\r\n    ],\r\n    'Espalda': [\r\n        'Dominadas',\r\n        'Remo con Barra',\r\n        'Remo con Mancuernas',\r\n        'Pulldown',\r\n        'Pullover',\r\n        'Remo en Polea'\r\n    ],\r\n    'Hombros': [\r\n        'Press Militar',\r\n        'Elevaciones Laterales',\r\n        'Elevaciones Frontales',\r\n        'Elevaciones Posteriores',\r\n        'Press Arnold',\r\n        'Face Pull'\r\n    ],\r\n    'Bíceps': [\r\n        'Curl con Barra',\r\n        'Curl con Mancuernas',\r\n        'Curl Martillo',\r\n        'Curl Concentrado',\r\n        'Curl en Polea',\r\n        'Curl Invertido'\r\n    ],\r\n    'Tríceps': [\r\n        'Extensiones en Polea',\r\n        'Extensiones con Mancuernas',\r\n        'Press Francés',\r\n        'Fondos en Banco',\r\n        'Extensiones Tras Nuca',\r\n        'Kickbacks'\r\n    ],\r\n    'Piernas': [\r\n        'Sentadillas',\r\n        'Peso Muerto',\r\n        'Extensiones de Cuádriceps',\r\n        'Curl de Femoral',\r\n        'Prensa',\r\n        'Zancadas'\r\n    ],\r\n    'Abdominales': [\r\n        'Crunches',\r\n        'Plancha',\r\n        'Elevaciones de Piernas',\r\n        'Russian Twists',\r\n        'Ab Wheel',\r\n        'Leg Raises'\r\n    ]\r\n};\r\n\r\nconst DAYS_OF_WEEK = [\r\n    'Domingo',\r\n    'Lunes',\r\n    'Martes',\r\n    'Miércoles',\r\n    'Jueves',\r\n    'Viernes',\r\n    'Sábado'\r\n];\r\n\r\nconst TrainingPage = () => {\r\n    const [error, setError] = useState('');\r\n    const [userRoutine, setUserRoutine] = useState({});\r\n    const [profile, setProfile] = useState(null);\r\n    const [selectedDay, setSelectedDay] = useState(() => {\r\n        const today = new Date().getDay(); // 0 es domingo, 1 es lunes, etc.\r\n        return DAYS_OF_WEEK[today];\r\n    });\r\n    const [selectedMuscleGroup, setSelectedMuscleGroup] = useState('');\r\n    const [selectedExercise, setSelectedExercise] = useState('');\r\n    const [restTimer, setRestTimer] = useState(90); // 90 segundos por defecto\r\n    const [timerActive, setTimerActive] = useState(false);\r\n    const [timerTime, setTimerTime] = useState(0);\r\n    const [timerStates, setTimerStates] = useState({});\r\n\r\n    useEffect(() => {\r\n        // Inicializar la rutina para cada día si no existe\r\n        const initializeRoutine = () => {\r\n            const newRoutine = {};\r\n            DAYS_OF_WEEK.forEach(day => {\r\n                if (!userRoutine[day]) {\r\n                    newRoutine[day] = [];\r\n                }\r\n            });\r\n            if (Object.keys(newRoutine).length > 0) {\r\n                setUserRoutine(prev => ({ ...prev, ...newRoutine }));\r\n            }\r\n        };\r\n        initializeRoutine();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let intervals = {};\r\n        Object.entries(timerStates).forEach(([key, state]) => {\r\n            if (state.active && state.time > 0) {\r\n                intervals[key] = setInterval(() => {\r\n                    setTimerStates(prev => ({\r\n                        ...prev,\r\n                        [key]: {\r\n                            ...prev[key],\r\n                            time: prev[key].time - 1\r\n                        }\r\n                    }));\r\n                }, 1000);\r\n            } else if (state.time === 0) {\r\n                setTimerStates(prev => ({\r\n                    ...prev,\r\n                    [key]: {\r\n                        ...prev[key],\r\n                        active: false\r\n                    }\r\n                }));\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            Object.values(intervals).forEach(interval => clearInterval(interval));\r\n        };\r\n    }, [timerStates]);\r\n\r\n    const handleAddExercise = () => {\r\n        if (!selectedMuscleGroup || !selectedExercise) {\r\n            setError('Por favor selecciona un grupo muscular y un ejercicio');\r\n            return;\r\n        }\r\n\r\n        const newExercise = {\r\n            id: Date.now(),\r\n            name: selectedExercise,\r\n            muscleGroup: selectedMuscleGroup,\r\n            series: [\r\n                { reps: '', weight: '', completed: false, restTime: 60 }\r\n            ]\r\n        };\r\n\r\n        const newRoutine = { ...userRoutine };\r\n        newRoutine[selectedDay] = [...(newRoutine[selectedDay] || []), newExercise];\r\n        setUserRoutine(newRoutine);\r\n        saveUserRoutine('default', newRoutine);\r\n\r\n        setSelectedMuscleGroup('');\r\n        setSelectedExercise('');\r\n    };\r\n\r\n    const addSeries = (exerciseId, day) => {\r\n        const newRoutine = { ...userRoutine };\r\n        const exerciseIndex = newRoutine[day].findIndex(ex => ex.id === exerciseId);\r\n        \r\n        if (exerciseIndex !== -1) {\r\n            const exercise = newRoutine[day][exerciseIndex];\r\n            const lastSeries = exercise.series[exercise.series.length - 1];\r\n            \r\n            newRoutine[day][exerciseIndex] = {\r\n                ...exercise,\r\n                series: [\r\n                    ...exercise.series,\r\n                    {\r\n                        reps: lastSeries.reps,\r\n                        weight: lastSeries.weight,\r\n                        completed: false,\r\n                        restTime: lastSeries.restTime\r\n                    }\r\n                ]\r\n            };\r\n            \r\n            setUserRoutine(newRoutine);\r\n            saveUserRoutine('default', newRoutine);\r\n        }\r\n    };\r\n\r\n    const removeSeries = (exerciseId, day, seriesIndex) => {\r\n        const newRoutine = { ...userRoutine };\r\n        const exerciseIndex = newRoutine[day].findIndex(ex => ex.id === exerciseId);\r\n        \r\n        if (exerciseIndex !== -1 && newRoutine[day][exerciseIndex].series.length > 1) {\r\n            newRoutine[day][exerciseIndex] = {\r\n                ...newRoutine[day][exerciseIndex],\r\n                series: newRoutine[day][exerciseIndex].series.filter((_, index) => index !== seriesIndex)\r\n            };\r\n            \r\n            setUserRoutine(newRoutine);\r\n            saveUserRoutine('default', newRoutine);\r\n        }\r\n    };\r\n\r\n    const handleDeleteExercise = async (exerciseId, day) => {\r\n        if (window.confirm('¿Estás seguro de que quieres eliminar este ejercicio?')) {\r\n            try {\r\n                const newRoutine = { ...userRoutine };\r\n                newRoutine[day] = newRoutine[day].filter(ex => ex.id !== exerciseId);\r\n                await saveUserRoutine('default', newRoutine);\r\n                setUserRoutine(newRoutine);\r\n            } catch (error) {\r\n                console.error('Error al eliminar ejercicio:', error);\r\n                setError('Error al eliminar ejercicio');\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateExerciseInRoutine = async (exerciseId, updatedExercise, day) => {\r\n        try {\r\n            const newRoutine = { ...userRoutine };\r\n            const exerciseIndex = newRoutine[day].findIndex(\r\n                ex => ex.id === exerciseId\r\n            );\r\n\r\n            if (exerciseIndex !== -1) {\r\n                const existingExercise = newRoutine[day][exerciseIndex];\r\n                const updatedSeries = existingExercise.series.map((serie, index) => {\r\n                    const updatedSerie = updatedExercise.series[index];\r\n                    if (updatedSerie) {\r\n                        return {\r\n                            ...serie,\r\n                            reps: updatedSerie.reps !== undefined ? Number(updatedSerie.reps) : serie.reps,\r\n                            weight: updatedSerie.weight !== undefined ? Number(updatedSerie.weight) : serie.weight,\r\n                            completed: updatedSerie.completed !== undefined ? updatedSerie.completed : serie.completed,\r\n                            restTime: updatedSerie.restTime !== undefined ? Number(updatedSerie.restTime) : serie.restTime\r\n                        };\r\n                    }\r\n                    return serie;\r\n                });\r\n\r\n                newRoutine[day][exerciseIndex] = {\r\n                    ...existingExercise,\r\n                    ...updatedExercise,\r\n                    series: updatedSeries\r\n                };\r\n\r\n                await saveUserRoutine('default', newRoutine);\r\n                setUserRoutine(newRoutine);\r\n\r\n                const hasWeightChanges = updatedSeries.some((serie, index) => \r\n                    serie.weight !== existingExercise.series[index].weight ||\r\n                    serie.reps !== existingExercise.series[index].reps\r\n                );\r\n\r\n                if (hasWeightChanges) {\r\n                    await updateUserProgress('default', 'weight_update');\r\n                    const userProfile = await getUserProfile('default');\r\n                    setProfile(userProfile);\r\n\r\n                    const totalWeight = updatedSeries.reduce((sum, serie) => \r\n                        sum + (Number(serie.weight) * Number(serie.reps)), 0);\r\n                    \r\n                    await updateUserStats('default', {\r\n                        totalExercises: (userProfile?.stats?.totalExercises || 0) + 1,\r\n                        totalWeightLifted: (userProfile?.stats?.totalWeightLifted || 0) + totalWeight\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al actualizar ejercicio:', error);\r\n            setError('Error al actualizar ejercicio en la rutina');\r\n        }\r\n    };\r\n\r\n    const startTimer = (exerciseId, seriesIndex, restTime) => {\r\n        const timerKey = `${exerciseId}-${seriesIndex}`;\r\n        setTimerStates(prev => ({\r\n            ...prev,\r\n            [timerKey]: {\r\n                time: restTime,\r\n                active: true\r\n            }\r\n        }));\r\n    };\r\n\r\n    const formatTime = (seconds) => {\r\n        const mins = Math.floor(seconds / 60);\r\n        const secs = seconds % 60;\r\n        return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-black text-white p-2 pb-16\">\r\n            <div className=\"max-w-sm mx-auto\">\r\n                <div className=\"flex justify-between items-center mb-3\">\r\n                    <h1 className=\"text-xl font-bold text-yellow-500\">SementalFit</h1>\r\n                </div>\r\n\r\n                {error && (\r\n                    <div className=\"bg-red-900/20 text-red-500 p-2 rounded-lg mb-3 text-xs\">\r\n                        {error}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Selector de día */}\r\n                <div className=\"bg-gray-900 rounded-xl p-3 mb-3 overflow-x-auto\">\r\n                    <h2 className=\"text-lg font-semibold mb-2\">Día</h2>\r\n                    <div className=\"flex space-x-1 min-w-max\">\r\n                        {DAYS_OF_WEEK.map(day => (\r\n                            <button\r\n                                key={day}\r\n                                onClick={() => setSelectedDay(day)}\r\n                                className={`px-2 py-1 rounded-lg transition-colors text-sm ${\r\n                                    selectedDay === day\r\n                                        ? 'bg-yellow-500 text-black'\r\n                                        : 'bg-gray-800 hover:bg-gray-700'\r\n                                }`}\r\n                            >\r\n                                {day.slice(0, 3)}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Agregar ejercicio */}\r\n                <div className=\"bg-gray-900 rounded-xl p-3 mb-3\">\r\n                    <h2 className=\"text-lg font-semibold mb-2\">Agregar Ejercicio</h2>\r\n                    <div className=\"space-y-2\">\r\n                        <div>\r\n                            <label className=\"block text-xs font-medium text-gray-300 mb-1\">\r\n                                Grupo Muscular\r\n                            </label>\r\n                            <select\r\n                                value={selectedMuscleGroup}\r\n                                onChange={(e) => {\r\n                                    setSelectedMuscleGroup(e.target.value);\r\n                                    setSelectedExercise('');\r\n                                }}\r\n                                className=\"w-full px-2 py-1 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-yellow-500 text-sm\"\r\n                            >\r\n                                <option value=\"\">Selecciona un grupo</option>\r\n                                {Object.keys(MUSCLE_GROUPS).map(group => (\r\n                                    <option key={group} value={group}>{group}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"block text-xs font-medium text-gray-300 mb-1\">\r\n                                Ejercicio\r\n                            </label>\r\n                            <select\r\n                                value={selectedExercise}\r\n                                onChange={(e) => setSelectedExercise(e.target.value)}\r\n                                className=\"w-full px-2 py-1 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:border-yellow-500 text-sm\"\r\n                                disabled={!selectedMuscleGroup}\r\n                            >\r\n                                <option value=\"\">Selecciona un ejercicio</option>\r\n                                {selectedMuscleGroup && MUSCLE_GROUPS[selectedMuscleGroup].map(exercise => (\r\n                                    <option key={exercise} value={exercise}>{exercise}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <button\r\n                            onClick={handleAddExercise}\r\n                            className=\"w-full bg-yellow-500 text-black py-1 px-3 rounded-lg hover:bg-yellow-600 transition-colors font-semibold text-sm\"\r\n                        >\r\n                            Agregar Ejercicio\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Lista de ejercicios */}\r\n                <div className=\"bg-gray-900 rounded-xl p-3\">\r\n                    <h3 className=\"text-lg font-semibold mb-2\">Rutina de {selectedDay}</h3>\r\n                    {userRoutine[selectedDay]?.length > 0 ? (\r\n                        <div className=\"space-y-3\">\r\n                            {userRoutine[selectedDay].map((exercise) => (\r\n                                <div key={exercise.id} className=\"bg-gray-800 p-2 rounded-lg\">\r\n                                    <div className=\"flex justify-between items-start mb-2\">\r\n                                        <div>\r\n                                            <h5 className=\"text-base font-medium\">{exercise.name}</h5>\r\n                                            <p className=\"text-xs text-gray-400\">{exercise.muscleGroup}</p>\r\n                                        </div>\r\n                                        <button\r\n                                            onClick={() => addSeries(exercise.id, selectedDay)}\r\n                                            className=\"px-2 py-1 bg-green-500 text-black rounded hover:bg-green-600 text-xs\"\r\n                                        >\r\n                                            + Serie\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"space-y-2\">\r\n                                        {exercise.series.map((serie, index) => (\r\n                                            <div key={index} className=\"bg-gray-700 p-2 rounded-lg\">\r\n                                                <div className=\"flex items-center justify-between mb-1\">\r\n                                                    <span className=\"text-xs text-gray-300\">Serie {index + 1}</span>\r\n                                                    {exercise.series.length > 1 && (\r\n                                                        <button\r\n                                                            onClick={() => removeSeries(exercise.id, selectedDay, index)}\r\n                                                            className=\"text-red-500 hover:text-red-400 text-xs\"\r\n                                                        >\r\n                                                            ×\r\n                                                        </button>\r\n                                                    )}\r\n                                                </div>\r\n                                                <div className=\"grid grid-cols-2 gap-2 mb-2\">\r\n                                                    <div>\r\n                                                        <label className=\"block text-xs text-gray-400 mb-1\">Reps</label>\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            value={serie.reps}\r\n                                                            onChange={(e) => {\r\n                                                                const updatedExercise = {\r\n                                                                    ...exercise,\r\n                                                                    series: exercise.series.map((s, i) =>\r\n                                                                        i === index ? { ...s, reps: e.target.value } : s\r\n                                                                    )\r\n                                                                };\r\n                                                                updateExerciseInRoutine(exercise.id, updatedExercise, selectedDay);\r\n                                                            }}\r\n                                                            className=\"w-full bg-gray-800 rounded px-2 py-1 text-center text-sm\"\r\n                                                            min=\"0\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <label className=\"block text-xs text-gray-400 mb-1\">Kg</label>\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            value={serie.weight}\r\n                                                            onChange={(e) => {\r\n                                                                const updatedExercise = {\r\n                                                                    ...exercise,\r\n                                                                    series: exercise.series.map((s, i) =>\r\n                                                                        i === index ? { ...s, weight: e.target.value } : s\r\n                                                                    )\r\n                                                                };\r\n                                                                updateExerciseInRoutine(exercise.id, updatedExercise, selectedDay);\r\n                                                            }}\r\n                                                            className=\"w-full bg-gray-800 rounded px-2 py-1 text-center text-sm\"\r\n                                                            min=\"0\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"flex items-center justify-between\">\r\n                                                    <div className=\"flex items-center space-x-2\">\r\n                                                        <input\r\n                                                            type=\"checkbox\"\r\n                                                            checked={serie.completed}\r\n                                                            onChange={(e) => {\r\n                                                                const updatedExercise = {\r\n                                                                    ...exercise,\r\n                                                                    series: exercise.series.map((s, i) =>\r\n                                                                        i === index ? { ...s, completed: e.target.checked } : s\r\n                                                                    )\r\n                                                                };\r\n                                                                updateExerciseInRoutine(exercise.id, updatedExercise, selectedDay);\r\n                                                            }}\r\n                                                            className=\"w-3 h-3\"\r\n                                                        />\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            value={serie.restTime}\r\n                                                            onChange={(e) => {\r\n                                                                const updatedExercise = {\r\n                                                                    ...exercise,\r\n                                                                    series: exercise.series.map((s, i) =>\r\n                                                                        i === index ? { ...s, restTime: Number(e.target.value) } : s\r\n                                                                    )\r\n                                                                };\r\n                                                                updateExerciseInRoutine(exercise.id, updatedExercise, selectedDay);\r\n                                                            }}\r\n                                                            className=\"w-16 bg-gray-800 rounded px-1 py-1 text-center text-xs\"\r\n                                                            min=\"0\"\r\n                                                            placeholder=\"Seg\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <button\r\n                                                        onClick={() => startTimer(exercise.id, index, serie.restTime)}\r\n                                                        className=\"px-2 py-1 bg-yellow-500 text-black rounded hover:bg-yellow-600 text-xs\"\r\n                                                    >\r\n                                                        {timerStates[`${exercise.id}-${index}`]?.active \r\n                                                            ? formatTime(timerStates[`${exercise.id}-${index}`].time)\r\n                                                            : 'Iniciar'}\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <p className=\"text-gray-400 text-center py-3 text-sm\">\r\n                            No tienes ejercicios en tu rutina. Agrega algunos ejercicios para comenzar.\r\n                        </p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Bottom Navigation */}\r\n            <div className=\"fixed bottom-0 left-0 right-0 bg-gray-900 border-t border-gray-800\">\r\n                <div className=\"max-w-sm mx-auto px-4\">\r\n                    <div className=\"flex justify-between items-center h-16\">\r\n                        <button className=\"flex flex-col items-center justify-center w-1/5 text-yellow-500\">\r\n                            <FaHome className=\"text-xl\" />\r\n                            <span className=\"text-xs mt-1\">Inicio</span>\r\n                        </button>\r\n                        <button className=\"flex flex-col items-center justify-center w-1/5 text-gray-400\">\r\n                            <FaDumbbell className=\"text-xl\" />\r\n                            <span className=\"text-xs mt-1\">Rutina</span>\r\n                        </button>\r\n                        <button className=\"flex flex-col items-center justify-center w-1/5 text-gray-400\">\r\n                            <FaAppleAlt className=\"text-xl\" />\r\n                            <span className=\"text-xs mt-1\">Nutrición</span>\r\n                        </button>\r\n                        <button className=\"flex flex-col items-center justify-center w-1/5 text-gray-400\">\r\n                            <FaShoppingCart className=\"text-xl\" />\r\n                            <span className=\"text-xs mt-1\">Shop</span>\r\n                        </button>\r\n                        <button className=\"flex flex-col items-center justify-center w-1/5 text-gray-400\">\r\n                            <FaSignOutAlt className=\"text-xl\" />\r\n                            <span className=\"text-xs mt-1\">Salir</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TrainingPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
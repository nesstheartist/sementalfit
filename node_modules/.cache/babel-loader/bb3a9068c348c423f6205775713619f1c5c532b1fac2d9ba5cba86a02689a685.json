{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nessc\\\\Semental fit ultima\\\\sementalfit2\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { onAuthStateChanged, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, updateProfile, signInWithPopup } from 'firebase/auth';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { auth, db, googleProvider } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  async function login(email, password) {\n    try {\n      setError(null);\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const userDoc = await getDoc(doc(db, 'users', userCredential.user.uid));\n      if (!userDoc.exists()) {\n        throw new Error('Usuario no encontrado en la base de datos');\n      }\n      const userData = userDoc.data();\n      if (userData.status === 'blocked') {\n        await signOut(auth);\n        throw new Error('Usuario bloqueado');\n      }\n      return userCredential;\n    } catch (error) {\n      console.error('Error en login:', error);\n      setError(error.message);\n      throw error;\n    }\n  }\n  async function register(email, password, name, role = 'user') {\n    try {\n      setError(null);\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n\n      // Crear documento de usuario en Firestore\n      await setDoc(doc(db, 'users', userCredential.user.uid), {\n        email,\n        name,\n        role,\n        createdAt: new Date().toISOString(),\n        lastLogin: new Date().toISOString(),\n        status: 'active'\n      });\n\n      // Actualizar perfil de Firebase Auth\n      await updateProfile(userCredential.user, {\n        displayName: name\n      });\n      return userCredential;\n    } catch (error) {\n      console.error('Error en registro:', error);\n      setError(error.message);\n      throw error;\n    }\n  }\n  async function loginWithGoogle() {\n    try {\n      setError(null);\n      const result = await signInWithPopup(auth, googleProvider);\n      const user = result.user;\n\n      // Verificar si el usuario ya existe en Firestore\n      const userDoc = await getDoc(doc(db, 'users', user.uid));\n      if (!userDoc.exists()) {\n        // Si es un nuevo usuario, crear su documento en Firestore\n        await setDoc(doc(db, 'users', user.uid), {\n          email: user.email,\n          name: user.displayName,\n          role: 'user',\n          createdAt: new Date().toISOString(),\n          lastLogin: new Date().toISOString(),\n          status: 'active',\n          photoURL: user.photoURL\n        });\n      } else {\n        // Si el usuario existe, verificar si está bloqueado\n        const userData = userDoc.data();\n        if (userData.status === 'blocked') {\n          await signOut(auth);\n          throw new Error('Usuario bloqueado');\n        }\n      }\n      return result;\n    } catch (error) {\n      console.error('Error en login con Google:', error);\n      setError(error.message);\n      throw error;\n    }\n  }\n  async function logout() {\n    try {\n      setError(null);\n      await signOut(auth);\n    } catch (error) {\n      console.error('Error en logout:', error);\n      setError(error.message);\n      throw error;\n    }\n  }\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      if (user) {\n        try {\n          const userDoc = await getDoc(doc(db, 'users', user.uid));\n          if (userDoc.exists()) {\n            setCurrentUser({\n              ...user,\n              ...userDoc.data()\n            });\n          }\n        } catch (error) {\n          console.error('Error al obtener datos del usuario:', error);\n          setError(error.message);\n        }\n      } else {\n        setCurrentUser(null);\n      }\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    loginWithGoogle,\n    loading,\n    error\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","onAuthStateChanged","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","updateProfile","signInWithPopup","doc","getDoc","setDoc","auth","db","googleProvider","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","error","setError","login","email","password","userCredential","userDoc","user","uid","exists","Error","userData","data","status","console","message","register","name","role","createdAt","Date","toISOString","lastLogin","displayName","loginWithGoogle","result","photoURL","logout","unsubscribe","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nessc/Semental fit ultima/sementalfit2/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { \r\n    onAuthStateChanged, \r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n    signOut,\r\n    updateProfile,\r\n    signInWithPopup\r\n} from 'firebase/auth';\r\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\r\nimport { auth, db, googleProvider } from '../firebase';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    async function login(email, password) {\r\n        try {\r\n            setError(null);\r\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n            const userDoc = await getDoc(doc(db, 'users', userCredential.user.uid));\r\n            \r\n            if (!userDoc.exists()) {\r\n                throw new Error('Usuario no encontrado en la base de datos');\r\n            }\r\n\r\n            const userData = userDoc.data();\r\n            if (userData.status === 'blocked') {\r\n                await signOut(auth);\r\n                throw new Error('Usuario bloqueado');\r\n            }\r\n\r\n            return userCredential;\r\n        } catch (error) {\r\n            console.error('Error en login:', error);\r\n            setError(error.message);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async function register(email, password, name, role = 'user') {\r\n        try {\r\n            setError(null);\r\n            const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n            \r\n            // Crear documento de usuario en Firestore\r\n            await setDoc(doc(db, 'users', userCredential.user.uid), {\r\n                email,\r\n                name,\r\n                role,\r\n                createdAt: new Date().toISOString(),\r\n                lastLogin: new Date().toISOString(),\r\n                status: 'active'\r\n            });\r\n\r\n            // Actualizar perfil de Firebase Auth\r\n            await updateProfile(userCredential.user, {\r\n                displayName: name\r\n            });\r\n\r\n            return userCredential;\r\n        } catch (error) {\r\n            console.error('Error en registro:', error);\r\n            setError(error.message);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async function loginWithGoogle() {\r\n        try {\r\n            setError(null);\r\n            const result = await signInWithPopup(auth, googleProvider);\r\n            const user = result.user;\r\n            \r\n            // Verificar si el usuario ya existe en Firestore\r\n            const userDoc = await getDoc(doc(db, 'users', user.uid));\r\n            \r\n            if (!userDoc.exists()) {\r\n                // Si es un nuevo usuario, crear su documento en Firestore\r\n                await setDoc(doc(db, 'users', user.uid), {\r\n                    email: user.email,\r\n                    name: user.displayName,\r\n                    role: 'user',\r\n                    createdAt: new Date().toISOString(),\r\n                    lastLogin: new Date().toISOString(),\r\n                    status: 'active',\r\n                    photoURL: user.photoURL\r\n                });\r\n            } else {\r\n                // Si el usuario existe, verificar si está bloqueado\r\n                const userData = userDoc.data();\r\n                if (userData.status === 'blocked') {\r\n                    await signOut(auth);\r\n                    throw new Error('Usuario bloqueado');\r\n                }\r\n            }\r\n\r\n            return result;\r\n        } catch (error) {\r\n            console.error('Error en login con Google:', error);\r\n            setError(error.message);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async function logout() {\r\n        try {\r\n            setError(null);\r\n            await signOut(auth);\r\n        } catch (error) {\r\n            console.error('Error en logout:', error);\r\n            setError(error.message);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n            if (user) {\r\n                try {\r\n                    const userDoc = await getDoc(doc(db, 'users', user.uid));\r\n                    if (userDoc.exists()) {\r\n                        setCurrentUser({\r\n                            ...user,\r\n                            ...userDoc.data()\r\n                        });\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error al obtener datos del usuario:', error);\r\n                    setError(error.message);\r\n                }\r\n            } else {\r\n                setCurrentUser(null);\r\n            }\r\n            setLoading(false);\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        register,\r\n        logout,\r\n        loginWithGoogle,\r\n        loading,\r\n        error\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { useContext } from 'react';\nimport { AccordionContext } from '../utils/constants.mjs';\nconst getItemState = (providerValue, key, itemInitialEntered) => {\n  const {\n    stateMap,\n    mountOnEnter,\n    initialEntered\n  } = providerValue;\n  const _initialEntered = itemInitialEntered != null ? itemInitialEntered : initialEntered;\n  return stateMap.get(key) || {\n    status: _initialEntered ? 'entered' : mountOnEnter ? 'unmounted' : 'exited',\n    isMounted: !mountOnEnter,\n    isEnter: _initialEntered,\n    isResolved: true\n  };\n};\nconst useAccordionContext = () => {\n  const context = useContext(AccordionContext);\n  if (process.env.NODE_ENV !== 'production' && !context.stateMap) {\n    throw new Error('[React-Accordion] Cannot find a <AccordionProvider/> above this AccordionItem.');\n  }\n  return context;\n};\nexport { getItemState, useAccordionContext };","map":{"version":3,"names":["useContext","AccordionContext","getItemState","providerValue","key","itemInitialEntered","stateMap","mountOnEnter","initialEntered","_initialEntered","get","status","isMounted","isEnter","isResolved","useAccordionContext","context","process","env","NODE_ENV","Error"],"sources":["C:/Users/nessc/Semental fit ultima/node_modules/@szhsin/react-accordion/dist/esm/hooks/useAccordionContext.mjs"],"sourcesContent":["import { useContext } from 'react';\nimport { AccordionContext } from '../utils/constants.mjs';\n\nconst getItemState = (providerValue, key, itemInitialEntered) => {\n  const {\n    stateMap,\n    mountOnEnter,\n    initialEntered\n  } = providerValue;\n  const _initialEntered = itemInitialEntered != null ? itemInitialEntered : initialEntered;\n  return stateMap.get(key) || {\n    status: _initialEntered ? 'entered' : mountOnEnter ? 'unmounted' : 'exited',\n    isMounted: !mountOnEnter,\n    isEnter: _initialEntered,\n    isResolved: true\n  };\n};\nconst useAccordionContext = () => {\n  const context = useContext(AccordionContext);\n  if (process.env.NODE_ENV !== 'production' && !context.stateMap) {\n    throw new Error('[React-Accordion] Cannot find a <AccordionProvider/> above this AccordionItem.');\n  }\n  return context;\n};\n\nexport { getItemState, useAccordionContext };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,gBAAgB,QAAQ,wBAAwB;AAEzD,MAAMC,YAAY,GAAGA,CAACC,aAAa,EAAEC,GAAG,EAAEC,kBAAkB,KAAK;EAC/D,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC;EACF,CAAC,GAAGL,aAAa;EACjB,MAAMM,eAAe,GAAGJ,kBAAkB,IAAI,IAAI,GAAGA,kBAAkB,GAAGG,cAAc;EACxF,OAAOF,QAAQ,CAACI,GAAG,CAACN,GAAG,CAAC,IAAI;IAC1BO,MAAM,EAAEF,eAAe,GAAG,SAAS,GAAGF,YAAY,GAAG,WAAW,GAAG,QAAQ;IAC3EK,SAAS,EAAE,CAACL,YAAY;IACxBM,OAAO,EAAEJ,eAAe;IACxBK,UAAU,EAAE;EACd,CAAC;AACH,CAAC;AACD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAChC,MAAMC,OAAO,GAAGhB,UAAU,CAACC,gBAAgB,CAAC;EAC5C,IAAIgB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAI,CAACH,OAAO,CAACV,QAAQ,EAAE;IAC9D,MAAM,IAAIc,KAAK,CAAC,gFAAgF,CAAC;EACnG;EACA,OAAOJ,OAAO;AAChB,CAAC;AAED,SAASd,YAAY,EAAEa,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nessc\\\\Semental fit ultima\\\\sementalfit2\\\\src\\\\components\\\\DailyRoutine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { db } from '../firebase';\nimport { collection, doc, setDoc, getDoc, getDocs, query, where, serverTimestamp } from 'firebase/firestore';\nimport Header from './Header';\nimport ParticlesBackground from './ParticlesBackground';\nimport '../styles/global.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DAYS = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\nconst getToday = () => {\n  const days = ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'];\n  return days[new Date().getDay()];\n};\nconst DailyRoutine = () => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [selectedDay, setSelectedDay] = useState(getToday());\n  const [categories, setCategories] = useState([]);\n  const [exercises, setExercises] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [currentRoutine, setCurrentRoutine] = useState({\n    exercises: []\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  // Timer helpers\n  const [timers, setTimers] = useState({}); // { [exerciseIndex_setIndex]: { running, timeLeft } }\n  const timerRefs = useRef({});\n  const [showAvailable, setShowAvailable] = useState(false);\n  const [availableRoutines, setAvailableRoutines] = useState([]);\n\n  // Cargar categorías\n  useEffect(() => {\n    const loadCategories = async () => {\n      try {\n        setError('');\n        const categoriesSnapshot = await getDocs(collection(db, 'categories'));\n        const categoriesData = categoriesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setCategories(categoriesData);\n      } catch (error) {\n        console.error('Error al cargar categorías:', error);\n        setError('Error al cargar las categorías. Por favor, intenta de nuevo.');\n      }\n    };\n    loadCategories();\n  }, []);\n\n  // Cargar ejercicios cuando se selecciona una categoría\n  useEffect(() => {\n    const loadExercises = async () => {\n      if (!selectedCategory) {\n        setExercises([]);\n        return;\n      }\n      try {\n        setError('');\n        const exercisesSnapshot = await getDocs(query(collection(db, 'exercises'), where('categoryId', '==', selectedCategory)));\n        const exercisesData = exercisesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setExercises(exercisesData);\n      } catch (error) {\n        console.error('Error al cargar ejercicios:', error);\n        setError('Error al cargar los ejercicios. Por favor, intenta de nuevo.');\n      }\n    };\n    loadExercises();\n  }, [selectedCategory]);\n\n  // Cargar rutina del día seleccionado\n  useEffect(() => {\n    const loadRoutine = async () => {\n      if (!currentUser) return;\n      const routineRef = doc(db, 'users', currentUser.uid, 'routines', selectedDay);\n      const routineDoc = await getDoc(routineRef);\n      if (routineDoc.exists()) {\n        setCurrentRoutine(routineDoc.data());\n      } else {\n        setCurrentRoutine({\n          exercises: []\n        });\n      }\n    };\n    loadRoutine();\n  }, [selectedDay, currentUser]);\n  useEffect(() => {\n    if (showAvailable) {\n      getDocs(collection(db, 'routines')).then(snapshot => {\n        setAvailableRoutines(snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        })));\n      });\n    }\n  }, [showAvailable]);\n  const addExercise = () => {\n    if (!selectedExercise) return;\n    const newExercise = {\n      exerciseId: selectedExercise,\n      sets: [{\n        weight: 0,\n        reps: 0,\n        completed: false\n      }]\n    };\n    setCurrentRoutine(prev => ({\n      ...prev,\n      exercises: [...prev.exercises, newExercise]\n    }));\n  };\n  const updateSet = (exerciseIndex, setIndex, field, value) => {\n    setCurrentRoutine(prev => {\n      const newExercises = [...prev.exercises];\n      newExercises[exerciseIndex].sets[setIndex][field] = value;\n      return {\n        ...prev,\n        exercises: newExercises\n      };\n    });\n  };\n  const addSet = exerciseIndex => {\n    setCurrentRoutine(prev => {\n      const newExercises = [...prev.exercises];\n      newExercises[exerciseIndex].sets.push({\n        weight: 0,\n        reps: 0,\n        completed: false,\n        timer: {\n          min: 0,\n          sec: 0\n        }\n      });\n      return {\n        ...prev,\n        exercises: newExercises\n      };\n    });\n  };\n  const removeSet = (exerciseIndex, setIndex) => {\n    setCurrentRoutine(prev => {\n      const newExercises = [...prev.exercises];\n      newExercises[exerciseIndex].sets = newExercises[exerciseIndex].sets.filter((_, i) => i !== setIndex);\n      return {\n        ...prev,\n        exercises: newExercises\n      };\n    });\n  };\n  const handleTimerChange = (exerciseIndex, setIndex, field, value) => {\n    setCurrentRoutine(prev => {\n      const newExercises = [...prev.exercises];\n      if (!newExercises[exerciseIndex].sets[setIndex].timer) {\n        newExercises[exerciseIndex].sets[setIndex].timer = {\n          min: 0,\n          sec: 0\n        };\n      }\n      newExercises[exerciseIndex].sets[setIndex].timer[field] = value;\n      return {\n        ...prev,\n        exercises: newExercises\n      };\n    });\n  };\n  const startTimer = (exerciseIndex, setIndex) => {\n    const key = `${exerciseIndex}_${setIndex}`;\n    setTimers(prev => ({\n      ...prev,\n      [key]: {\n        running: true,\n        timeLeft: getTimeLeft(exerciseIndex, setIndex)\n      }\n    }));\n    if (timerRefs.current[key]) clearInterval(timerRefs.current[key]);\n    timerRefs.current[key] = setInterval(() => {\n      setTimers(prev => {\n        var _prev$key;\n        const t = ((_prev$key = prev[key]) === null || _prev$key === void 0 ? void 0 : _prev$key.timeLeft) || 0;\n        if (t > 0) {\n          return {\n            ...prev,\n            [key]: {\n              ...prev[key],\n              timeLeft: t - 1\n            }\n          };\n        } else {\n          clearInterval(timerRefs.current[key]);\n          return {\n            ...prev,\n            [key]: {\n              ...prev[key],\n              running: false,\n              timeLeft: 0\n            }\n          };\n        }\n      });\n    }, 1000);\n  };\n  const pauseTimer = (exerciseIndex, setIndex) => {\n    const key = `${exerciseIndex}_${setIndex}`;\n    setTimers(prev => ({\n      ...prev,\n      [key]: {\n        ...prev[key],\n        running: false\n      }\n    }));\n    if (timerRefs.current[key]) clearInterval(timerRefs.current[key]);\n  };\n  const getTimeLeft = (exerciseIndex, setIndex) => {\n    var _set$timer, _set$timer2;\n    const set = currentRoutine.exercises[exerciseIndex].sets[setIndex];\n    const min = parseInt(((_set$timer = set.timer) === null || _set$timer === void 0 ? void 0 : _set$timer.min) || 0, 10);\n    const sec = parseInt(((_set$timer2 = set.timer) === null || _set$timer2 === void 0 ? void 0 : _set$timer2.sec) || 0, 10);\n    return min * 60 + sec;\n  };\n  const formatTime = seconds => {\n    const m = Math.floor(seconds / 60);\n    const s = seconds % 60;\n    return `${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`;\n  };\n  useEffect(() => {\n    return () => {\n      Object.values(timerRefs.current).forEach(clearInterval);\n    };\n  }, []);\n  const saveRoutine = async () => {\n    if (!currentUser) return;\n    setLoading(true);\n    try {\n      const routineRef = doc(db, 'users', currentUser.uid, 'routines', selectedDay);\n      await setDoc(routineRef, {\n        ...currentRoutine,\n        updatedAt: serverTimestamp()\n      });\n      alert('Rutina guardada exitosamente');\n    } catch (error) {\n      console.error('Error al guardar la rutina:', error);\n      alert('Error al guardar la rutina');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen text-white p-4 pb-24 neon-luxury\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"neon-glow-luxury\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ParticlesBackground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-black/40 backdrop-blur-sm rounded-xl p-6 border border-neon-gold/30 shadow-neon-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gradient-gold mb-4\",\n          children: \"Rutina Diaria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-500/20 text-red-300 p-2 rounded mb-2 text-xs border border-red-500/30\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mb-4 px-4 py-2 neon-btn-add-luxury rounded text-sm font-bold hover:shadow-neon transition-all duration-300\",\n          onClick: () => setShowAvailable(v => !v),\n          children: \"Ver Rutinas Predise\\xF1adas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2 mb-4\",\n          children: DAYS.map(day => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedDay(day),\n            className: `px-4 py-2 rounded-lg font-semibold transition-all duration-300 ${selectedDay === day ? 'bg-gradient-to-r from-neon-gold to-neon-gold-dark text-black shadow-neon' : 'bg-black/30 text-gray-300 border border-neon-gold/20 hover:border-neon-gold/40'}`,\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-bold text-neon-gold mb-2\",\n          children: \"Agregar Ejercicio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCategory,\n            onChange: e => setSelectedCategory(e.target.value),\n            className: \"w-full px-4 py-2 rounded-lg bg-black/30 border border-neon-gold/20 text-white neon-input-luxury\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccionar Grupo Muscular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat.id,\n              children: cat.name\n            }, cat.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedExercise,\n            onChange: e => setSelectedExercise(e.target.value),\n            className: \"w-full px-4 py-2 rounded-lg bg-black/30 border border-neon-gold/20 text-white neon-input-luxury\",\n            disabled: !selectedCategory,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccionar Ejercicio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this), exercises.map(ex => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: ex.id,\n              children: ex.name\n            }, ex.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addExercise,\n            className: \"w-full py-2 neon-btn-add-luxury rounded font-bold hover:shadow-neon transition-all duration-300\",\n            disabled: !selectedExercise,\n            children: \"Agregar Ejercicio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveRoutine,\n          className: \"w-full py-2 neon-btn-add-luxury rounded font-bold hover:shadow-neon transition-all duration-300\",\n          disabled: loading,\n          children: loading ? 'Guardando...' : 'Guardar Rutina'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), showAvailable && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-900 p-2 rounded mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-white text-base mb-2\",\n          children: \"Rutinas Disponibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }, this), availableRoutines.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: \"No hay rutinas predise\\xF1adas.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 60\n        }, this), availableRoutines.map(routine => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 p-2 bg-gray-800 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-yellow-300 font-bold\",\n            children: routine.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white text-sm mb-1\",\n            children: routine.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-yellow-500 text-black px-2 py-1 rounded text-xs\",\n            onClick: async () => {\n              // Copiar la rutina prediseñada a la rutina del usuario para el día seleccionado\n              setCurrentRoutine({\n                exercises: routine.exercises\n              });\n              alert('Rutina copiada. Ahora puedes modificarla y guardarla como tuya.');\n            },\n            children: \"Usar esta rutina\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 33\n          }, this)]\n        }, routine.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: currentRoutine.exercises.map((exercise, exerciseIndex) => {\n          const exerciseData = exercises.find(e => e.id === exercise.exerciseId);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 p-3 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-base text-white mb-2\",\n              children: (exerciseData === null || exerciseData === void 0 ? void 0 : exerciseData.name) || 'Ejercicio'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overflow-x-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"w-full text-sm text-white\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-2 py-1\",\n                      children: \"Serie\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-2 py-1\",\n                      children: \"Peso\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-2 py-1\",\n                      children: \"Repeticiones\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-2 py-1\",\n                      children: \"Timer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-2 py-1\",\n                      children: \"\\u2714\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: exercise.sets.map((set, setIndex) => {\n                    var _set$timer3, _set$timer4;\n                    const key = `${exerciseIndex}_${setIndex}`;\n                    const timerState = timers[key] || {\n                      running: false,\n                      timeLeft: getTimeLeft(exerciseIndex, setIndex)\n                    };\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-2 py-1\",\n                        children: setIndex + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 356,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-2 py-1\",\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"number\",\n                          value: set.weight,\n                          onChange: e => updateSet(exerciseIndex, setIndex, 'weight', e.target.value),\n                          placeholder: \"Peso (kg)\",\n                          className: \"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 358,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 357,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-2 py-1\",\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"number\",\n                          value: set.reps,\n                          onChange: e => updateSet(exerciseIndex, setIndex, 'reps', e.target.value),\n                          placeholder: \"Reps\",\n                          className: \"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 367,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 366,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-2 py-1 flex items-center gap-1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"number\",\n                          min: \"0\",\n                          value: ((_set$timer3 = set.timer) === null || _set$timer3 === void 0 ? void 0 : _set$timer3.min) || 0,\n                          onChange: e => handleTimerChange(exerciseIndex, setIndex, 'min', e.target.value),\n                          className: \"w-10 p-1 rounded bg-gray-700 text-white border border-gray-600 text-xs mr-1\",\n                          placeholder: \"mm\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 376,\n                          columnNumber: 61\n                        }, this), \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"number\",\n                          min: \"0\",\n                          max: \"59\",\n                          value: ((_set$timer4 = set.timer) === null || _set$timer4 === void 0 ? void 0 : _set$timer4.sec) || 0,\n                          onChange: e => handleTimerChange(exerciseIndex, setIndex, 'sec', e.target.value),\n                          className: \"w-10 p-1 rounded bg-gray-700 text-white border border-gray-600 text-xs ml-1\",\n                          placeholder: \"ss\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 385,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          onClick: () => timerState.running ? pauseTimer(exerciseIndex, setIndex) : startTimer(exerciseIndex, setIndex),\n                          className: \"ml-2 px-2 py-1 bg-yellow-500 text-black rounded text-xs\",\n                          children: timerState.running ? 'Pausar' : 'Iniciar'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 394,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"ml-2 font-mono\",\n                          children: formatTime(timerState.timeLeft)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 401,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 375,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-2 py-1\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"checkbox\",\n                          checked: set.completed,\n                          onChange: e => updateSet(exerciseIndex, setIndex, 'completed', e.target.checked),\n                          className: \"w-4 h-4\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 404,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          onClick: () => removeSet(exerciseIndex, setIndex),\n                          className: \"ml-2 px-2 py-1 bg-red-500 text-white rounded text-xs\",\n                          children: \"Eliminar\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 410,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 403,\n                        columnNumber: 57\n                      }, this)]\n                    }, setIndex, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 53\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => addSet(exerciseIndex),\n                className: \"text-yellow-400 hover:text-yellow-500 text-sm mt-2\",\n                children: \"+ Agregar Serie\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 33\n            }, this)]\n          }, exerciseIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 9\n  }, this);\n};\n_s(DailyRoutine, \"vDljubwX5HUcTZS5tdA48Luj5Ik=\", false, function () {\n  return [useAuth];\n});\n_c = DailyRoutine;\nexport default DailyRoutine;\nvar _c;\n$RefreshReg$(_c, \"DailyRoutine\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","db","collection","doc","setDoc","getDoc","getDocs","query","where","serverTimestamp","Header","ParticlesBackground","jsxDEV","_jsxDEV","DAYS","getToday","days","Date","getDay","DailyRoutine","_s","currentUser","selectedDay","setSelectedDay","categories","setCategories","exercises","setExercises","selectedCategory","setSelectedCategory","selectedExercise","setSelectedExercise","currentRoutine","setCurrentRoutine","loading","setLoading","error","setError","timers","setTimers","timerRefs","showAvailable","setShowAvailable","availableRoutines","setAvailableRoutines","loadCategories","categoriesSnapshot","categoriesData","docs","map","id","data","console","loadExercises","exercisesSnapshot","exercisesData","loadRoutine","routineRef","uid","routineDoc","exists","then","snapshot","addExercise","newExercise","exerciseId","sets","weight","reps","completed","prev","updateSet","exerciseIndex","setIndex","field","value","newExercises","addSet","push","timer","min","sec","removeSet","filter","_","i","handleTimerChange","startTimer","key","running","timeLeft","getTimeLeft","current","clearInterval","setInterval","_prev$key","t","pauseTimer","_set$timer","_set$timer2","set","parseInt","formatTime","seconds","m","Math","floor","s","toString","padStart","Object","values","forEach","saveRoutine","updatedAt","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","v","day","onChange","e","target","cat","name","disabled","ex","length","routine","description","exercise","exerciseData","find","_set$timer3","_set$timer4","timerState","type","placeholder","max","checked","_c","$RefreshReg$"],"sources":["C:/Users/nessc/Semental fit ultima/sementalfit2/src/components/DailyRoutine.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { db } from '../firebase';\nimport { \n    collection, \n    doc, \n    setDoc, \n    getDoc, \n    getDocs, \n    query, \n    where,\n    serverTimestamp \n} from 'firebase/firestore';\nimport Header from './Header';\nimport ParticlesBackground from './ParticlesBackground';\nimport '../styles/global.css';\n\nconst DAYS = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\n\nconst getToday = () => {\n    const days = ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'];\n    return days[new Date().getDay()];\n};\n\nconst DailyRoutine = () => {\n    const { currentUser } = useAuth();\n    const [selectedDay, setSelectedDay] = useState(getToday());\n    const [categories, setCategories] = useState([]);\n    const [exercises, setExercises] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [selectedExercise, setSelectedExercise] = useState('');\n    const [currentRoutine, setCurrentRoutine] = useState({\n        exercises: []\n    });\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    // Timer helpers\n    const [timers, setTimers] = useState({}); // { [exerciseIndex_setIndex]: { running, timeLeft } }\n    const timerRefs = useRef({});\n    const [showAvailable, setShowAvailable] = useState(false);\n    const [availableRoutines, setAvailableRoutines] = useState([]);\n\n    // Cargar categorías\n    useEffect(() => {\n        const loadCategories = async () => {\n            try {\n                setError('');\n                const categoriesSnapshot = await getDocs(collection(db, 'categories'));\n                const categoriesData = categoriesSnapshot.docs.map(doc => ({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n                setCategories(categoriesData);\n            } catch (error) {\n                console.error('Error al cargar categorías:', error);\n                setError('Error al cargar las categorías. Por favor, intenta de nuevo.');\n            }\n        };\n        loadCategories();\n    }, []);\n\n    // Cargar ejercicios cuando se selecciona una categoría\n    useEffect(() => {\n        const loadExercises = async () => {\n            if (!selectedCategory) {\n                setExercises([]);\n                return;\n            }\n            try {\n                setError('');\n                const exercisesSnapshot = await getDocs(\n                    query(collection(db, 'exercises'), \n                    where('categoryId', '==', selectedCategory))\n                );\n                const exercisesData = exercisesSnapshot.docs.map(doc => ({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n                setExercises(exercisesData);\n            } catch (error) {\n                console.error('Error al cargar ejercicios:', error);\n                setError('Error al cargar los ejercicios. Por favor, intenta de nuevo.');\n            }\n        };\n        loadExercises();\n    }, [selectedCategory]);\n\n    // Cargar rutina del día seleccionado\n    useEffect(() => {\n        const loadRoutine = async () => {\n            if (!currentUser) return;\n            const routineRef = doc(db, 'users', currentUser.uid, 'routines', selectedDay);\n            const routineDoc = await getDoc(routineRef);\n            if (routineDoc.exists()) {\n                setCurrentRoutine(routineDoc.data());\n            } else {\n                setCurrentRoutine({ exercises: [] });\n            }\n        };\n        loadRoutine();\n    }, [selectedDay, currentUser]);\n\n    useEffect(() => {\n        if (showAvailable) {\n            getDocs(collection(db, 'routines')).then(snapshot => {\n                setAvailableRoutines(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\n            });\n        }\n    }, [showAvailable]);\n\n    const addExercise = () => {\n        if (!selectedExercise) return;\n        \n        const newExercise = {\n            exerciseId: selectedExercise,\n            sets: [\n                { weight: 0, reps: 0, completed: false }\n            ]\n        };\n\n        setCurrentRoutine(prev => ({\n            ...prev,\n            exercises: [...prev.exercises, newExercise]\n        }));\n    };\n\n    const updateSet = (exerciseIndex, setIndex, field, value) => {\n        setCurrentRoutine(prev => {\n            const newExercises = [...prev.exercises];\n            newExercises[exerciseIndex].sets[setIndex][field] = value;\n            return { ...prev, exercises: newExercises };\n        });\n    };\n\n    const addSet = (exerciseIndex) => {\n        setCurrentRoutine(prev => {\n            const newExercises = [...prev.exercises];\n            newExercises[exerciseIndex].sets.push({\n                weight: 0,\n                reps: 0,\n                completed: false,\n                timer: { min: 0, sec: 0 }\n            });\n            return { ...prev, exercises: newExercises };\n        });\n    };\n\n    const removeSet = (exerciseIndex, setIndex) => {\n        setCurrentRoutine(prev => {\n            const newExercises = [...prev.exercises];\n            newExercises[exerciseIndex].sets = newExercises[exerciseIndex].sets.filter((_, i) => i !== setIndex);\n            return { ...prev, exercises: newExercises };\n        });\n    };\n\n    const handleTimerChange = (exerciseIndex, setIndex, field, value) => {\n        setCurrentRoutine(prev => {\n            const newExercises = [...prev.exercises];\n            if (!newExercises[exerciseIndex].sets[setIndex].timer) {\n                newExercises[exerciseIndex].sets[setIndex].timer = { min: 0, sec: 0 };\n            }\n            newExercises[exerciseIndex].sets[setIndex].timer[field] = value;\n            return { ...prev, exercises: newExercises };\n        });\n    };\n\n    const startTimer = (exerciseIndex, setIndex) => {\n        const key = `${exerciseIndex}_${setIndex}`;\n        setTimers(prev => ({\n            ...prev,\n            [key]: {\n                running: true,\n                timeLeft: getTimeLeft(exerciseIndex, setIndex)\n            }\n        }));\n        if (timerRefs.current[key]) clearInterval(timerRefs.current[key]);\n        timerRefs.current[key] = setInterval(() => {\n            setTimers(prev => {\n                const t = prev[key]?.timeLeft || 0;\n                if (t > 0) {\n                    return {\n                        ...prev,\n                        [key]: { ...prev[key], timeLeft: t - 1 }\n                    };\n                } else {\n                    clearInterval(timerRefs.current[key]);\n                    return {\n                        ...prev,\n                        [key]: { ...prev[key], running: false, timeLeft: 0 }\n                    };\n                }\n            });\n        }, 1000);\n    };\n\n    const pauseTimer = (exerciseIndex, setIndex) => {\n        const key = `${exerciseIndex}_${setIndex}`;\n        setTimers(prev => ({\n            ...prev,\n            [key]: { ...prev[key], running: false }\n        }));\n        if (timerRefs.current[key]) clearInterval(timerRefs.current[key]);\n    };\n\n    const getTimeLeft = (exerciseIndex, setIndex) => {\n        const set = currentRoutine.exercises[exerciseIndex].sets[setIndex];\n        const min = parseInt(set.timer?.min || 0, 10);\n        const sec = parseInt(set.timer?.sec || 0, 10);\n        return min * 60 + sec;\n    };\n\n    const formatTime = (seconds) => {\n        const m = Math.floor(seconds / 60);\n        const s = seconds % 60;\n        return `${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`;\n    };\n\n    useEffect(() => {\n        return () => {\n            Object.values(timerRefs.current).forEach(clearInterval);\n        };\n    }, []);\n\n    const saveRoutine = async () => {\n        if (!currentUser) return;\n        setLoading(true);\n        try {\n            const routineRef = doc(db, 'users', currentUser.uid, 'routines', selectedDay);\n            await setDoc(routineRef, {\n                ...currentRoutine,\n                updatedAt: serverTimestamp()\n            });\n            alert('Rutina guardada exitosamente');\n        } catch (error) {\n            console.error('Error al guardar la rutina:', error);\n            alert('Error al guardar la rutina');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen text-white p-4 pb-24 neon-luxury\">\n            <div className=\"neon-glow-luxury\"></div>\n            <ParticlesBackground />\n            <Header />\n            <div className=\"max-w-2xl mx-auto space-y-6\">\n                <div className=\"bg-black/40 backdrop-blur-sm rounded-xl p-6 border border-neon-gold/30 shadow-neon-sm\">\n                    <h2 className=\"text-2xl font-bold text-gradient-gold mb-4\">Rutina Diaria</h2>\n                    {error && (\n                        <div className=\"bg-red-500/20 text-red-300 p-2 rounded mb-2 text-xs border border-red-500/30\">{error}</div>\n                    )}\n                    <button\n                        className=\"mb-4 px-4 py-2 neon-btn-add-luxury rounded text-sm font-bold hover:shadow-neon transition-all duration-300\"\n                        onClick={() => setShowAvailable(v => !v)}\n                    >\n                        Ver Rutinas Prediseñadas\n                    </button>\n                    <div className=\"flex flex-wrap gap-2 mb-4\">\n                        {DAYS.map(day => (\n                            <button\n                                key={day}\n                                onClick={() => setSelectedDay(day)}\n                                className={`px-4 py-2 rounded-lg font-semibold transition-all duration-300 ${selectedDay === day ? 'bg-gradient-to-r from-neon-gold to-neon-gold-dark text-black shadow-neon' : 'bg-black/30 text-gray-300 border border-neon-gold/20 hover:border-neon-gold/40'}`}\n                            >\n                                {day}\n                            </button>\n                        ))}\n                    </div>\n                    <h3 className=\"text-lg font-bold text-neon-gold mb-2\">Agregar Ejercicio</h3>\n                    <div className=\"space-y-2 mb-4\">\n                        <select\n                            value={selectedCategory}\n                            onChange={e => setSelectedCategory(e.target.value)}\n                            className=\"w-full px-4 py-2 rounded-lg bg-black/30 border border-neon-gold/20 text-white neon-input-luxury\"\n                        >\n                            <option value=\"\">Seleccionar Grupo Muscular</option>\n                            {categories.map(cat => (\n                                <option key={cat.id} value={cat.id}>{cat.name}</option>\n                            ))}\n                        </select>\n                        <select\n                            value={selectedExercise}\n                            onChange={e => setSelectedExercise(e.target.value)}\n                            className=\"w-full px-4 py-2 rounded-lg bg-black/30 border border-neon-gold/20 text-white neon-input-luxury\"\n                            disabled={!selectedCategory}\n                        >\n                            <option value=\"\">Seleccionar Ejercicio</option>\n                            {exercises.map(ex => (\n                                <option key={ex.id} value={ex.id}>{ex.name}</option>\n                            ))}\n                        </select>\n                        <button\n                            onClick={addExercise}\n                            className=\"w-full py-2 neon-btn-add-luxury rounded font-bold hover:shadow-neon transition-all duration-300\"\n                            disabled={!selectedExercise}\n                        >\n                            Agregar Ejercicio\n                        </button>\n                    </div>\n                    <button\n                        onClick={saveRoutine}\n                        className=\"w-full py-2 neon-btn-add-luxury rounded font-bold hover:shadow-neon transition-all duration-300\"\n                        disabled={loading}\n                    >\n                        {loading ? 'Guardando...' : 'Guardar Rutina'}\n                    </button>\n                </div>\n                {showAvailable && (\n                    <div className=\"bg-gray-900 p-2 rounded mb-4\">\n                        <h3 className=\"text-white text-base mb-2\">Rutinas Disponibles</h3>\n                        {availableRoutines.length === 0 && <p className=\"text-gray-400\">No hay rutinas prediseñadas.</p>}\n                        {availableRoutines.map(routine => (\n                            <div key={routine.id} className=\"mb-2 p-2 bg-gray-800 rounded\">\n                                <div className=\"text-yellow-300 font-bold\">{routine.name}</div>\n                                <div className=\"text-white text-sm mb-1\">{routine.description}</div>\n                                <button\n                                    className=\"bg-yellow-500 text-black px-2 py-1 rounded text-xs\"\n                                    onClick={async () => {\n                                        // Copiar la rutina prediseñada a la rutina del usuario para el día seleccionado\n                                        setCurrentRoutine({ exercises: routine.exercises });\n                                        alert('Rutina copiada. Ahora puedes modificarla y guardarla como tuya.');\n                                    }}\n                                >\n                                    Usar esta rutina\n                                </button>\n                            </div>\n                        ))}\n                    </div>\n                )}\n                <div className=\"space-y-3\">\n                    {currentRoutine.exercises.map((exercise, exerciseIndex) => {\n                        const exerciseData = exercises.find(e => e.id === exercise.exerciseId);\n                        return (\n                            <div key={exerciseIndex} className=\"bg-gray-800 p-3 rounded\">\n                                <h4 className=\"text-base text-white mb-2\">\n                                    {exerciseData?.name || 'Ejercicio'}\n                                </h4>\n                                <div className=\"overflow-x-auto\">\n                                    <table className=\"w-full text-sm text-white\">\n                                        <thead>\n                                            <tr>\n                                                <th className=\"px-2 py-1\">Serie</th>\n                                                <th className=\"px-2 py-1\">Peso</th>\n                                                <th className=\"px-2 py-1\">Repeticiones</th>\n                                                <th className=\"px-2 py-1\">Timer</th>\n                                                <th className=\"px-2 py-1\">✔</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {exercise.sets.map((set, setIndex) => {\n                                                const key = `${exerciseIndex}_${setIndex}`;\n                                                const timerState = timers[key] || { running: false, timeLeft: getTimeLeft(exerciseIndex, setIndex) };\n                                                return (\n                                                    <tr key={setIndex}>\n                                                        <td className=\"px-2 py-1\">{setIndex + 1}</td>\n                                                        <td className=\"px-2 py-1\">\n                                                            <input\n                                                                type=\"number\"\n                                                                value={set.weight}\n                                                                onChange={(e) => updateSet(exerciseIndex, setIndex, 'weight', e.target.value)}\n                                                                placeholder=\"Peso (kg)\"\n                                                                className=\"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"\n                                                            />\n                                                        </td>\n                                                        <td className=\"px-2 py-1\">\n                                                            <input\n                                                                type=\"number\"\n                                                                value={set.reps}\n                                                                onChange={(e) => updateSet(exerciseIndex, setIndex, 'reps', e.target.value)}\n                                                                placeholder=\"Reps\"\n                                                                className=\"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"\n                                                            />\n                                                        </td>\n                                                        <td className=\"px-2 py-1 flex items-center gap-1\">\n                                                            <input\n                                                                type=\"number\"\n                                                                min=\"0\"\n                                                                value={set.timer?.min || 0}\n                                                                onChange={(e) => handleTimerChange(exerciseIndex, setIndex, 'min', e.target.value)}\n                                                                className=\"w-10 p-1 rounded bg-gray-700 text-white border border-gray-600 text-xs mr-1\"\n                                                                placeholder=\"mm\"\n                                                            />\n                                                            :\n                                                            <input\n                                                                type=\"number\"\n                                                                min=\"0\"\n                                                                max=\"59\"\n                                                                value={set.timer?.sec || 0}\n                                                                onChange={(e) => handleTimerChange(exerciseIndex, setIndex, 'sec', e.target.value)}\n                                                                className=\"w-10 p-1 rounded bg-gray-700 text-white border border-gray-600 text-xs ml-1\"\n                                                                placeholder=\"ss\"\n                                                            />\n                                                            <button\n                                                                type=\"button\"\n                                                                onClick={() => timerState.running ? pauseTimer(exerciseIndex, setIndex) : startTimer(exerciseIndex, setIndex)}\n                                                                className=\"ml-2 px-2 py-1 bg-yellow-500 text-black rounded text-xs\"\n                                                            >\n                                                                {timerState.running ? 'Pausar' : 'Iniciar'}\n                                                            </button>\n                                                            <span className=\"ml-2 font-mono\">{formatTime(timerState.timeLeft)}</span>\n                                                        </td>\n                                                        <td className=\"px-2 py-1\">\n                                                            <input\n                                                                type=\"checkbox\"\n                                                                checked={set.completed}\n                                                                onChange={(e) => updateSet(exerciseIndex, setIndex, 'completed', e.target.checked)}\n                                                                className=\"w-4 h-4\"\n                                                            />\n                                                            <button\n                                                                type=\"button\"\n                                                                onClick={() => removeSet(exerciseIndex, setIndex)}\n                                                                className=\"ml-2 px-2 py-1 bg-red-500 text-white rounded text-xs\"\n                                                            >\n                                                                Eliminar\n                                                            </button>\n                                                        </td>\n                                                    </tr>\n                                                );\n                                            })}\n                                        </tbody>\n                                    </table>\n                                    <button\n                                        onClick={() => addSet(exerciseIndex)}\n                                        className=\"text-yellow-400 hover:text-yellow-500 text-sm mt-2\"\n                                    >\n                                        + Agregar Serie\n                                    </button>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DailyRoutine; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
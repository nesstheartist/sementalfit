{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nessc\\\\Semental fit ultima\\\\sementalfit2\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { onAuthStateChanged, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, updateProfile, signInWithPopup } from 'firebase/auth';\nimport { doc, getDoc, setDoc, serverTimestamp } from 'firebase/firestore';\nimport { auth, db, googleProvider } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Función para traducir errores de Firebase a mensajes amigables\n  function getErrorMessage(error) {\n    switch (error.code) {\n      case 'auth/email-already-in-use':\n        return 'Este correo electrónico ya está registrado. Por favor, inicia sesión o usa otro correo.';\n      case 'auth/invalid-email':\n        return 'El correo electrónico no es válido.';\n      case 'auth/operation-not-allowed':\n        return 'El registro con correo y contraseña no está habilitado.';\n      case 'auth/weak-password':\n        return 'La contraseña es demasiado débil. Debe tener al menos 6 caracteres.';\n      case 'auth/user-disabled':\n        return 'Esta cuenta ha sido deshabilitada.';\n      case 'auth/user-not-found':\n        return 'No existe una cuenta con este correo electrónico.';\n      case 'auth/wrong-password':\n        return 'Contraseña incorrecta.';\n      case 'auth/too-many-requests':\n        return 'Demasiados intentos fallidos. Por favor, intente más tarde.';\n      case 'auth/popup-closed-by-user':\n        return 'La ventana de inicio de sesión fue cerrada.';\n      case 'auth/popup-blocked':\n        return 'La ventana emergente fue bloqueada. Por favor, permita las ventanas emergentes.';\n      case 'auth/cancelled-popup-request':\n        return 'La solicitud de inicio de sesión fue cancelada.';\n      case 'auth/account-exists-with-different-credential':\n        return 'Ya existe una cuenta con este correo electrónico usando otro método de inicio de sesión.';\n      default:\n        return 'Ocurrió un error. Por favor, intente nuevamente.';\n    }\n  }\n  async function login(email, password) {\n    try {\n      // Primero buscar el usuario en Firestore\n      const usersRef = collection(db, 'users');\n      const q = query(usersRef, where('email', '==', email));\n      const querySnapshot = await getDocs(q);\n      if (querySnapshot.empty) {\n        throw new Error('Usuario no encontrado');\n      }\n      const userDoc = querySnapshot.docs[0];\n      const userData = userDoc.data();\n\n      // Verificar la contraseña\n      if (userData.password !== password) {\n        throw new Error('Contraseña incorrecta');\n      }\n\n      // Si todo está bien, establecer el usuario actual\n      setCurrentUser({\n        uid: userDoc.id,\n        ...userData\n      });\n      return userData;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async function register(email, password, name, role = 1) {\n    try {\n      // Crear el usuario en Firestore\n      const userRef = await addDoc(collection(db, 'users'), {\n        email,\n        password,\n        name,\n        role,\n        createdAt: serverTimestamp()\n      });\n\n      // Establecer el usuario actual\n      setCurrentUser({\n        uid: userRef.id,\n        email,\n        name,\n        role\n      });\n      return userRef.id;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async function loginWithGoogle() {\n    try {\n      setError(null);\n      const result = await signInWithPopup(auth, googleProvider);\n      const user = result.user;\n\n      // Verificar si el usuario ya existe en Firestore\n      const userDoc = await getDoc(doc(db, 'users', user.uid));\n      if (!userDoc.exists()) {\n        // Si es un nuevo usuario, crear su documento en Firestore\n        await setDoc(doc(db, 'users', user.uid), {\n          email: user.email,\n          name: user.displayName,\n          role: 1,\n          // Guardar como número\n          createdAt: serverTimestamp(),\n          lastLogin: serverTimestamp(),\n          status: 'active',\n          photoURL: user.photoURL\n        });\n      } else {\n        // Si el usuario existe, actualizar último inicio de sesión\n        await setDoc(doc(db, 'users', user.uid), {\n          lastLogin: serverTimestamp(),\n          photoURL: user.photoURL\n        }, {\n          merge: true\n        });\n      }\n      return result;\n    } catch (error) {\n      console.error('Error en login con Google:', error);\n      setError(getErrorMessage(error));\n      throw error;\n    }\n  }\n  function logout() {\n    setCurrentUser(null);\n  }\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    loginWithGoogle,\n    loading,\n    error\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","onAuthStateChanged","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","updateProfile","signInWithPopup","doc","getDoc","setDoc","serverTimestamp","auth","db","googleProvider","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","error","setError","getErrorMessage","code","login","email","password","usersRef","collection","q","query","where","querySnapshot","getDocs","empty","Error","userDoc","docs","userData","data","uid","id","register","name","role","userRef","addDoc","createdAt","loginWithGoogle","result","user","exists","displayName","lastLogin","status","photoURL","merge","console","logout","unsubscribe","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nessc/Semental fit ultima/sementalfit2/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { \r\n    onAuthStateChanged, \r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n    signOut,\r\n    updateProfile,\r\n    signInWithPopup\r\n} from 'firebase/auth';\r\nimport { doc, getDoc, setDoc, serverTimestamp } from 'firebase/firestore';\r\nimport { auth, db, googleProvider } from '../firebase';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Función para traducir errores de Firebase a mensajes amigables\r\n    function getErrorMessage(error) {\r\n        switch (error.code) {\r\n            case 'auth/email-already-in-use':\r\n                return 'Este correo electrónico ya está registrado. Por favor, inicia sesión o usa otro correo.';\r\n            case 'auth/invalid-email':\r\n                return 'El correo electrónico no es válido.';\r\n            case 'auth/operation-not-allowed':\r\n                return 'El registro con correo y contraseña no está habilitado.';\r\n            case 'auth/weak-password':\r\n                return 'La contraseña es demasiado débil. Debe tener al menos 6 caracteres.';\r\n            case 'auth/user-disabled':\r\n                return 'Esta cuenta ha sido deshabilitada.';\r\n            case 'auth/user-not-found':\r\n                return 'No existe una cuenta con este correo electrónico.';\r\n            case 'auth/wrong-password':\r\n                return 'Contraseña incorrecta.';\r\n            case 'auth/too-many-requests':\r\n                return 'Demasiados intentos fallidos. Por favor, intente más tarde.';\r\n            case 'auth/popup-closed-by-user':\r\n                return 'La ventana de inicio de sesión fue cerrada.';\r\n            case 'auth/popup-blocked':\r\n                return 'La ventana emergente fue bloqueada. Por favor, permita las ventanas emergentes.';\r\n            case 'auth/cancelled-popup-request':\r\n                return 'La solicitud de inicio de sesión fue cancelada.';\r\n            case 'auth/account-exists-with-different-credential':\r\n                return 'Ya existe una cuenta con este correo electrónico usando otro método de inicio de sesión.';\r\n            default:\r\n                return 'Ocurrió un error. Por favor, intente nuevamente.';\r\n        }\r\n    }\r\n\r\n    async function login(email, password) {\r\n        try {\r\n            // Primero buscar el usuario en Firestore\r\n            const usersRef = collection(db, 'users');\r\n            const q = query(usersRef, where('email', '==', email));\r\n            const querySnapshot = await getDocs(q);\r\n            \r\n            if (querySnapshot.empty) {\r\n                throw new Error('Usuario no encontrado');\r\n            }\r\n\r\n            const userDoc = querySnapshot.docs[0];\r\n            const userData = userDoc.data();\r\n\r\n            // Verificar la contraseña\r\n            if (userData.password !== password) {\r\n                throw new Error('Contraseña incorrecta');\r\n            }\r\n\r\n            // Si todo está bien, establecer el usuario actual\r\n            setCurrentUser({\r\n                uid: userDoc.id,\r\n                ...userData\r\n            });\r\n\r\n            return userData;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async function register(email, password, name, role = 1) {\r\n        try {\r\n            // Crear el usuario en Firestore\r\n            const userRef = await addDoc(collection(db, 'users'), {\r\n                email,\r\n                password,\r\n                name,\r\n                role,\r\n                createdAt: serverTimestamp()\r\n            });\r\n\r\n            // Establecer el usuario actual\r\n            setCurrentUser({\r\n                uid: userRef.id,\r\n                email,\r\n                name,\r\n                role\r\n            });\r\n\r\n            return userRef.id;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async function loginWithGoogle() {\r\n        try {\r\n            setError(null);\r\n            const result = await signInWithPopup(auth, googleProvider);\r\n            const user = result.user;\r\n            \r\n            // Verificar si el usuario ya existe en Firestore\r\n            const userDoc = await getDoc(doc(db, 'users', user.uid));\r\n            \r\n            if (!userDoc.exists()) {\r\n                // Si es un nuevo usuario, crear su documento en Firestore\r\n                await setDoc(doc(db, 'users', user.uid), {\r\n                    email: user.email,\r\n                    name: user.displayName,\r\n                    role: 1, // Guardar como número\r\n                    createdAt: serverTimestamp(),\r\n                    lastLogin: serverTimestamp(),\r\n                    status: 'active',\r\n                    photoURL: user.photoURL\r\n                });\r\n            } else {\r\n                // Si el usuario existe, actualizar último inicio de sesión\r\n                await setDoc(doc(db, 'users', user.uid), {\r\n                    lastLogin: serverTimestamp(),\r\n                    photoURL: user.photoURL\r\n                }, { merge: true });\r\n            }\r\n\r\n            return result;\r\n        } catch (error) {\r\n            console.error('Error en login con Google:', error);\r\n            setError(getErrorMessage(error));\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    function logout() {\r\n        setCurrentUser(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, user => {\r\n            setCurrentUser(user);\r\n            setLoading(false);\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        register,\r\n        logout,\r\n        loginWithGoogle,\r\n        loading,\r\n        error\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
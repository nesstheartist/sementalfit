{"ast":null,"code":"import { collection, addDoc, getDocs, doc, getDoc, updateDoc, query, where, arrayUnion, setDoc, writeBatch } from 'firebase/firestore';\nimport { db } from '../firebase';\n\n// Funciones para usuarios\nexport const createUser = async userData => {\n  try {\n    const docRef = await addDoc(collection(db, \"users\"), {\n      ...userData,\n      level: 1,\n      xp: 0,\n      createdAt: new Date(),\n      lastLogin: new Date()\n    });\n    return docRef.id;\n  } catch (error) {\n    console.error(\"Error al crear usuario:\", error);\n    throw error;\n  }\n};\nexport const getUser = async userId => {\n  try {\n    const docRef = doc(db, \"users\", userId);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n      return {\n        id: docSnap.id,\n        ...docSnap.data()\n      };\n    }\n    return null;\n  } catch (error) {\n    console.error(\"Error al obtener usuario:\", error);\n    throw error;\n  }\n};\n\n// Funciones para rutinas\nexport const saveWorkout = async (userId, workoutData) => {\n  try {\n    const docRef = await addDoc(collection(db, \"workouts\"), {\n      userId,\n      ...workoutData,\n      completedAt: new Date()\n    });\n    return docRef.id;\n  } catch (error) {\n    console.error(\"Error al guardar rutina:\", error);\n    throw error;\n  }\n};\nexport const getUserWorkouts = async userId => {\n  try {\n    const q = query(collection(db, \"workouts\"), where(\"userId\", \"==\", userId));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error(\"Error al obtener rutinas:\", error);\n    throw error;\n  }\n};\n\n// Funciones para progreso\nexport const updateProgress = async (userId, progressData) => {\n  try {\n    const userRef = doc(db, \"users\", userId);\n    await updateDoc(userRef, {\n      xp: progressData.xp,\n      level: progressData.level,\n      lastUpdated: new Date()\n    });\n  } catch (error) {\n    console.error(\"Error al actualizar progreso:\", error);\n    throw error;\n  }\n};\n\n// Función para obtener todos los usuarios\nexport const getUsers = async () => {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'users'));\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error(\"Error al obtener usuarios:\", error);\n    throw error;\n  }\n};\n\n// Funciones para ejercicios\nexport const getAllExercises = async () => {\n  try {\n    const querySnapshot = await getDocs(collection(db, \"exercises\"));\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error(\"Error al obtener ejercicios:\", error);\n    throw error;\n  }\n};\n\n// Funciones para rutinas personalizadas\nexport const createUserRoutine = async (userId, day, exercises) => {\n  try {\n    const routineRef = doc(db, \"user_routines\", userId);\n    await setDoc(routineRef, {\n      [day]: exercises\n    }, {\n      merge: true\n    });\n    return true;\n  } catch (error) {\n    console.error(\"Error al crear rutina:\", error);\n    throw error;\n  }\n};\nexport const getUserRoutine = async userId => {\n  try {\n    const routineRef = doc(db, \"user_routines\", userId);\n    const routineSnap = await getDoc(routineRef);\n    if (routineSnap.exists()) {\n      return routineSnap.data();\n    }\n    return null;\n  } catch (error) {\n    console.error(\"Error al obtener rutina:\", error);\n    throw error;\n  }\n};\nexport const updateExerciseInRoutine = async (userId, day, exerciseId, newData) => {\n  try {\n    const routineRef = doc(db, \"user_routines\", userId);\n    const routineSnap = await getDoc(routineRef);\n    if (routineSnap.exists()) {\n      const routine = routineSnap.data();\n      const dayExercises = routine[day] || [];\n      const updatedExercises = dayExercises.map(ex => ex.id === exerciseId ? {\n        ...ex,\n        ...newData\n      } : ex);\n      await updateDoc(routineRef, {\n        [day]: updatedExercises\n      });\n      return true;\n    }\n    return false;\n  } catch (error) {\n    console.error(\"Error al actualizar ejercicio:\", error);\n    throw error;\n  }\n};\n\n// Función para inicializar ejercicios en la base de datos\nexport const initializeExercises = async () => {\n  const exercises = [\n  // PECHO\n  {\n    name: \"Press banca plano con barra\",\n    category: \"Pecho\"\n  }, {\n    name: \"Press banca plano con mancuernas\",\n    category: \"Pecho\"\n  }, {\n    name: \"Press inclinado con barra\",\n    category: \"Pecho\"\n  }, {\n    name: \"Press inclinado con mancuernas\",\n    category: \"Pecho\"\n  }, {\n    name: \"Press declinado con barra\",\n    category: \"Pecho\"\n  }, {\n    name: \"Press declinado con mancuernas\",\n    category: \"Pecho\"\n  }, {\n    name: \"Aperturas con mancuernas en banco plano\",\n    category: \"Pecho\"\n  }, {\n    name: \"Aperturas en banco inclinado\",\n    category: \"Pecho\"\n  }, {\n    name: \"Aperturas en peck-deck (contractora)\",\n    category: \"Pecho\"\n  }, {\n    name: \"Fondos en paralelas (pecho)\",\n    category: \"Pecho\"\n  }, {\n    name: \"Flexiones clásicas\",\n    category: \"Pecho\"\n  }, {\n    name: \"Flexiones inclinadas\",\n    category: \"Pecho\"\n  }, {\n    name: \"Flexiones con lastre\",\n    category: \"Pecho\"\n  }, {\n    name: \"Flexiones con palmada\",\n    category: \"Pecho\"\n  }, {\n    name: \"Press en máquina Hammer\",\n    category: \"Pecho\"\n  }, {\n    name: \"Press en máquina inclinada\",\n    category: \"Pecho\"\n  }, {\n    name: \"Aperturas con polea alta\",\n    category: \"Pecho\"\n  }, {\n    name: \"Aperturas con polea baja\",\n    category: \"Pecho\"\n  }, {\n    name: \"Press con polea de pie\",\n    category: \"Pecho\"\n  }, {\n    name: \"Svend press (con disco)\",\n    category: \"Pecho\"\n  },\n  // ESPALDA\n  {\n    name: \"Dominadas pronas\",\n    category: \"Espalda\"\n  }, {\n    name: \"Dominadas supinas\",\n    category: \"Espalda\"\n  }, {\n    name: \"Remo con barra\",\n    category: \"Espalda\"\n  }, {\n    name: \"Remo con mancuerna a una mano\",\n    category: \"Espalda\"\n  }, {\n    name: \"Remo en máquina Hammer\",\n    category: \"Espalda\"\n  }, {\n    name: \"Remo en polea baja\",\n    category: \"Espalda\"\n  }, {\n    name: \"Remo en T-bar\",\n    category: \"Espalda\"\n  }, {\n    name: \"Jalón al pecho (polea alta)\",\n    category: \"Espalda\"\n  }, {\n    name: \"Jalón tras nuca\",\n    category: \"Espalda\"\n  }, {\n    name: \"Jalón al pecho con agarre neutro\",\n    category: \"Espalda\"\n  }, {\n    name: \"Pull-over con mancuerna\",\n    category: \"Espalda\"\n  }, {\n    name: \"Pull-over en polea alta\",\n    category: \"Espalda\"\n  }, {\n    name: \"Peso muerto convencional\",\n    category: \"Espalda\"\n  }, {\n    name: \"Peso muerto rumano\",\n    category: \"Espalda\"\n  }, {\n    name: \"Peso muerto estilo sumo\",\n    category: \"Espalda\"\n  }, {\n    name: \"Remo invertido (inverted row)\",\n    category: \"Espalda\"\n  }, {\n    name: \"Remo pecho apoyado (chest supported row)\",\n    category: \"Espalda\"\n  }, {\n    name: \"Remo con banda elástica\",\n    category: \"Espalda\"\n  }, {\n    name: \"Remo unilateral en polea\",\n    category: \"Espalda\"\n  }, {\n    name: \"Face pulls\",\n    category: \"Espalda\"\n  },\n  // PIERNAS\n  {\n    name: \"Sentadilla libre con barra\",\n    category: \"Piernas\"\n  }, {\n    name: \"Sentadilla frontal\",\n    category: \"Piernas\"\n  }, {\n    name: \"Sentadilla hack\",\n    category: \"Piernas\"\n  }, {\n    name: \"Sentadilla goblet\",\n    category: \"Piernas\"\n  }, {\n    name: \"Sentadilla con mancuerna\",\n    category: \"Piernas\"\n  }, {\n    name: \"Prensa 45°\",\n    category: \"Piernas\"\n  }, {\n    name: \"Prensa horizontal\",\n    category: \"Piernas\"\n  }, {\n    name: \"Zancadas caminando\",\n    category: \"Piernas\"\n  }, {\n    name: \"Zancadas con barra\",\n    category: \"Piernas\"\n  }, {\n    name: \"Zancadas búlgaras\",\n    category: \"Piernas\"\n  }, {\n    name: \"Peso muerto rumano\",\n    category: \"Piernas\"\n  }, {\n    name: \"Peso muerto con piernas rígidas\",\n    category: \"Piernas\"\n  }, {\n    name: \"Buenos días con barra\",\n    category: \"Piernas\"\n  }, {\n    name: \"Curl femoral acostado\",\n    category: \"Piernas\"\n  }, {\n    name: \"Curl femoral sentado\",\n    category: \"Piernas\"\n  }, {\n    name: \"Hip thrust con barra\",\n    category: \"Piernas\"\n  }, {\n    name: \"Hip thrust en máquina\",\n    category: \"Piernas\"\n  }, {\n    name: \"Sentadilla sumo con mancuerna\",\n    category: \"Piernas\"\n  }, {\n    name: \"Step-ups al banco\",\n    category: \"Piernas\"\n  }, {\n    name: \"Desplantes con peso\",\n    category: \"Piernas\"\n  },\n  // GEMELOS\n  {\n    name: \"Elevación de talones de pie con barra\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Elevación de talones en máquina de gemelos\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Elevación sentado en máquina\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Elevación de talones con mancuerna (una pierna)\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Elevación en prensa\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Elevación en escalón con barra\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Elevación con peso corporal\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Saltos en punta de pie\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Gemelos en máquina Smith\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Elevaciones explosivas\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Elevación de talón unilateral\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Gemelos en multipower\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Gemelos en hack\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Gemelos sentado con disco\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Saltos con mancuerna\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Saltos a la comba (en punta)\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Gemelos isométricos\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Elevación en escalón con pausa\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Elevaciones con tempo lento\",\n    category: \"Gemelos\"\n  }, {\n    name: \"Elevación con banda elástica\",\n    category: \"Gemelos\"\n  },\n  // HOMBROS\n  {\n    name: \"Press militar con barra\",\n    category: \"Hombros\"\n  }, {\n    name: \"Press militar con mancuernas\",\n    category: \"Hombros\"\n  }, {\n    name: \"Press Arnold\",\n    category: \"Hombros\"\n  }, {\n    name: \"Elevaciones laterales con mancuernas\",\n    category: \"Hombros\"\n  }, {\n    name: \"Elevaciones frontales con mancuernas\",\n    category: \"Hombros\"\n  }, {\n    name: \"Elevaciones posteriores (deltoide posterior)\",\n    category: \"Hombros\"\n  }, {\n    name: \"Remo al cuello con barra\",\n    category: \"Hombros\"\n  }, {\n    name: \"Elevaciones con cables\",\n    category: \"Hombros\"\n  }, {\n    name: \"Press en máquina\",\n    category: \"Hombros\"\n  }, {\n    name: \"Press con barra detrás de la nuca\",\n    category: \"Hombros\"\n  }, {\n    name: \"Pájaros con mancuernas\",\n    category: \"Hombros\"\n  }, {\n    name: \"Pájaros en peck-deck inversa\",\n    category: \"Hombros\"\n  }, {\n    name: \"Press con mancuernas sentado\",\n    category: \"Hombros\"\n  }, {\n    name: \"Elevación lateral unilateral\",\n    category: \"Hombros\"\n  }, {\n    name: \"Elevación frontal con disco\",\n    category: \"Hombros\"\n  }, {\n    name: \"Press de hombro en polea\",\n    category: \"Hombros\"\n  }, {\n    name: \"Remo con mancuerna\",\n    category: \"Hombros\"\n  }, {\n    name: \"Press landmine unilateral\",\n    category: \"Hombros\"\n  }, {\n    name: \"Push press\",\n    category: \"Hombros\"\n  }, {\n    name: \"Face pulls\",\n    category: \"Hombros\"\n  },\n  // TRÍCEPS\n  {\n    name: \"Fondos en paralelas (tríceps)\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Fondos en banco\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Extensión de tríceps en polea alta\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Extensión de tríceps con cuerda\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Extensión con barra recta en polea\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Rompecráneos (skullcrushers)\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Extensión de tríceps con mancuernas\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Patada de tríceps\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Press cerrado en banca\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Press con barra EZ\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Tríceps en máquina\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Extensión a una mano en polea\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Tríceps overhead con cuerda\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Press francés con barra\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Tríceps con barra tras nuca\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Press de banca con agarre estrecho\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Tríceps en polea unilateral\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Tríceps en banda elástica\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Tríceps con mancuerna sentado\",\n    category: \"Tríceps\"\n  }, {\n    name: \"Extensión con kettlebell\",\n    category: \"Tríceps\"\n  },\n  // BÍCEPS\n  {\n    name: \"Curl con barra\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl con barra EZ\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl con mancuernas alternado\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl concentrado\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl predicador\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl en banco inclinado\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl martillo\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl martillo en cuerda (polea)\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl con polea baja\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl de arrastre\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl spider\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl con banda elástica\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl inverso\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl 21s\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl Zottman\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl en máquina Scott\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl doble con giro\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl isométrico\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl con kettlebell\",\n    category: \"Bíceps\"\n  }, {\n    name: \"Curl cruzado (tipo Arnold)\",\n    category: \"Bíceps\"\n  },\n  // ABDOMINALES\n  {\n    name: \"Crunch abdominal\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Crunch con peso\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Crunch en máquina\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Crunch inverso\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Crunch en banco declinado\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Elevaciones de piernas\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Elevaciones en paralelas\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Elevaciones colgado\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Plancha abdominal\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Plancha lateral\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Rueda abdominal (ab wheel)\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Ab roll en máquina\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Bicicleta en el suelo\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Toques al talón\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Elevaciones con giro\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Crunch en polea alta (cable crunch)\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Sit-up con disco\",\n    category: \"Abdominales\"\n  }, {\n    name: \"V-ups\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Plancha con toque de hombros\",\n    category: \"Abdominales\"\n  }, {\n    name: \"Escaladores (mountain climbers)\",\n    category: \"Abdominales\"\n  }];\n  try {\n    const batch = db.batch();\n    const exercisesRef = collection(db, \"exercises\");\n    for (const exercise of exercises) {\n      const docRef = doc(exercisesRef);\n      batch.set(docRef, exercise);\n    }\n    await batch.commit();\n    console.log('Ejercicios inicializados correctamente');\n  } catch (error) {\n    console.error('Error al inicializar ejercicios:', error);\n    throw error;\n  }\n};\n\n// Función para inicializar ejercicios por categoría\nexport const initializeExercisesByCategory = async category => {\n  const exercisesByCategory = {\n    \"Pecho\": [{\n      name: \"Press banca plano con barra\",\n      category: \"Pecho\"\n    }, {\n      name: \"Press banca plano con mancuernas\",\n      category: \"Pecho\"\n    }, {\n      name: \"Press inclinado con barra\",\n      category: \"Pecho\"\n    }, {\n      name: \"Press inclinado con mancuernas\",\n      category: \"Pecho\"\n    }, {\n      name: \"Press declinado con barra\",\n      category: \"Pecho\"\n    }, {\n      name: \"Press declinado con mancuernas\",\n      category: \"Pecho\"\n    }, {\n      name: \"Aperturas con mancuernas en banco plano\",\n      category: \"Pecho\"\n    }, {\n      name: \"Aperturas en banco inclinado\",\n      category: \"Pecho\"\n    }, {\n      name: \"Aperturas en peck-deck (contractora)\",\n      category: \"Pecho\"\n    }, {\n      name: \"Fondos en paralelas (pecho)\",\n      category: \"Pecho\"\n    }],\n    \"Espalda\": [{\n      name: \"Dominadas pronas\",\n      category: \"Espalda\"\n    }, {\n      name: \"Dominadas supinas\",\n      category: \"Espalda\"\n    }, {\n      name: \"Remo con barra\",\n      category: \"Espalda\"\n    }, {\n      name: \"Remo con mancuerna a una mano\",\n      category: \"Espalda\"\n    }, {\n      name: \"Remo en máquina Hammer\",\n      category: \"Espalda\"\n    }, {\n      name: \"Remo en polea baja\",\n      category: \"Espalda\"\n    }, {\n      name: \"Remo en T-bar\",\n      category: \"Espalda\"\n    }, {\n      name: \"Jalón al pecho (polea alta)\",\n      category: \"Espalda\"\n    }, {\n      name: \"Jalón tras nuca\",\n      category: \"Espalda\"\n    }, {\n      name: \"Jalón al pecho con agarre neutro\",\n      category: \"Espalda\"\n    }]\n  };\n  try {\n    const batch = writeBatch(db);\n    const exercisesRef = collection(db, \"exercises\");\n    const exercises = exercisesByCategory[category] || [];\n    for (const exercise of exercises) {\n      const docRef = doc(exercisesRef);\n      batch.set(docRef, exercise);\n    }\n    await batch.commit();\n    console.log(`Ejercicios de ${category} inicializados correctamente`);\n    return true;\n  } catch (error) {\n    console.error(`Error al inicializar ejercicios de ${category}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["collection","addDoc","getDocs","doc","getDoc","updateDoc","query","where","arrayUnion","setDoc","writeBatch","db","createUser","userData","docRef","level","xp","createdAt","Date","lastLogin","id","error","console","getUser","userId","docSnap","exists","data","saveWorkout","workoutData","completedAt","getUserWorkouts","q","querySnapshot","docs","map","updateProgress","progressData","userRef","lastUpdated","getUsers","getAllExercises","createUserRoutine","day","exercises","routineRef","merge","getUserRoutine","routineSnap","updateExerciseInRoutine","exerciseId","newData","routine","dayExercises","updatedExercises","ex","initializeExercises","name","category","batch","exercisesRef","exercise","set","commit","log","initializeExercisesByCategory","exercisesByCategory"],"sources":["C:/Users/nessc/AndroidStudioProjects/sementalfit/sementalfit2/src/services/database.js"],"sourcesContent":["import { \r\n    collection, \r\n    addDoc, \r\n    getDocs, \r\n    doc, \r\n    getDoc, \r\n    updateDoc,\r\n    query,\r\n    where,\r\n    arrayUnion,\r\n    setDoc,\r\n    writeBatch\r\n} from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\n// Funciones para usuarios\r\nexport const createUser = async (userData) => {\r\n    try {\r\n        const docRef = await addDoc(collection(db, \"users\"), {\r\n            ...userData,\r\n            level: 1,\r\n            xp: 0,\r\n            createdAt: new Date(),\r\n            lastLogin: new Date()\r\n        });\r\n        return docRef.id;\r\n    } catch (error) {\r\n        console.error(\"Error al crear usuario:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getUser = async (userId) => {\r\n    try {\r\n        const docRef = doc(db, \"users\", userId);\r\n        const docSnap = await getDoc(docRef);\r\n        if (docSnap.exists()) {\r\n            return { id: docSnap.id, ...docSnap.data() };\r\n        }\r\n        return null;\r\n    } catch (error) {\r\n        console.error(\"Error al obtener usuario:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Funciones para rutinas\r\nexport const saveWorkout = async (userId, workoutData) => {\r\n    try {\r\n        const docRef = await addDoc(collection(db, \"workouts\"), {\r\n            userId,\r\n            ...workoutData,\r\n            completedAt: new Date()\r\n        });\r\n        return docRef.id;\r\n    } catch (error) {\r\n        console.error(\"Error al guardar rutina:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getUserWorkouts = async (userId) => {\r\n    try {\r\n        const q = query(collection(db, \"workouts\"), where(\"userId\", \"==\", userId));\r\n        const querySnapshot = await getDocs(q);\r\n        return querySnapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data()\r\n        }));\r\n    } catch (error) {\r\n        console.error(\"Error al obtener rutinas:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Funciones para progreso\r\nexport const updateProgress = async (userId, progressData) => {\r\n    try {\r\n        const userRef = doc(db, \"users\", userId);\r\n        await updateDoc(userRef, {\r\n            xp: progressData.xp,\r\n            level: progressData.level,\r\n            lastUpdated: new Date()\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error al actualizar progreso:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Función para obtener todos los usuarios\r\nexport const getUsers = async () => {\r\n    try {\r\n        const querySnapshot = await getDocs(collection(db, 'users'));\r\n        return querySnapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data()\r\n        }));\r\n    } catch (error) {\r\n        console.error(\"Error al obtener usuarios:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Funciones para ejercicios\r\nexport const getAllExercises = async () => {\r\n    try {\r\n        const querySnapshot = await getDocs(collection(db, \"exercises\"));\r\n        return querySnapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data()\r\n        }));\r\n    } catch (error) {\r\n        console.error(\"Error al obtener ejercicios:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Funciones para rutinas personalizadas\r\nexport const createUserRoutine = async (userId, day, exercises) => {\r\n    try {\r\n        const routineRef = doc(db, \"user_routines\", userId);\r\n        await setDoc(routineRef, {\r\n            [day]: exercises\r\n        }, { merge: true });\r\n        return true;\r\n    } catch (error) {\r\n        console.error(\"Error al crear rutina:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getUserRoutine = async (userId) => {\r\n    try {\r\n        const routineRef = doc(db, \"user_routines\", userId);\r\n        const routineSnap = await getDoc(routineRef);\r\n        if (routineSnap.exists()) {\r\n            return routineSnap.data();\r\n        }\r\n        return null;\r\n    } catch (error) {\r\n        console.error(\"Error al obtener rutina:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateExerciseInRoutine = async (userId, day, exerciseId, newData) => {\r\n    try {\r\n        const routineRef = doc(db, \"user_routines\", userId);\r\n        const routineSnap = await getDoc(routineRef);\r\n        if (routineSnap.exists()) {\r\n            const routine = routineSnap.data();\r\n            const dayExercises = routine[day] || [];\r\n            const updatedExercises = dayExercises.map(ex => \r\n                ex.id === exerciseId ? { ...ex, ...newData } : ex\r\n            );\r\n            await updateDoc(routineRef, {\r\n                [day]: updatedExercises\r\n            });\r\n            return true;\r\n        }\r\n        return false;\r\n    } catch (error) {\r\n        console.error(\"Error al actualizar ejercicio:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Función para inicializar ejercicios en la base de datos\r\nexport const initializeExercises = async () => {\r\n    const exercises = [\r\n        // PECHO\r\n        { name: \"Press banca plano con barra\", category: \"Pecho\" },\r\n        { name: \"Press banca plano con mancuernas\", category: \"Pecho\" },\r\n        { name: \"Press inclinado con barra\", category: \"Pecho\" },\r\n        { name: \"Press inclinado con mancuernas\", category: \"Pecho\" },\r\n        { name: \"Press declinado con barra\", category: \"Pecho\" },\r\n        { name: \"Press declinado con mancuernas\", category: \"Pecho\" },\r\n        { name: \"Aperturas con mancuernas en banco plano\", category: \"Pecho\" },\r\n        { name: \"Aperturas en banco inclinado\", category: \"Pecho\" },\r\n        { name: \"Aperturas en peck-deck (contractora)\", category: \"Pecho\" },\r\n        { name: \"Fondos en paralelas (pecho)\", category: \"Pecho\" },\r\n        { name: \"Flexiones clásicas\", category: \"Pecho\" },\r\n        { name: \"Flexiones inclinadas\", category: \"Pecho\" },\r\n        { name: \"Flexiones con lastre\", category: \"Pecho\" },\r\n        { name: \"Flexiones con palmada\", category: \"Pecho\" },\r\n        { name: \"Press en máquina Hammer\", category: \"Pecho\" },\r\n        { name: \"Press en máquina inclinada\", category: \"Pecho\" },\r\n        { name: \"Aperturas con polea alta\", category: \"Pecho\" },\r\n        { name: \"Aperturas con polea baja\", category: \"Pecho\" },\r\n        { name: \"Press con polea de pie\", category: \"Pecho\" },\r\n        { name: \"Svend press (con disco)\", category: \"Pecho\" },\r\n\r\n        // ESPALDA\r\n        { name: \"Dominadas pronas\", category: \"Espalda\" },\r\n        { name: \"Dominadas supinas\", category: \"Espalda\" },\r\n        { name: \"Remo con barra\", category: \"Espalda\" },\r\n        { name: \"Remo con mancuerna a una mano\", category: \"Espalda\" },\r\n        { name: \"Remo en máquina Hammer\", category: \"Espalda\" },\r\n        { name: \"Remo en polea baja\", category: \"Espalda\" },\r\n        { name: \"Remo en T-bar\", category: \"Espalda\" },\r\n        { name: \"Jalón al pecho (polea alta)\", category: \"Espalda\" },\r\n        { name: \"Jalón tras nuca\", category: \"Espalda\" },\r\n        { name: \"Jalón al pecho con agarre neutro\", category: \"Espalda\" },\r\n        { name: \"Pull-over con mancuerna\", category: \"Espalda\" },\r\n        { name: \"Pull-over en polea alta\", category: \"Espalda\" },\r\n        { name: \"Peso muerto convencional\", category: \"Espalda\" },\r\n        { name: \"Peso muerto rumano\", category: \"Espalda\" },\r\n        { name: \"Peso muerto estilo sumo\", category: \"Espalda\" },\r\n        { name: \"Remo invertido (inverted row)\", category: \"Espalda\" },\r\n        { name: \"Remo pecho apoyado (chest supported row)\", category: \"Espalda\" },\r\n        { name: \"Remo con banda elástica\", category: \"Espalda\" },\r\n        { name: \"Remo unilateral en polea\", category: \"Espalda\" },\r\n        { name: \"Face pulls\", category: \"Espalda\" },\r\n\r\n        // PIERNAS\r\n        { name: \"Sentadilla libre con barra\", category: \"Piernas\" },\r\n        { name: \"Sentadilla frontal\", category: \"Piernas\" },\r\n        { name: \"Sentadilla hack\", category: \"Piernas\" },\r\n        { name: \"Sentadilla goblet\", category: \"Piernas\" },\r\n        { name: \"Sentadilla con mancuerna\", category: \"Piernas\" },\r\n        { name: \"Prensa 45°\", category: \"Piernas\" },\r\n        { name: \"Prensa horizontal\", category: \"Piernas\" },\r\n        { name: \"Zancadas caminando\", category: \"Piernas\" },\r\n        { name: \"Zancadas con barra\", category: \"Piernas\" },\r\n        { name: \"Zancadas búlgaras\", category: \"Piernas\" },\r\n        { name: \"Peso muerto rumano\", category: \"Piernas\" },\r\n        { name: \"Peso muerto con piernas rígidas\", category: \"Piernas\" },\r\n        { name: \"Buenos días con barra\", category: \"Piernas\" },\r\n        { name: \"Curl femoral acostado\", category: \"Piernas\" },\r\n        { name: \"Curl femoral sentado\", category: \"Piernas\" },\r\n        { name: \"Hip thrust con barra\", category: \"Piernas\" },\r\n        { name: \"Hip thrust en máquina\", category: \"Piernas\" },\r\n        { name: \"Sentadilla sumo con mancuerna\", category: \"Piernas\" },\r\n        { name: \"Step-ups al banco\", category: \"Piernas\" },\r\n        { name: \"Desplantes con peso\", category: \"Piernas\" },\r\n\r\n        // GEMELOS\r\n        { name: \"Elevación de talones de pie con barra\", category: \"Gemelos\" },\r\n        { name: \"Elevación de talones en máquina de gemelos\", category: \"Gemelos\" },\r\n        { name: \"Elevación sentado en máquina\", category: \"Gemelos\" },\r\n        { name: \"Elevación de talones con mancuerna (una pierna)\", category: \"Gemelos\" },\r\n        { name: \"Elevación en prensa\", category: \"Gemelos\" },\r\n        { name: \"Elevación en escalón con barra\", category: \"Gemelos\" },\r\n        { name: \"Elevación con peso corporal\", category: \"Gemelos\" },\r\n        { name: \"Saltos en punta de pie\", category: \"Gemelos\" },\r\n        { name: \"Gemelos en máquina Smith\", category: \"Gemelos\" },\r\n        { name: \"Elevaciones explosivas\", category: \"Gemelos\" },\r\n        { name: \"Elevación de talón unilateral\", category: \"Gemelos\" },\r\n        { name: \"Gemelos en multipower\", category: \"Gemelos\" },\r\n        { name: \"Gemelos en hack\", category: \"Gemelos\" },\r\n        { name: \"Gemelos sentado con disco\", category: \"Gemelos\" },\r\n        { name: \"Saltos con mancuerna\", category: \"Gemelos\" },\r\n        { name: \"Saltos a la comba (en punta)\", category: \"Gemelos\" },\r\n        { name: \"Gemelos isométricos\", category: \"Gemelos\" },\r\n        { name: \"Elevación en escalón con pausa\", category: \"Gemelos\" },\r\n        { name: \"Elevaciones con tempo lento\", category: \"Gemelos\" },\r\n        { name: \"Elevación con banda elástica\", category: \"Gemelos\" },\r\n\r\n        // HOMBROS\r\n        { name: \"Press militar con barra\", category: \"Hombros\" },\r\n        { name: \"Press militar con mancuernas\", category: \"Hombros\" },\r\n        { name: \"Press Arnold\", category: \"Hombros\" },\r\n        { name: \"Elevaciones laterales con mancuernas\", category: \"Hombros\" },\r\n        { name: \"Elevaciones frontales con mancuernas\", category: \"Hombros\" },\r\n        { name: \"Elevaciones posteriores (deltoide posterior)\", category: \"Hombros\" },\r\n        { name: \"Remo al cuello con barra\", category: \"Hombros\" },\r\n        { name: \"Elevaciones con cables\", category: \"Hombros\" },\r\n        { name: \"Press en máquina\", category: \"Hombros\" },\r\n        { name: \"Press con barra detrás de la nuca\", category: \"Hombros\" },\r\n        { name: \"Pájaros con mancuernas\", category: \"Hombros\" },\r\n        { name: \"Pájaros en peck-deck inversa\", category: \"Hombros\" },\r\n        { name: \"Press con mancuernas sentado\", category: \"Hombros\" },\r\n        { name: \"Elevación lateral unilateral\", category: \"Hombros\" },\r\n        { name: \"Elevación frontal con disco\", category: \"Hombros\" },\r\n        { name: \"Press de hombro en polea\", category: \"Hombros\" },\r\n        { name: \"Remo con mancuerna\", category: \"Hombros\" },\r\n        { name: \"Press landmine unilateral\", category: \"Hombros\" },\r\n        { name: \"Push press\", category: \"Hombros\" },\r\n        { name: \"Face pulls\", category: \"Hombros\" },\r\n\r\n        // TRÍCEPS\r\n        { name: \"Fondos en paralelas (tríceps)\", category: \"Tríceps\" },\r\n        { name: \"Fondos en banco\", category: \"Tríceps\" },\r\n        { name: \"Extensión de tríceps en polea alta\", category: \"Tríceps\" },\r\n        { name: \"Extensión de tríceps con cuerda\", category: \"Tríceps\" },\r\n        { name: \"Extensión con barra recta en polea\", category: \"Tríceps\" },\r\n        { name: \"Rompecráneos (skullcrushers)\", category: \"Tríceps\" },\r\n        { name: \"Extensión de tríceps con mancuernas\", category: \"Tríceps\" },\r\n        { name: \"Patada de tríceps\", category: \"Tríceps\" },\r\n        { name: \"Press cerrado en banca\", category: \"Tríceps\" },\r\n        { name: \"Press con barra EZ\", category: \"Tríceps\" },\r\n        { name: \"Tríceps en máquina\", category: \"Tríceps\" },\r\n        { name: \"Extensión a una mano en polea\", category: \"Tríceps\" },\r\n        { name: \"Tríceps overhead con cuerda\", category: \"Tríceps\" },\r\n        { name: \"Press francés con barra\", category: \"Tríceps\" },\r\n        { name: \"Tríceps con barra tras nuca\", category: \"Tríceps\" },\r\n        { name: \"Press de banca con agarre estrecho\", category: \"Tríceps\" },\r\n        { name: \"Tríceps en polea unilateral\", category: \"Tríceps\" },\r\n        { name: \"Tríceps en banda elástica\", category: \"Tríceps\" },\r\n        { name: \"Tríceps con mancuerna sentado\", category: \"Tríceps\" },\r\n        { name: \"Extensión con kettlebell\", category: \"Tríceps\" },\r\n\r\n        // BÍCEPS\r\n        { name: \"Curl con barra\", category: \"Bíceps\" },\r\n        { name: \"Curl con barra EZ\", category: \"Bíceps\" },\r\n        { name: \"Curl con mancuernas alternado\", category: \"Bíceps\" },\r\n        { name: \"Curl concentrado\", category: \"Bíceps\" },\r\n        { name: \"Curl predicador\", category: \"Bíceps\" },\r\n        { name: \"Curl en banco inclinado\", category: \"Bíceps\" },\r\n        { name: \"Curl martillo\", category: \"Bíceps\" },\r\n        { name: \"Curl martillo en cuerda (polea)\", category: \"Bíceps\" },\r\n        { name: \"Curl con polea baja\", category: \"Bíceps\" },\r\n        { name: \"Curl de arrastre\", category: \"Bíceps\" },\r\n        { name: \"Curl spider\", category: \"Bíceps\" },\r\n        { name: \"Curl con banda elástica\", category: \"Bíceps\" },\r\n        { name: \"Curl inverso\", category: \"Bíceps\" },\r\n        { name: \"Curl 21s\", category: \"Bíceps\" },\r\n        { name: \"Curl Zottman\", category: \"Bíceps\" },\r\n        { name: \"Curl en máquina Scott\", category: \"Bíceps\" },\r\n        { name: \"Curl doble con giro\", category: \"Bíceps\" },\r\n        { name: \"Curl isométrico\", category: \"Bíceps\" },\r\n        { name: \"Curl con kettlebell\", category: \"Bíceps\" },\r\n        { name: \"Curl cruzado (tipo Arnold)\", category: \"Bíceps\" },\r\n\r\n        // ABDOMINALES\r\n        { name: \"Crunch abdominal\", category: \"Abdominales\" },\r\n        { name: \"Crunch con peso\", category: \"Abdominales\" },\r\n        { name: \"Crunch en máquina\", category: \"Abdominales\" },\r\n        { name: \"Crunch inverso\", category: \"Abdominales\" },\r\n        { name: \"Crunch en banco declinado\", category: \"Abdominales\" },\r\n        { name: \"Elevaciones de piernas\", category: \"Abdominales\" },\r\n        { name: \"Elevaciones en paralelas\", category: \"Abdominales\" },\r\n        { name: \"Elevaciones colgado\", category: \"Abdominales\" },\r\n        { name: \"Plancha abdominal\", category: \"Abdominales\" },\r\n        { name: \"Plancha lateral\", category: \"Abdominales\" },\r\n        { name: \"Rueda abdominal (ab wheel)\", category: \"Abdominales\" },\r\n        { name: \"Ab roll en máquina\", category: \"Abdominales\" },\r\n        { name: \"Bicicleta en el suelo\", category: \"Abdominales\" },\r\n        { name: \"Toques al talón\", category: \"Abdominales\" },\r\n        { name: \"Elevaciones con giro\", category: \"Abdominales\" },\r\n        { name: \"Crunch en polea alta (cable crunch)\", category: \"Abdominales\" },\r\n        { name: \"Sit-up con disco\", category: \"Abdominales\" },\r\n        { name: \"V-ups\", category: \"Abdominales\" },\r\n        { name: \"Plancha con toque de hombros\", category: \"Abdominales\" },\r\n        { name: \"Escaladores (mountain climbers)\", category: \"Abdominales\" }\r\n    ];\r\n\r\n    try {\r\n        const batch = db.batch();\r\n        const exercisesRef = collection(db, \"exercises\");\r\n        \r\n        for (const exercise of exercises) {\r\n            const docRef = doc(exercisesRef);\r\n            batch.set(docRef, exercise);\r\n        }\r\n        \r\n        await batch.commit();\r\n        console.log('Ejercicios inicializados correctamente');\r\n    } catch (error) {\r\n        console.error('Error al inicializar ejercicios:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Función para inicializar ejercicios por categoría\r\nexport const initializeExercisesByCategory = async (category) => {\r\n    const exercisesByCategory = {\r\n        \"Pecho\": [\r\n            { name: \"Press banca plano con barra\", category: \"Pecho\" },\r\n            { name: \"Press banca plano con mancuernas\", category: \"Pecho\" },\r\n            { name: \"Press inclinado con barra\", category: \"Pecho\" },\r\n            { name: \"Press inclinado con mancuernas\", category: \"Pecho\" },\r\n            { name: \"Press declinado con barra\", category: \"Pecho\" },\r\n            { name: \"Press declinado con mancuernas\", category: \"Pecho\" },\r\n            { name: \"Aperturas con mancuernas en banco plano\", category: \"Pecho\" },\r\n            { name: \"Aperturas en banco inclinado\", category: \"Pecho\" },\r\n            { name: \"Aperturas en peck-deck (contractora)\", category: \"Pecho\" },\r\n            { name: \"Fondos en paralelas (pecho)\", category: \"Pecho\" }\r\n        ],\r\n        \"Espalda\": [\r\n            { name: \"Dominadas pronas\", category: \"Espalda\" },\r\n            { name: \"Dominadas supinas\", category: \"Espalda\" },\r\n            { name: \"Remo con barra\", category: \"Espalda\" },\r\n            { name: \"Remo con mancuerna a una mano\", category: \"Espalda\" },\r\n            { name: \"Remo en máquina Hammer\", category: \"Espalda\" },\r\n            { name: \"Remo en polea baja\", category: \"Espalda\" },\r\n            { name: \"Remo en T-bar\", category: \"Espalda\" },\r\n            { name: \"Jalón al pecho (polea alta)\", category: \"Espalda\" },\r\n            { name: \"Jalón tras nuca\", category: \"Espalda\" },\r\n            { name: \"Jalón al pecho con agarre neutro\", category: \"Espalda\" }\r\n        ]\r\n    };\r\n\r\n    try {\r\n        const batch = writeBatch(db);\r\n        const exercisesRef = collection(db, \"exercises\");\r\n        \r\n        const exercises = exercisesByCategory[category] || [];\r\n        for (const exercise of exercises) {\r\n            const docRef = doc(exercisesRef);\r\n            batch.set(docRef, exercise);\r\n        }\r\n        \r\n        await batch.commit();\r\n        console.log(`Ejercicios de ${category} inicializados correctamente`);\r\n        return true;\r\n    } catch (error) {\r\n        console.error(`Error al inicializar ejercicios de ${category}:`, error);\r\n        throw error;\r\n    }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
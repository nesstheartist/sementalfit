{"ast":null,"code":"import _objectSpread from\"C:/Users/nessc/Semental fit ultima/sementalfit2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{createUserWithEmailAndPassword,signInWithEmailAndPassword,signOut,onAuthStateChanged,signInWithPopup}from'firebase/auth';import{doc,getDoc,setDoc,serverTimestamp}from'firebase/firestore';import{auth,db,googleProvider}from'../firebase';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export function useAuth(){return useContext(AuthContext);}export function AuthProvider(_ref){let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);function getErrorMessage(error){switch(error.code){case'auth/user-not-found':return'No existe una cuenta con este email.';case'auth/wrong-password':return'Contraseña incorrecta.';case'auth/email-already-in-use':return'Este email ya está registrado.';case'auth/weak-password':return'La contraseña debe tener al menos 6 caracteres.';case'auth/invalid-email':return'Email inválido.';default:return error.message;}}async function login(email,password){try{setError(null);const userCredential=await signInWithEmailAndPassword(auth,email,password);// Actualizar último inicio de sesión\nawait setDoc(doc(db,'users',userCredential.user.uid),{lastLogin:serverTimestamp()},{merge:true});return userCredential;}catch(error){console.error('Error en login:',error);setError(getErrorMessage(error));throw error;}}async function loginWithGoogle(){try{setError(null);const result=await signInWithPopup(auth,googleProvider);const user=result.user;// Verificar si el usuario ya existe en Firestore\nconst userDoc=await getDoc(doc(db,'users',user.uid));if(!userDoc.exists()){// Si no existe, crear nuevo usuario\nawait setDoc(doc(db,'users',user.uid),{email:user.email,name:user.displayName,role:1,// Usuario normal por defecto\ncreatedAt:serverTimestamp(),lastLogin:serverTimestamp()});}else{// Si existe, actualizar último login\nawait setDoc(doc(db,'users',user.uid),{lastLogin:serverTimestamp()},{merge:true});}return result;}catch(error){console.error('Error en login con Google:',error);setError(getErrorMessage(error));throw error;}}async function register(email,password,name){let role=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;try{setError(null);// Si se intenta crear un personal trainer (rol 2) y el usuario actual no es admin (rol 3), lanzar error\nif(role===2&&(!currentUser||currentUser.role!==3)){throw new Error('Solo un administrador puede crear un Personal Trainer.');}const userCredential=await createUserWithEmailAndPassword(auth,email,password);// Crear documento de usuario en Firestore\nawait setDoc(doc(db,'users',userCredential.user.uid),{email,name,role,// Guardar como número\ncreatedAt:serverTimestamp(),lastLogin:serverTimestamp(),status:'active'});console.log('Documento de usuario creado en Firestore:',userCredential.user.uid);return userCredential;}catch(error){console.error('Error en registro:',error);setError(getErrorMessage(error));throw error;}}async function logout(){try{setError(null);await signOut(auth);}catch(error){console.error('Error en logout:',error);setError(getErrorMessage(error));throw error;}}useEffect(()=>{const unsubscribe=onAuthStateChanged(auth,async user=>{if(user){try{const userDoc=await getDoc(doc(db,'users',user.uid));if(userDoc.exists()){const userData=userDoc.data();if(userData.status==='blocked'){await signOut(auth);setError('Usuario bloqueado');return;}setCurrentUser(_objectSpread(_objectSpread({},user),userData));}}catch(error){console.error('Error al obtener datos del usuario:',error);setError(getErrorMessage(error));}}else{setCurrentUser(null);}setLoading(false);});return unsubscribe;},[]);const value={currentUser,login,loginWithGoogle,register,logout,error};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","signInWithPopup","doc","getDoc","setDoc","serverTimestamp","auth","db","googleProvider","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","currentUser","setCurrentUser","loading","setLoading","error","setError","getErrorMessage","code","message","login","email","password","userCredential","user","uid","lastLogin","merge","console","loginWithGoogle","result","userDoc","exists","name","displayName","role","createdAt","register","arguments","length","undefined","Error","status","log","logout","unsubscribe","userData","data","_objectSpread","value","Provider"],"sources":["C:/Users/nessc/Semental fit ultima/sementalfit2/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { \n    createUserWithEmailAndPassword, \n    signInWithEmailAndPassword, \n    signOut, \n    onAuthStateChanged,\n    signInWithPopup\n} from 'firebase/auth';\nimport { doc, getDoc, setDoc, serverTimestamp } from 'firebase/firestore';\nimport { auth, db, googleProvider } from '../firebase';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    function getErrorMessage(error) {\n        switch (error.code) {\n            case 'auth/user-not-found':\n                return 'No existe una cuenta con este email.';\n            case 'auth/wrong-password':\n                return 'Contraseña incorrecta.';\n            case 'auth/email-already-in-use':\n                return 'Este email ya está registrado.';\n            case 'auth/weak-password':\n                return 'La contraseña debe tener al menos 6 caracteres.';\n            case 'auth/invalid-email':\n                return 'Email inválido.';\n            default:\n                return error.message;\n        }\n    }\n\n    async function login(email, password) {\n        try {\n            setError(null);\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\n            \n            // Actualizar último inicio de sesión\n            await setDoc(doc(db, 'users', userCredential.user.uid), {\n                lastLogin: serverTimestamp()\n            }, { merge: true });\n\n            return userCredential;\n        } catch (error) {\n            console.error('Error en login:', error);\n            setError(getErrorMessage(error));\n            throw error;\n        }\n    }\n\n    async function loginWithGoogle() {\n        try {\n            setError(null);\n            const result = await signInWithPopup(auth, googleProvider);\n            const user = result.user;\n            \n            // Verificar si el usuario ya existe en Firestore\n            const userDoc = await getDoc(doc(db, 'users', user.uid));\n            \n            if (!userDoc.exists()) {\n                // Si no existe, crear nuevo usuario\n                await setDoc(doc(db, 'users', user.uid), {\n                    email: user.email,\n                    name: user.displayName,\n                    role: 1, // Usuario normal por defecto\n                    createdAt: serverTimestamp(),\n                    lastLogin: serverTimestamp()\n                });\n            } else {\n                // Si existe, actualizar último login\n                await setDoc(doc(db, 'users', user.uid), {\n                    lastLogin: serverTimestamp()\n                }, { merge: true });\n            }\n\n            return result;\n        } catch (error) {\n            console.error('Error en login con Google:', error);\n            setError(getErrorMessage(error));\n            throw error;\n        }\n    }\n\n    async function register(email, password, name, role = 1) {\n        try {\n            setError(null);\n            // Si se intenta crear un personal trainer (rol 2) y el usuario actual no es admin (rol 3), lanzar error\n            if (role === 2 && (!currentUser || currentUser.role !== 3)) {\n                throw new Error('Solo un administrador puede crear un Personal Trainer.');\n            }\n            const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n            \n            // Crear documento de usuario en Firestore\n            await setDoc(doc(db, 'users', userCredential.user.uid), {\n                email,\n                name,\n                role, // Guardar como número\n                createdAt: serverTimestamp(),\n                lastLogin: serverTimestamp(),\n                status: 'active'\n            });\n            console.log('Documento de usuario creado en Firestore:', userCredential.user.uid);\n\n            return userCredential;\n        } catch (error) {\n            console.error('Error en registro:', error);\n            setError(getErrorMessage(error));\n            throw error;\n        }\n    }\n\n    async function logout() {\n        try {\n            setError(null);\n            await signOut(auth);\n        } catch (error) {\n            console.error('Error en logout:', error);\n            setError(getErrorMessage(error));\n            throw error;\n        }\n    }\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, async (user) => {\n            if (user) {\n                try {\n                    const userDoc = await getDoc(doc(db, 'users', user.uid));\n                    if (userDoc.exists()) {\n                        const userData = userDoc.data();\n                        if (userData.status === 'blocked') {\n                            await signOut(auth);\n                            setError('Usuario bloqueado');\n                            return;\n                        }\n                        setCurrentUser({\n                            ...user,\n                            ...userData\n                        });\n                    }\n                } catch (error) {\n                    console.error('Error al obtener datos del usuario:', error);\n                    setError(getErrorMessage(error));\n                }\n            } else {\n                setCurrentUser(null);\n            }\n            setLoading(false);\n        });\n\n        return unsubscribe;\n    }, []);\n\n    const value = {\n        currentUser,\n        login,\n        loginWithGoogle,\n        register,\n        logout,\n        error\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
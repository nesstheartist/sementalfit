{"ast":null,"code":"import { useState, useRef, useCallback } from 'react';\nimport { getTimeout, getState, getEndStatus, PRE_EXIT, nextTick, PRE_ENTER, EXITING, ENTERING, ENTERED, startOrEnd } from './utils.mjs';\nconst updateState = (key, status, setStateMap, latestStateMap, timeoutId, onChange) => {\n  clearTimeout(timeoutId);\n  const state = getState(status);\n  const stateMap = new Map(latestStateMap.current);\n  stateMap.set(key, state);\n  setStateMap(stateMap);\n  latestStateMap.current = stateMap;\n  onChange && onChange({\n    key,\n    current: state\n  });\n};\nconst useTransitionMap = ({\n  allowMultiple,\n  enter = true,\n  exit = true,\n  preEnter,\n  preExit,\n  timeout,\n  initialEntered,\n  mountOnEnter,\n  unmountOnExit,\n  onStateChange: onChange\n} = {}) => {\n  const [stateMap, setStateMap] = useState(new Map());\n  const latestStateMap = useRef(stateMap);\n  const configMap = useRef(new Map());\n  const [enterTimeout, exitTimeout] = getTimeout(timeout);\n  const setItem = useCallback((key, config) => {\n    const {\n      initialEntered: _initialEntered = initialEntered\n    } = config || {};\n    const status = _initialEntered ? ENTERED : startOrEnd(mountOnEnter);\n    updateState(key, status, setStateMap, latestStateMap);\n    configMap.current.set(key, {});\n  }, [initialEntered, mountOnEnter]);\n  const deleteItem = useCallback(key => {\n    const newStateMap = new Map(latestStateMap.current);\n    if (newStateMap.delete(key)) {\n      setStateMap(newStateMap);\n      latestStateMap.current = newStateMap;\n      configMap.current.delete(key);\n      return true;\n    }\n    return false;\n  }, []);\n  const endTransition = useCallback(key => {\n    const stateObj = latestStateMap.current.get(key);\n    if (!stateObj) {\n      process.env.NODE_ENV !== 'production' && console.error(`[React-Transition-State] invalid key: ${key}`);\n      return;\n    }\n    const {\n      timeoutId\n    } = configMap.current.get(key);\n    const status = getEndStatus(stateObj._s, unmountOnExit);\n    status && updateState(key, status, setStateMap, latestStateMap, timeoutId, onChange);\n  }, [onChange, unmountOnExit]);\n  const toggle = useCallback((key, toEnter) => {\n    const stateObj = latestStateMap.current.get(key);\n    if (!stateObj) {\n      process.env.NODE_ENV !== 'production' && console.error(`[React-Transition-State] invalid key: ${key}`);\n      return;\n    }\n    const config = configMap.current.get(key);\n    const transitState = status => {\n      updateState(key, status, setStateMap, latestStateMap, config.timeoutId, onChange);\n      switch (status) {\n        case ENTERING:\n          if (enterTimeout >= 0) config.timeoutId = setTimeout(() => endTransition(key), enterTimeout);\n          break;\n        case EXITING:\n          if (exitTimeout >= 0) config.timeoutId = setTimeout(() => endTransition(key), exitTimeout);\n          break;\n        case PRE_ENTER:\n        case PRE_EXIT:\n          config.timeoutId = nextTick(transitState, status);\n          break;\n      }\n    };\n    const enterStage = stateObj.isEnter;\n    if (typeof toEnter !== 'boolean') toEnter = !enterStage;\n    if (toEnter) {\n      if (!enterStage) {\n        transitState(enter ? preEnter ? PRE_ENTER : ENTERING : ENTERED);\n        !allowMultiple && latestStateMap.current.forEach((_, _key) => _key !== key && toggle(_key, false));\n      }\n    } else {\n      if (enterStage) {\n        transitState(exit ? preExit ? PRE_EXIT : EXITING : startOrEnd(unmountOnExit));\n      }\n    }\n  }, [onChange, endTransition, allowMultiple, enter, exit, preEnter, preExit, enterTimeout, exitTimeout, unmountOnExit]);\n  const toggleAll = useCallback(toEnter => {\n    if (!allowMultiple && toEnter !== false) return;\n    for (const key of latestStateMap.current.keys()) toggle(key, toEnter);\n  }, [allowMultiple, toggle]);\n  return {\n    stateMap,\n    toggle,\n    toggleAll,\n    endTransition,\n    setItem,\n    deleteItem\n  };\n};\nexport { useTransitionMap };","map":{"version":3,"names":["useState","useRef","useCallback","getTimeout","getState","getEndStatus","PRE_EXIT","nextTick","PRE_ENTER","EXITING","ENTERING","ENTERED","startOrEnd","updateState","key","status","setStateMap","latestStateMap","timeoutId","onChange","clearTimeout","state","stateMap","Map","current","set","useTransitionMap","allowMultiple","enter","exit","preEnter","preExit","timeout","initialEntered","mountOnEnter","unmountOnExit","onStateChange","configMap","enterTimeout","exitTimeout","setItem","config","_initialEntered","deleteItem","newStateMap","delete","endTransition","stateObj","get","process","env","NODE_ENV","console","error","_s","toggle","toEnter","transitState","setTimeout","enterStage","isEnter","forEach","_","_key","toggleAll","keys"],"sources":["C:/Users/nessc/Semental fit ultima/node_modules/react-transition-state/dist/esm/hooks/useTransitionMap.mjs"],"sourcesContent":["import { useState, useRef, useCallback } from 'react';\nimport { getTimeout, getState, getEndStatus, PRE_EXIT, nextTick, PRE_ENTER, EXITING, ENTERING, ENTERED, startOrEnd } from './utils.mjs';\n\nconst updateState = (key, status, setStateMap, latestStateMap, timeoutId, onChange) => {\n  clearTimeout(timeoutId);\n  const state = getState(status);\n  const stateMap = new Map(latestStateMap.current);\n  stateMap.set(key, state);\n  setStateMap(stateMap);\n  latestStateMap.current = stateMap;\n  onChange && onChange({\n    key,\n    current: state\n  });\n};\nconst useTransitionMap = ({\n  allowMultiple,\n  enter = true,\n  exit = true,\n  preEnter,\n  preExit,\n  timeout,\n  initialEntered,\n  mountOnEnter,\n  unmountOnExit,\n  onStateChange: onChange\n} = {}) => {\n  const [stateMap, setStateMap] = useState(new Map());\n  const latestStateMap = useRef(stateMap);\n  const configMap = useRef(new Map());\n  const [enterTimeout, exitTimeout] = getTimeout(timeout);\n  const setItem = useCallback((key, config) => {\n    const {\n      initialEntered: _initialEntered = initialEntered\n    } = config || {};\n    const status = _initialEntered ? ENTERED : startOrEnd(mountOnEnter);\n    updateState(key, status, setStateMap, latestStateMap);\n    configMap.current.set(key, {});\n  }, [initialEntered, mountOnEnter]);\n  const deleteItem = useCallback(key => {\n    const newStateMap = new Map(latestStateMap.current);\n    if (newStateMap.delete(key)) {\n      setStateMap(newStateMap);\n      latestStateMap.current = newStateMap;\n      configMap.current.delete(key);\n      return true;\n    }\n    return false;\n  }, []);\n  const endTransition = useCallback(key => {\n    const stateObj = latestStateMap.current.get(key);\n    if (!stateObj) {\n      process.env.NODE_ENV !== 'production' && console.error(`[React-Transition-State] invalid key: ${key}`);\n      return;\n    }\n    const {\n      timeoutId\n    } = configMap.current.get(key);\n    const status = getEndStatus(stateObj._s, unmountOnExit);\n    status && updateState(key, status, setStateMap, latestStateMap, timeoutId, onChange);\n  }, [onChange, unmountOnExit]);\n  const toggle = useCallback((key, toEnter) => {\n    const stateObj = latestStateMap.current.get(key);\n    if (!stateObj) {\n      process.env.NODE_ENV !== 'production' && console.error(`[React-Transition-State] invalid key: ${key}`);\n      return;\n    }\n    const config = configMap.current.get(key);\n    const transitState = status => {\n      updateState(key, status, setStateMap, latestStateMap, config.timeoutId, onChange);\n      switch (status) {\n        case ENTERING:\n          if (enterTimeout >= 0) config.timeoutId = setTimeout(() => endTransition(key), enterTimeout);\n          break;\n        case EXITING:\n          if (exitTimeout >= 0) config.timeoutId = setTimeout(() => endTransition(key), exitTimeout);\n          break;\n        case PRE_ENTER:\n        case PRE_EXIT:\n          config.timeoutId = nextTick(transitState, status);\n          break;\n      }\n    };\n    const enterStage = stateObj.isEnter;\n    if (typeof toEnter !== 'boolean') toEnter = !enterStage;\n    if (toEnter) {\n      if (!enterStage) {\n        transitState(enter ? preEnter ? PRE_ENTER : ENTERING : ENTERED);\n        !allowMultiple && latestStateMap.current.forEach((_, _key) => _key !== key && toggle(_key, false));\n      }\n    } else {\n      if (enterStage) {\n        transitState(exit ? preExit ? PRE_EXIT : EXITING : startOrEnd(unmountOnExit));\n      }\n    }\n  }, [onChange, endTransition, allowMultiple, enter, exit, preEnter, preExit, enterTimeout, exitTimeout, unmountOnExit]);\n  const toggleAll = useCallback(toEnter => {\n    if (!allowMultiple && toEnter !== false) return;\n    for (const key of latestStateMap.current.keys()) toggle(key, toEnter);\n  }, [allowMultiple, toggle]);\n  return {\n    stateMap,\n    toggle,\n    toggleAll,\n    endTransition,\n    setItem,\n    deleteItem\n  };\n};\n\nexport { useTransitionMap };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
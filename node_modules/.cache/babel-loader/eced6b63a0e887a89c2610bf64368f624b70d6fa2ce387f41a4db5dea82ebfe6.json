{"ast":null,"code":"import _objectSpread from\"C:/Users/nessc/Semental fit ultima/sementalfit2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import{useAuth}from'../contexts/AuthContext';import{db}from'../firebase';import{collection,doc,setDoc,getDoc,getDocs,query,where,serverTimestamp}from'firebase/firestore';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DAYS=['Lunes','Martes','Miércoles','Jueves','Viernes','Sábado','Domingo'];const getToday=()=>{const jsDay=new Date().getDay();// JS: 0=Domingo, 1=Lunes, ..., 6=Sábado\nreturn DAYS[jsDay===0?6:jsDay-1];};const DailyRoutine=()=>{const{currentUser}=useAuth();const[selectedDay,setSelectedDay]=useState(getToday());const[categories,setCategories]=useState([]);const[exercises,setExercises]=useState([]);const[selectedCategory,setSelectedCategory]=useState('');const[selectedExercise,setSelectedExercise]=useState('');const[currentRoutine,setCurrentRoutine]=useState({exercises:[]});const[loading,setLoading]=useState(false);// Timer helpers\nconst[timers,setTimers]=useState({});// { [exerciseIndex_setIndex]: { running, timeLeft } }\nconst timerRefs=useRef({});const[showAvailable,setShowAvailable]=useState(false);const[availableRoutines,setAvailableRoutines]=useState([]);// Cargar categorías\nuseEffect(()=>{const loadCategories=async()=>{const categoriesSnapshot=await getDocs(collection(db,'categories'));setCategories(categoriesSnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data())));};loadCategories();},[]);// Cargar ejercicios cuando se selecciona una categoría\nuseEffect(()=>{const loadExercises=async()=>{if(!selectedCategory)return;const exercisesSnapshot=await getDocs(query(collection(db,'exercises'),where('categoryId','==',selectedCategory)));setExercises(exercisesSnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data())));};loadExercises();},[selectedCategory]);// Cargar rutina del día seleccionado\nuseEffect(()=>{const loadRoutine=async()=>{if(!currentUser)return;const routineRef=doc(db,'users',currentUser.uid,'routines',selectedDay);const routineDoc=await getDoc(routineRef);if(routineDoc.exists()){setCurrentRoutine(routineDoc.data());}else{setCurrentRoutine({exercises:[]});}};loadRoutine();},[selectedDay,currentUser]);useEffect(()=>{if(showAvailable){getDocs(collection(db,'routines')).then(snapshot=>{setAvailableRoutines(snapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data())));});}},[showAvailable]);const addExercise=()=>{if(!selectedExercise)return;const newExercise={exerciseId:selectedExercise,sets:[{weight:0,reps:0,completed:false}]};setCurrentRoutine(prev=>_objectSpread(_objectSpread({},prev),{},{exercises:[...prev.exercises,newExercise]}));};const updateSet=(exerciseIndex,setIndex,field,value)=>{setCurrentRoutine(prev=>{const newExercises=[...prev.exercises];newExercises[exerciseIndex].sets[setIndex][field]=value;return _objectSpread(_objectSpread({},prev),{},{exercises:newExercises});});};const addSet=exerciseIndex=>{setCurrentRoutine(prev=>{const newExercises=[...prev.exercises];newExercises[exerciseIndex].sets.push({weight:0,reps:0,completed:false,timer:{min:0,sec:0}});return _objectSpread(_objectSpread({},prev),{},{exercises:newExercises});});};const removeSet=(exerciseIndex,setIndex)=>{setCurrentRoutine(prev=>{const newExercises=[...prev.exercises];newExercises[exerciseIndex].sets=newExercises[exerciseIndex].sets.filter((_,i)=>i!==setIndex);return _objectSpread(_objectSpread({},prev),{},{exercises:newExercises});});};const handleTimerChange=(exerciseIndex,setIndex,field,value)=>{setCurrentRoutine(prev=>{const newExercises=[...prev.exercises];if(!newExercises[exerciseIndex].sets[setIndex].timer){newExercises[exerciseIndex].sets[setIndex].timer={min:0,sec:0};}newExercises[exerciseIndex].sets[setIndex].timer[field]=value;return _objectSpread(_objectSpread({},prev),{},{exercises:newExercises});});};const startTimer=(exerciseIndex,setIndex)=>{const key=\"\".concat(exerciseIndex,\"_\").concat(setIndex);setTimers(prev=>_objectSpread(_objectSpread({},prev),{},{[key]:{running:true,timeLeft:getTimeLeft(exerciseIndex,setIndex)}}));if(timerRefs.current[key])clearInterval(timerRefs.current[key]);timerRefs.current[key]=setInterval(()=>{setTimers(prev=>{var _prev$key;const t=((_prev$key=prev[key])===null||_prev$key===void 0?void 0:_prev$key.timeLeft)||0;if(t>0){return _objectSpread(_objectSpread({},prev),{},{[key]:_objectSpread(_objectSpread({},prev[key]),{},{timeLeft:t-1})});}else{clearInterval(timerRefs.current[key]);return _objectSpread(_objectSpread({},prev),{},{[key]:_objectSpread(_objectSpread({},prev[key]),{},{running:false,timeLeft:0})});}});},1000);};const pauseTimer=(exerciseIndex,setIndex)=>{const key=\"\".concat(exerciseIndex,\"_\").concat(setIndex);setTimers(prev=>_objectSpread(_objectSpread({},prev),{},{[key]:_objectSpread(_objectSpread({},prev[key]),{},{running:false})}));if(timerRefs.current[key])clearInterval(timerRefs.current[key]);};const getTimeLeft=(exerciseIndex,setIndex)=>{var _set$timer,_set$timer2;const set=currentRoutine.exercises[exerciseIndex].sets[setIndex];const min=parseInt(((_set$timer=set.timer)===null||_set$timer===void 0?void 0:_set$timer.min)||0,10);const sec=parseInt(((_set$timer2=set.timer)===null||_set$timer2===void 0?void 0:_set$timer2.sec)||0,10);return min*60+sec;};const formatTime=seconds=>{const m=Math.floor(seconds/60);const s=seconds%60;return\"\".concat(m.toString().padStart(2,'0'),\":\").concat(s.toString().padStart(2,'0'));};useEffect(()=>{return()=>{Object.values(timerRefs.current).forEach(clearInterval);};},[]);const saveRoutine=async()=>{if(!currentUser)return;setLoading(true);try{const routineRef=doc(db,'users',currentUser.uid,'routines',selectedDay);await setDoc(routineRef,_objectSpread(_objectSpread({},currentRoutine),{},{updatedAt:serverTimestamp()}));alert('Rutina guardada exitosamente');}catch(error){console.error('Error al guardar la rutina:',error);alert('Error al guardar la rutina');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"w-full px-2 py-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-yellow-400 mb-3\",children:\"Rutina Diaria\"}),/*#__PURE__*/_jsx(\"button\",{className:\"mb-2 px-4 py-2 bg-yellow-500 text-black rounded text-sm\",onClick:()=>setShowAvailable(v=>!v),children:showAvailable?'Ocultar Rutinas Prediseñadas':'Ver Rutinas Prediseñadas'}),showAvailable&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-900 p-2 rounded mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-white text-base mb-2\",children:\"Rutinas Disponibles\"}),availableRoutines.length===0&&/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400\",children:\"No hay rutinas predise\\xF1adas.\"}),availableRoutines.map(routine=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2 p-2 bg-gray-800 rounded\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-yellow-300 font-bold\",children:routine.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-white text-sm mb-1\",children:routine.description}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-yellow-500 text-black px-2 py-1 rounded text-xs\",onClick:async()=>{// Copiar la rutina prediseñada a la rutina del usuario para el día seleccionado\nsetCurrentRoutine({exercises:routine.exercises});alert('Rutina copiada. Ahora puedes modificarla y guardarla como tuya.');},children:\"Usar esta rutina\"})]},routine.id))]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-1 mb-3\",children:DAYS.map(day=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedDay(day),className:\"px-2 py-1 text-sm rounded \".concat(selectedDay===day?'bg-yellow-500 text-black':'bg-gray-800 text-white'),children:day},day))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg text-white mb-2\",children:\"Agregar Ejercicio\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-2 mb-3\",children:[/*#__PURE__*/_jsxs(\"select\",{value:selectedCategory,onChange:e=>setSelectedCategory(e.target.value),className:\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 text-sm\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Seleccionar Grupo Muscular\"}),categories.map(cat=>/*#__PURE__*/_jsx(\"option\",{value:cat.id,children:cat.name},cat.id))]}),/*#__PURE__*/_jsxs(\"select\",{value:selectedExercise,onChange:e=>setSelectedExercise(e.target.value),className:\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 text-sm\",disabled:!selectedCategory,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Seleccionar Ejercicio\"}),exercises.map(ex=>/*#__PURE__*/_jsx(\"option\",{value:ex.id,children:ex.name},ex.id))]}),/*#__PURE__*/_jsx(\"button\",{onClick:addExercise,disabled:!selectedExercise,className:\"w-full px-3 py-2 bg-yellow-500 text-black rounded text-sm hover:bg-yellow-600 disabled:opacity-50\",children:\"Agregar Ejercicio\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:currentRoutine.exercises.map((exercise,exerciseIndex)=>{const exerciseData=exercises.find(e=>e.id===exercise.exerciseId);return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-3 rounded\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-base text-white mb-2\",children:(exerciseData===null||exerciseData===void 0?void 0:exerciseData.name)||'Ejercicio'}),/*#__PURE__*/_jsxs(\"div\",{className:\"overflow-x-auto\",children:[/*#__PURE__*/_jsxs(\"table\",{className:\"w-full text-sm text-white\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1\",children:\"Serie\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1\",children:\"Peso\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1\",children:\"Repeticiones\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1\",children:\"Timer\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1\",children:\"\\u2714\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:exercise.sets.map((set,setIndex)=>{var _set$timer3,_set$timer4;const key=\"\".concat(exerciseIndex,\"_\").concat(setIndex);const timerState=timers[key]||{running:false,timeLeft:getTimeLeft(exerciseIndex,setIndex)};return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1\",children:setIndex+1}),/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:set.weight,onChange:e=>updateSet(exerciseIndex,setIndex,'weight',e.target.value),placeholder:\"Peso (kg)\",className:\"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:set.reps,onChange:e=>updateSet(exerciseIndex,setIndex,'reps',e.target.value),placeholder:\"Reps\",className:\"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"})}),/*#__PURE__*/_jsxs(\"td\",{className:\"px-2 py-1 flex items-center gap-1\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",value:((_set$timer3=set.timer)===null||_set$timer3===void 0?void 0:_set$timer3.min)||0,onChange:e=>handleTimerChange(exerciseIndex,setIndex,'min',e.target.value),className:\"w-10 p-1 rounded bg-gray-700 text-white border border-gray-600 text-xs mr-1\",placeholder:\"mm\"}),\":\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",max:\"59\",value:((_set$timer4=set.timer)===null||_set$timer4===void 0?void 0:_set$timer4.sec)||0,onChange:e=>handleTimerChange(exerciseIndex,setIndex,'sec',e.target.value),className:\"w-10 p-1 rounded bg-gray-700 text-white border border-gray-600 text-xs ml-1\",placeholder:\"ss\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>timerState.running?pauseTimer(exerciseIndex,setIndex):startTimer(exerciseIndex,setIndex),className:\"ml-2 px-2 py-1 bg-yellow-500 text-black rounded text-xs\",children:timerState.running?'Pausar':'Iniciar'}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 font-mono\",children:formatTime(timerState.timeLeft)})]}),/*#__PURE__*/_jsxs(\"td\",{className:\"px-2 py-1\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:set.completed,onChange:e=>updateSet(exerciseIndex,setIndex,'completed',e.target.checked),className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>removeSet(exerciseIndex,setIndex),className:\"ml-2 px-2 py-1 bg-red-500 text-white rounded text-xs\",children:\"Eliminar\"})]})]},setIndex);})})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>addSet(exerciseIndex),className:\"text-yellow-400 hover:text-yellow-500 text-sm mt-2\",children:\"+ Agregar Serie\"})]})]},exerciseIndex);})}),/*#__PURE__*/_jsx(\"button\",{onClick:saveRoutine,disabled:loading,className:\"mt-4 w-full bg-yellow-500 text-black font-bold py-2 px-4 rounded text-sm hover:bg-yellow-600 disabled:opacity-50\",children:loading?'Guardando...':'Guardar Rutina'})]});};export default DailyRoutine;","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","db","collection","doc","setDoc","getDoc","getDocs","query","where","serverTimestamp","jsx","_jsx","jsxs","_jsxs","DAYS","getToday","jsDay","Date","getDay","DailyRoutine","currentUser","selectedDay","setSelectedDay","categories","setCategories","exercises","setExercises","selectedCategory","setSelectedCategory","selectedExercise","setSelectedExercise","currentRoutine","setCurrentRoutine","loading","setLoading","timers","setTimers","timerRefs","showAvailable","setShowAvailable","availableRoutines","setAvailableRoutines","loadCategories","categoriesSnapshot","docs","map","_objectSpread","id","data","loadExercises","exercisesSnapshot","loadRoutine","routineRef","uid","routineDoc","exists","then","snapshot","addExercise","newExercise","exerciseId","sets","weight","reps","completed","prev","updateSet","exerciseIndex","setIndex","field","value","newExercises","addSet","push","timer","min","sec","removeSet","filter","_","i","handleTimerChange","startTimer","key","concat","running","timeLeft","getTimeLeft","current","clearInterval","setInterval","_prev$key","t","pauseTimer","_set$timer","_set$timer2","set","parseInt","formatTime","seconds","m","Math","floor","s","toString","padStart","Object","values","forEach","saveRoutine","updatedAt","alert","error","console","className","children","onClick","v","length","routine","name","description","day","onChange","e","target","cat","disabled","ex","exercise","exerciseData","find","_set$timer3","_set$timer4","timerState","type","placeholder","max","checked"],"sources":["C:/Users/nessc/Semental fit ultima/sementalfit2/src/components/DailyRoutine.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { db } from '../firebase';\r\nimport { \r\n    collection, \r\n    doc, \r\n    setDoc, \r\n    getDoc, \r\n    getDocs, \r\n    query, \r\n    where,\r\n    serverTimestamp \r\n} from 'firebase/firestore';\r\n\r\nconst DAYS = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\r\n\r\nconst getToday = () => {\r\n    const jsDay = new Date().getDay();\r\n    // JS: 0=Domingo, 1=Lunes, ..., 6=Sábado\r\n    return DAYS[(jsDay === 0 ? 6 : jsDay - 1)];\r\n};\r\n\r\nconst DailyRoutine = () => {\r\n    const { currentUser } = useAuth();\r\n    const [selectedDay, setSelectedDay] = useState(getToday());\r\n    const [categories, setCategories] = useState([]);\r\n    const [exercises, setExercises] = useState([]);\r\n    const [selectedCategory, setSelectedCategory] = useState('');\r\n    const [selectedExercise, setSelectedExercise] = useState('');\r\n    const [currentRoutine, setCurrentRoutine] = useState({\r\n        exercises: []\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    // Timer helpers\r\n    const [timers, setTimers] = useState({}); // { [exerciseIndex_setIndex]: { running, timeLeft } }\r\n    const timerRefs = useRef({});\r\n    const [showAvailable, setShowAvailable] = useState(false);\r\n    const [availableRoutines, setAvailableRoutines] = useState([]);\r\n\r\n    // Cargar categorías\r\n    useEffect(() => {\r\n        const loadCategories = async () => {\r\n            const categoriesSnapshot = await getDocs(collection(db, 'categories'));\r\n            setCategories(categoriesSnapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            })));\r\n        };\r\n        loadCategories();\r\n    }, []);\r\n\r\n    // Cargar ejercicios cuando se selecciona una categoría\r\n    useEffect(() => {\r\n        const loadExercises = async () => {\r\n            if (!selectedCategory) return;\r\n            const exercisesSnapshot = await getDocs(\r\n                query(collection(db, 'exercises'), \r\n                where('categoryId', '==', selectedCategory))\r\n            );\r\n            setExercises(exercisesSnapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            })));\r\n        };\r\n        loadExercises();\r\n    }, [selectedCategory]);\r\n\r\n    // Cargar rutina del día seleccionado\r\n    useEffect(() => {\r\n        const loadRoutine = async () => {\r\n            if (!currentUser) return;\r\n            const routineRef = doc(db, 'users', currentUser.uid, 'routines', selectedDay);\r\n            const routineDoc = await getDoc(routineRef);\r\n            if (routineDoc.exists()) {\r\n                setCurrentRoutine(routineDoc.data());\r\n            } else {\r\n                setCurrentRoutine({ exercises: [] });\r\n            }\r\n        };\r\n        loadRoutine();\r\n    }, [selectedDay, currentUser]);\r\n\r\n    useEffect(() => {\r\n        if (showAvailable) {\r\n            getDocs(collection(db, 'routines')).then(snapshot => {\r\n                setAvailableRoutines(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n            });\r\n        }\r\n    }, [showAvailable]);\r\n\r\n    const addExercise = () => {\r\n        if (!selectedExercise) return;\r\n        \r\n        const newExercise = {\r\n            exerciseId: selectedExercise,\r\n            sets: [\r\n                { weight: 0, reps: 0, completed: false }\r\n            ]\r\n        };\r\n\r\n        setCurrentRoutine(prev => ({\r\n            ...prev,\r\n            exercises: [...prev.exercises, newExercise]\r\n        }));\r\n    };\r\n\r\n    const updateSet = (exerciseIndex, setIndex, field, value) => {\r\n        setCurrentRoutine(prev => {\r\n            const newExercises = [...prev.exercises];\r\n            newExercises[exerciseIndex].sets[setIndex][field] = value;\r\n            return { ...prev, exercises: newExercises };\r\n        });\r\n    };\r\n\r\n    const addSet = (exerciseIndex) => {\r\n        setCurrentRoutine(prev => {\r\n            const newExercises = [...prev.exercises];\r\n            newExercises[exerciseIndex].sets.push({\r\n                weight: 0,\r\n                reps: 0,\r\n                completed: false,\r\n                timer: { min: 0, sec: 0 }\r\n            });\r\n            return { ...prev, exercises: newExercises };\r\n        });\r\n    };\r\n\r\n    const removeSet = (exerciseIndex, setIndex) => {\r\n        setCurrentRoutine(prev => {\r\n            const newExercises = [...prev.exercises];\r\n            newExercises[exerciseIndex].sets = newExercises[exerciseIndex].sets.filter((_, i) => i !== setIndex);\r\n            return { ...prev, exercises: newExercises };\r\n        });\r\n    };\r\n\r\n    const handleTimerChange = (exerciseIndex, setIndex, field, value) => {\r\n        setCurrentRoutine(prev => {\r\n            const newExercises = [...prev.exercises];\r\n            if (!newExercises[exerciseIndex].sets[setIndex].timer) {\r\n                newExercises[exerciseIndex].sets[setIndex].timer = { min: 0, sec: 0 };\r\n            }\r\n            newExercises[exerciseIndex].sets[setIndex].timer[field] = value;\r\n            return { ...prev, exercises: newExercises };\r\n        });\r\n    };\r\n\r\n    const startTimer = (exerciseIndex, setIndex) => {\r\n        const key = `${exerciseIndex}_${setIndex}`;\r\n        setTimers(prev => ({\r\n            ...prev,\r\n            [key]: {\r\n                running: true,\r\n                timeLeft: getTimeLeft(exerciseIndex, setIndex)\r\n            }\r\n        }));\r\n        if (timerRefs.current[key]) clearInterval(timerRefs.current[key]);\r\n        timerRefs.current[key] = setInterval(() => {\r\n            setTimers(prev => {\r\n                const t = prev[key]?.timeLeft || 0;\r\n                if (t > 0) {\r\n                    return {\r\n                        ...prev,\r\n                        [key]: { ...prev[key], timeLeft: t - 1 }\r\n                    };\r\n                } else {\r\n                    clearInterval(timerRefs.current[key]);\r\n                    return {\r\n                        ...prev,\r\n                        [key]: { ...prev[key], running: false, timeLeft: 0 }\r\n                    };\r\n                }\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    const pauseTimer = (exerciseIndex, setIndex) => {\r\n        const key = `${exerciseIndex}_${setIndex}`;\r\n        setTimers(prev => ({\r\n            ...prev,\r\n            [key]: { ...prev[key], running: false }\r\n        }));\r\n        if (timerRefs.current[key]) clearInterval(timerRefs.current[key]);\r\n    };\r\n\r\n    const getTimeLeft = (exerciseIndex, setIndex) => {\r\n        const set = currentRoutine.exercises[exerciseIndex].sets[setIndex];\r\n        const min = parseInt(set.timer?.min || 0, 10);\r\n        const sec = parseInt(set.timer?.sec || 0, 10);\r\n        return min * 60 + sec;\r\n    };\r\n\r\n    const formatTime = (seconds) => {\r\n        const m = Math.floor(seconds / 60);\r\n        const s = seconds % 60;\r\n        return `${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            Object.values(timerRefs.current).forEach(clearInterval);\r\n        };\r\n    }, []);\r\n\r\n    const saveRoutine = async () => {\r\n        if (!currentUser) return;\r\n        setLoading(true);\r\n        try {\r\n            const routineRef = doc(db, 'users', currentUser.uid, 'routines', selectedDay);\r\n            await setDoc(routineRef, {\r\n                ...currentRoutine,\r\n                updatedAt: serverTimestamp()\r\n            });\r\n            alert('Rutina guardada exitosamente');\r\n        } catch (error) {\r\n            console.error('Error al guardar la rutina:', error);\r\n            alert('Error al guardar la rutina');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full px-2 py-4\">\r\n            <div className=\"mb-4\">\r\n                <h2 className=\"text-xl font-bold text-yellow-400 mb-3\">Rutina Diaria</h2>\r\n                <button\r\n                    className=\"mb-2 px-4 py-2 bg-yellow-500 text-black rounded text-sm\"\r\n                    onClick={() => setShowAvailable(v => !v)}\r\n                >\r\n                    {showAvailable ? 'Ocultar Rutinas Prediseñadas' : 'Ver Rutinas Prediseñadas'}\r\n                </button>\r\n                {showAvailable && (\r\n                    <div className=\"bg-gray-900 p-2 rounded mb-4\">\r\n                        <h3 className=\"text-white text-base mb-2\">Rutinas Disponibles</h3>\r\n                        {availableRoutines.length === 0 && <p className=\"text-gray-400\">No hay rutinas prediseñadas.</p>}\r\n                        {availableRoutines.map(routine => (\r\n                            <div key={routine.id} className=\"mb-2 p-2 bg-gray-800 rounded\">\r\n                                <div className=\"text-yellow-300 font-bold\">{routine.name}</div>\r\n                                <div className=\"text-white text-sm mb-1\">{routine.description}</div>\r\n                                <button\r\n                                    className=\"bg-yellow-500 text-black px-2 py-1 rounded text-xs\"\r\n                                    onClick={async () => {\r\n                                        // Copiar la rutina prediseñada a la rutina del usuario para el día seleccionado\r\n                                        setCurrentRoutine({ exercises: routine.exercises });\r\n                                        alert('Rutina copiada. Ahora puedes modificarla y guardarla como tuya.');\r\n                                    }}\r\n                                >\r\n                                    Usar esta rutina\r\n                                </button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                <div className=\"flex flex-wrap gap-1 mb-3\">\r\n                    {DAYS.map(day => (\r\n                        <button\r\n                            key={day}\r\n                            onClick={() => setSelectedDay(day)}\r\n                            className={`px-2 py-1 text-sm rounded ${\r\n                                selectedDay === day \r\n                                    ? 'bg-yellow-500 text-black' \r\n                                    : 'bg-gray-800 text-white'\r\n                            }`}\r\n                        >\r\n                            {day}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mb-4\">\r\n                <h3 className=\"text-lg text-white mb-2\">Agregar Ejercicio</h3>\r\n                <div className=\"flex flex-col gap-2 mb-3\">\r\n                    <select\r\n                        value={selectedCategory}\r\n                        onChange={(e) => setSelectedCategory(e.target.value)}\r\n                        className=\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 text-sm\"\r\n                    >\r\n                        <option value=\"\">Seleccionar Grupo Muscular</option>\r\n                        {categories.map(cat => (\r\n                            <option key={cat.id} value={cat.id}>\r\n                                {cat.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <select\r\n                        value={selectedExercise}\r\n                        onChange={(e) => setSelectedExercise(e.target.value)}\r\n                        className=\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 text-sm\"\r\n                        disabled={!selectedCategory}\r\n                    >\r\n                        <option value=\"\">Seleccionar Ejercicio</option>\r\n                        {exercises.map(ex => (\r\n                            <option key={ex.id} value={ex.id}>\r\n                                {ex.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <button\r\n                        onClick={addExercise}\r\n                        disabled={!selectedExercise}\r\n                        className=\"w-full px-3 py-2 bg-yellow-500 text-black rounded text-sm hover:bg-yellow-600 disabled:opacity-50\"\r\n                    >\r\n                        Agregar Ejercicio\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-3\">\r\n                {currentRoutine.exercises.map((exercise, exerciseIndex) => {\r\n                    const exerciseData = exercises.find(e => e.id === exercise.exerciseId);\r\n                    return (\r\n                        <div key={exerciseIndex} className=\"bg-gray-800 p-3 rounded\">\r\n                            <h4 className=\"text-base text-white mb-2\">\r\n                                {exerciseData?.name || 'Ejercicio'}\r\n                            </h4>\r\n                            <div className=\"overflow-x-auto\">\r\n                                <table className=\"w-full text-sm text-white\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"px-2 py-1\">Serie</th>\r\n                                            <th className=\"px-2 py-1\">Peso</th>\r\n                                            <th className=\"px-2 py-1\">Repeticiones</th>\r\n                                            <th className=\"px-2 py-1\">Timer</th>\r\n                                            <th className=\"px-2 py-1\">✔</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {exercise.sets.map((set, setIndex) => {\r\n                                            const key = `${exerciseIndex}_${setIndex}`;\r\n                                            const timerState = timers[key] || { running: false, timeLeft: getTimeLeft(exerciseIndex, setIndex) };\r\n                                            return (\r\n                                                <tr key={setIndex}>\r\n                                                    <td className=\"px-2 py-1\">{setIndex + 1}</td>\r\n                                                    <td className=\"px-2 py-1\">\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            value={set.weight}\r\n                                                            onChange={(e) => updateSet(exerciseIndex, setIndex, 'weight', e.target.value)}\r\n                                                            placeholder=\"Peso (kg)\"\r\n                                                            className=\"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className=\"px-2 py-1\">\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            value={set.reps}\r\n                                                            onChange={(e) => updateSet(exerciseIndex, setIndex, 'reps', e.target.value)}\r\n                                                            placeholder=\"Reps\"\r\n                                                            className=\"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className=\"px-2 py-1 flex items-center gap-1\">\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            min=\"0\"\r\n                                                            value={set.timer?.min || 0}\r\n                                                            onChange={(e) => handleTimerChange(exerciseIndex, setIndex, 'min', e.target.value)}\r\n                                                            className=\"w-10 p-1 rounded bg-gray-700 text-white border border-gray-600 text-xs mr-1\"\r\n                                                            placeholder=\"mm\"\r\n                                                        />\r\n                                                        :\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            min=\"0\"\r\n                                                            max=\"59\"\r\n                                                            value={set.timer?.sec || 0}\r\n                                                            onChange={(e) => handleTimerChange(exerciseIndex, setIndex, 'sec', e.target.value)}\r\n                                                            className=\"w-10 p-1 rounded bg-gray-700 text-white border border-gray-600 text-xs ml-1\"\r\n                                                            placeholder=\"ss\"\r\n                                                        />\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            onClick={() => timerState.running ? pauseTimer(exerciseIndex, setIndex) : startTimer(exerciseIndex, setIndex)}\r\n                                                            className=\"ml-2 px-2 py-1 bg-yellow-500 text-black rounded text-xs\"\r\n                                                        >\r\n                                                            {timerState.running ? 'Pausar' : 'Iniciar'}\r\n                                                        </button>\r\n                                                        <span className=\"ml-2 font-mono\">{formatTime(timerState.timeLeft)}</span>\r\n                                                    </td>\r\n                                                    <td className=\"px-2 py-1\">\r\n                                                        <input\r\n                                                            type=\"checkbox\"\r\n                                                            checked={set.completed}\r\n                                                            onChange={(e) => updateSet(exerciseIndex, setIndex, 'completed', e.target.checked)}\r\n                                                            className=\"w-4 h-4\"\r\n                                                        />\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            onClick={() => removeSet(exerciseIndex, setIndex)}\r\n                                                            className=\"ml-2 px-2 py-1 bg-red-500 text-white rounded text-xs\"\r\n                                                        >\r\n                                                            Eliminar\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                                <button\r\n                                    onClick={() => addSet(exerciseIndex)}\r\n                                    className=\"text-yellow-400 hover:text-yellow-500 text-sm mt-2\"\r\n                                >\r\n                                    + Agregar Serie\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <button\r\n                onClick={saveRoutine}\r\n                disabled={loading}\r\n                className=\"mt-4 w-full bg-yellow-500 text-black font-bold py-2 px-4 rounded text-sm hover:bg-yellow-600 disabled:opacity-50\"\r\n            >\r\n                {loading ? 'Guardando...' : 'Guardar Rutina'}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DailyRoutine; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from\"C:/Users/nessc/Semental fit ultima/sementalfit2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{useAuth}from'../contexts/AuthContext';import{db}from'../firebase';import{collection,addDoc,getDocs,query,where}from'firebase/firestore';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RoutineForm=()=>{const{currentUser}=useAuth();const[routineName,setRoutineName]=useState('');const[routineDesc,setRoutineDesc]=useState('');const[categories,setCategories]=useState([]);const[exercises,setExercises]=useState([]);const[selectedCategory,setSelectedCategory]=useState('');const[selectedExercise,setSelectedExercise]=useState('');const[routineExercises,setRoutineExercises]=useState([]);const[loading,setLoading]=useState(false);useEffect(()=>{const loadCategories=async()=>{const categoriesSnapshot=await getDocs(collection(db,'categories'));setCategories(categoriesSnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data())));};loadCategories();},[]);useEffect(()=>{const loadExercises=async()=>{if(!selectedCategory)return;const exercisesSnapshot=await getDocs(query(collection(db,'exercises'),where('categoryId','==',selectedCategory)));setExercises(exercisesSnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data())));};loadExercises();},[selectedCategory]);const isValidRoutine=()=>{if(routineExercises.length===0)return false;for(const ex of routineExercises){if(!ex.exerciseId||!ex.categoryId)return false;if(!Array.isArray(ex.sets)||ex.sets.length===0)return false;for(const set of ex.sets){if(set.weight===''||set.reps===''||isNaN(set.weight)||isNaN(set.reps))return false;}}return true;};const addExercise=()=>{if(!selectedExercise)return;setRoutineExercises(prev=>[...prev,{exerciseId:selectedExercise,categoryId:selectedCategory,sets:[{weight:0,reps:0}]}]);};const addSet=exerciseIndex=>{setRoutineExercises(prev=>{const newExercises=[...prev];newExercises[exerciseIndex].sets.push({weight:0,reps:0});return newExercises;});};const removeSet=(exerciseIndex,setIndex)=>{setRoutineExercises(prev=>{const newExercises=[...prev];newExercises[exerciseIndex].sets=newExercises[exerciseIndex].sets.filter((_,i)=>i!==setIndex);return newExercises;});};const updateSet=(exerciseIndex,setIndex,field,value)=>{setRoutineExercises(prev=>{const newExercises=[...prev];// Convertir a número si es weight o reps\nif(field==='weight'||field==='reps'){newExercises[exerciseIndex].sets[setIndex][field]=Number(value);}else{newExercises[exerciseIndex].sets[setIndex][field]=value;}return newExercises;});};const handleSubmit=async e=>{e.preventDefault();if(!currentUser)return;if(routineExercises.length===0){alert('Debes agregar al menos un ejercicio a la rutina.');return;}// Validar estructura de ejercicios y sets\nfor(const ex of routineExercises){if(!ex.exerciseId||!ex.categoryId){alert('Todos los ejercicios deben tener grupo muscular y ejercicio seleccionado.');return;}if(!Array.isArray(ex.sets)||ex.sets.length===0){alert('Cada ejercicio debe tener al menos una serie.');return;}for(const set of ex.sets){if(typeof set.weight!=='number'||typeof set.reps!=='number'){alert('El peso y las repeticiones deben ser números en todas las series.');return;}}}setLoading(true);try{const dataToSave={name:routineName,description:routineDesc,createdBy:currentUser.uid,exercises:routineExercises};console.log('Guardando rutina prediseñada:',dataToSave);await addDoc(collection(db,'routines'),dataToSave);setRoutineName('');setRoutineDesc('');setRoutineExercises([]);alert('Rutina prediseñada creada exitosamente');}catch(error){alert('Error al crear la rutina');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"w-full px-2 py-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-yellow-400 mb-3\",children:\"Crear Rutina Predise\\xF1ada\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-white mb-2\",children:\"Nombre de la Rutina\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:routineName,onChange:e=>setRoutineName(e.target.value),className:\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-white mb-2\",children:\"Descripci\\xF3n\"}),/*#__PURE__*/_jsx(\"textarea\",{value:routineDesc,onChange:e=>setRoutineDesc(e.target.value),className:\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700\",rows:2})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg text-white mb-2\",children:\"Agregar Ejercicio\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-2 mb-3\",children:[/*#__PURE__*/_jsxs(\"select\",{value:selectedCategory,onChange:e=>setSelectedCategory(e.target.value),className:\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 text-sm\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Seleccionar Grupo Muscular\"}),categories.map(cat=>/*#__PURE__*/_jsx(\"option\",{value:cat.id,children:cat.name},cat.id))]}),/*#__PURE__*/_jsxs(\"select\",{value:selectedExercise,onChange:e=>setSelectedExercise(e.target.value),className:\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 text-sm\",disabled:!selectedCategory,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Seleccionar Ejercicio\"}),exercises.map(ex=>/*#__PURE__*/_jsx(\"option\",{value:ex.id,children:ex.name},ex.id))]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:addExercise,disabled:!selectedExercise,className:\"w-full px-3 py-2 bg-yellow-500 text-black rounded text-sm hover:bg-yellow-600 disabled:opacity-50\",children:\"Agregar Ejercicio\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3 mb-8\",children:routineExercises.map((exercise,exerciseIndex)=>{const exerciseData=exercises.find(e=>e.id===exercise.exerciseId);return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-3 rounded\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-base text-white mb-2\",children:(exerciseData===null||exerciseData===void 0?void 0:exerciseData.name)||'Ejercicio'}),/*#__PURE__*/_jsxs(\"div\",{className:\"overflow-x-auto\",children:[/*#__PURE__*/_jsxs(\"table\",{className:\"w-full text-sm text-white\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1\",children:\"Serie\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1\",children:\"Peso\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1\",children:\"Repeticiones\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1\",children:\"Eliminar\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:exercise.sets.map((set,setIndex)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1\",children:setIndex+1}),/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:set.weight,onChange:e=>updateSet(exerciseIndex,setIndex,'weight',e.target.value),placeholder:\"Peso (kg)\",className:\"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:set.reps,onChange:e=>updateSet(exerciseIndex,setIndex,'reps',e.target.value),placeholder:\"Reps\",className:\"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>removeSet(exerciseIndex,setIndex),className:\"px-2 py-1 bg-red-500 text-white rounded text-xs\",children:\"Eliminar\"})})]},setIndex))})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>addSet(exerciseIndex),className:\"text-yellow-400 hover:text-yellow-500 text-sm mt-2\",children:\"+ Agregar Serie\"})]})]},exerciseIndex);})}),/*#__PURE__*/_jsx(\"div\",{className:\"fixed bottom-0 left-0 w-full bg-black p-2 z-50 border-t border-gray-800\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading||!isValidRoutine(),className:\"w-full bg-yellow-500 text-black font-bold py-2 px-4 rounded text-sm hover:bg-yellow-600 disabled:opacity-50\",children:loading?'Creando...':'Crear Rutina Prediseñada'})})]})]});};export default RoutineForm;","map":{"version":3,"names":["React","useState","useEffect","useAuth","db","collection","addDoc","getDocs","query","where","jsx","_jsx","jsxs","_jsxs","RoutineForm","currentUser","routineName","setRoutineName","routineDesc","setRoutineDesc","categories","setCategories","exercises","setExercises","selectedCategory","setSelectedCategory","selectedExercise","setSelectedExercise","routineExercises","setRoutineExercises","loading","setLoading","loadCategories","categoriesSnapshot","docs","map","doc","_objectSpread","id","data","loadExercises","exercisesSnapshot","isValidRoutine","length","ex","exerciseId","categoryId","Array","isArray","sets","set","weight","reps","isNaN","addExercise","prev","addSet","exerciseIndex","newExercises","push","removeSet","setIndex","filter","_","i","updateSet","field","value","Number","handleSubmit","e","preventDefault","alert","dataToSave","name","description","createdBy","uid","console","log","error","className","children","onSubmit","type","onChange","target","required","rows","cat","disabled","onClick","exercise","exerciseData","find","placeholder"],"sources":["C:/Users/nessc/Semental fit ultima/sementalfit2/src/components/RoutineForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { db } from '../firebase';\r\nimport { collection, addDoc, getDocs, query, where } from 'firebase/firestore';\r\n\r\nconst RoutineForm = () => {\r\n    const { currentUser } = useAuth();\r\n    const [routineName, setRoutineName] = useState('');\r\n    const [routineDesc, setRoutineDesc] = useState('');\r\n    const [categories, setCategories] = useState([]);\r\n    const [exercises, setExercises] = useState([]);\r\n    const [selectedCategory, setSelectedCategory] = useState('');\r\n    const [selectedExercise, setSelectedExercise] = useState('');\r\n    const [routineExercises, setRoutineExercises] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const loadCategories = async () => {\r\n            const categoriesSnapshot = await getDocs(collection(db, 'categories'));\r\n            setCategories(categoriesSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n        };\r\n        loadCategories();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const loadExercises = async () => {\r\n            if (!selectedCategory) return;\r\n            const exercisesSnapshot = await getDocs(\r\n                query(collection(db, 'exercises'), where('categoryId', '==', selectedCategory))\r\n            );\r\n            setExercises(exercisesSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n        };\r\n        loadExercises();\r\n    }, [selectedCategory]);\r\n\r\n    const isValidRoutine = () => {\r\n        if (routineExercises.length === 0) return false;\r\n        for (const ex of routineExercises) {\r\n            if (!ex.exerciseId || !ex.categoryId) return false;\r\n            if (!Array.isArray(ex.sets) || ex.sets.length === 0) return false;\r\n            for (const set of ex.sets) {\r\n                if (set.weight === '' || set.reps === '' || isNaN(set.weight) || isNaN(set.reps)) return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const addExercise = () => {\r\n        if (!selectedExercise) return;\r\n        setRoutineExercises(prev => ([\r\n            ...prev,\r\n            {\r\n                exerciseId: selectedExercise,\r\n                categoryId: selectedCategory,\r\n                sets: [\r\n                    { weight: 0, reps: 0 }\r\n                ]\r\n            }\r\n        ]));\r\n    };\r\n\r\n    const addSet = (exerciseIndex) => {\r\n        setRoutineExercises(prev => {\r\n            const newExercises = [...prev];\r\n            newExercises[exerciseIndex].sets.push({ weight: 0, reps: 0 });\r\n            return newExercises;\r\n        });\r\n    };\r\n\r\n    const removeSet = (exerciseIndex, setIndex) => {\r\n        setRoutineExercises(prev => {\r\n            const newExercises = [...prev];\r\n            newExercises[exerciseIndex].sets = newExercises[exerciseIndex].sets.filter((_, i) => i !== setIndex);\r\n            return newExercises;\r\n        });\r\n    };\r\n\r\n    const updateSet = (exerciseIndex, setIndex, field, value) => {\r\n        setRoutineExercises(prev => {\r\n            const newExercises = [...prev];\r\n            // Convertir a número si es weight o reps\r\n            if (field === 'weight' || field === 'reps') {\r\n                newExercises[exerciseIndex].sets[setIndex][field] = Number(value);\r\n            } else {\r\n                newExercises[exerciseIndex].sets[setIndex][field] = value;\r\n            }\r\n            return newExercises;\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!currentUser) return;\r\n        if (routineExercises.length === 0) {\r\n            alert('Debes agregar al menos un ejercicio a la rutina.');\r\n            return;\r\n        }\r\n        // Validar estructura de ejercicios y sets\r\n        for (const ex of routineExercises) {\r\n            if (!ex.exerciseId || !ex.categoryId) {\r\n                alert('Todos los ejercicios deben tener grupo muscular y ejercicio seleccionado.');\r\n                return;\r\n            }\r\n            if (!Array.isArray(ex.sets) || ex.sets.length === 0) {\r\n                alert('Cada ejercicio debe tener al menos una serie.');\r\n                return;\r\n            }\r\n            for (const set of ex.sets) {\r\n                if (typeof set.weight !== 'number' || typeof set.reps !== 'number') {\r\n                    alert('El peso y las repeticiones deben ser números en todas las series.');\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            const dataToSave = {\r\n                name: routineName,\r\n                description: routineDesc,\r\n                createdBy: currentUser.uid,\r\n                exercises: routineExercises\r\n            };\r\n            console.log('Guardando rutina prediseñada:', dataToSave);\r\n            await addDoc(collection(db, 'routines'), dataToSave);\r\n            setRoutineName('');\r\n            setRoutineDesc('');\r\n            setRoutineExercises([]);\r\n            alert('Rutina prediseñada creada exitosamente');\r\n        } catch (error) {\r\n            alert('Error al crear la rutina');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full px-2 py-4\">\r\n            <h2 className=\"text-xl font-bold text-yellow-400 mb-3\">Crear Rutina Prediseñada</h2>\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                <div>\r\n                    <label className=\"block text-white mb-2\">Nombre de la Rutina</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={routineName}\r\n                        onChange={e => setRoutineName(e.target.value)}\r\n                        className=\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block text-white mb-2\">Descripción</label>\r\n                    <textarea\r\n                        value={routineDesc}\r\n                        onChange={e => setRoutineDesc(e.target.value)}\r\n                        className=\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700\"\r\n                        rows={2}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-4\">\r\n                    <h3 className=\"text-lg text-white mb-2\">Agregar Ejercicio</h3>\r\n                    <div className=\"flex flex-col gap-2 mb-3\">\r\n                        <select\r\n                            value={selectedCategory}\r\n                            onChange={e => setSelectedCategory(e.target.value)}\r\n                            className=\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 text-sm\"\r\n                        >\r\n                            <option value=\"\">Seleccionar Grupo Muscular</option>\r\n                            {categories.map(cat => (\r\n                                <option key={cat.id} value={cat.id}>{cat.name}</option>\r\n                            ))}\r\n                        </select>\r\n                        <select\r\n                            value={selectedExercise}\r\n                            onChange={e => setSelectedExercise(e.target.value)}\r\n                            className=\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 text-sm\"\r\n                            disabled={!selectedCategory}\r\n                        >\r\n                            <option value=\"\">Seleccionar Ejercicio</option>\r\n                            {exercises.map(ex => (\r\n                                <option key={ex.id} value={ex.id}>{ex.name}</option>\r\n                            ))}\r\n                        </select>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={addExercise}\r\n                            disabled={!selectedExercise}\r\n                            className=\"w-full px-3 py-2 bg-yellow-500 text-black rounded text-sm hover:bg-yellow-600 disabled:opacity-50\"\r\n                        >\r\n                            Agregar Ejercicio\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"space-y-3 mb-8\">\r\n                    {routineExercises.map((exercise, exerciseIndex) => {\r\n                        const exerciseData = exercises.find(e => e.id === exercise.exerciseId);\r\n                        return (\r\n                            <div key={exerciseIndex} className=\"bg-gray-800 p-3 rounded\">\r\n                                <h4 className=\"text-base text-white mb-2\">{exerciseData?.name || 'Ejercicio'}</h4>\r\n                                <div className=\"overflow-x-auto\">\r\n                                    <table className=\"w-full text-sm text-white\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"px-2 py-1\">Serie</th>\r\n                                                <th className=\"px-2 py-1\">Peso</th>\r\n                                                <th className=\"px-2 py-1\">Repeticiones</th>\r\n                                                <th className=\"px-2 py-1\">Eliminar</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {exercise.sets.map((set, setIndex) => (\r\n                                                <tr key={setIndex}>\r\n                                                    <td className=\"px-2 py-1\">{setIndex + 1}</td>\r\n                                                    <td className=\"px-2 py-1\">\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            value={set.weight}\r\n                                                            onChange={e => updateSet(exerciseIndex, setIndex, 'weight', e.target.value)}\r\n                                                            placeholder=\"Peso (kg)\"\r\n                                                            className=\"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className=\"px-2 py-1\">\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            value={set.reps}\r\n                                                            onChange={e => updateSet(exerciseIndex, setIndex, 'reps', e.target.value)}\r\n                                                            placeholder=\"Reps\"\r\n                                                            className=\"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className=\"px-2 py-1\">\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            onClick={() => removeSet(exerciseIndex, setIndex)}\r\n                                                            className=\"px-2 py-1 bg-red-500 text-white rounded text-xs\"\r\n                                                        >\r\n                                                            Eliminar\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={() => addSet(exerciseIndex)}\r\n                                        className=\"text-yellow-400 hover:text-yellow-500 text-sm mt-2\"\r\n                                    >\r\n                                        + Agregar Serie\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className=\"fixed bottom-0 left-0 w-full bg-black p-2 z-50 border-t border-gray-800\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        disabled={loading || !isValidRoutine()}\r\n                        className=\"w-full bg-yellow-500 text-black font-bold py-2 px-4 rounded text-sm hover:bg-yellow-600 disabled:opacity-50\"\r\n                    >\r\n                        {loading ? 'Creando...' : 'Crear Rutina Prediseñada'}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoutineForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
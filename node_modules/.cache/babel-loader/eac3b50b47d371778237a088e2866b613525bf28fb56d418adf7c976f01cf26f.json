{"ast":null,"code":"import { doc, updateDoc, getDoc } from 'firebase/firestore';\nimport { db } from './firebase';\nexport const saveUserRoutine = async (userId, routine) => {\n  const userRef = doc(db, 'users', userId);\n  await updateDoc(userRef, {\n    routine\n  });\n};\nexport const getUserProfile = async userId => {\n  const userRef = doc(db, 'users', userId);\n  const userDoc = await getDoc(userRef);\n  return userDoc.exists() ? userDoc.data() : null;\n};\nexport const updateUserProgress = async (userId, type) => {\n  const userRef = doc(db, 'users', userId);\n  const userDoc = await getDoc(userRef);\n  const userData = userDoc.data();\n  const progress = userData.progress || {};\n  const today = new Date().toISOString().split('T')[0];\n  if (!progress[today]) {\n    progress[today] = {\n      exercises: 0,\n      weight_updates: 0,\n      last_update: new Date().toISOString()\n    };\n  }\n  if (type === 'weight_update') {\n    progress[today].weight_updates = (progress[today].weight_updates || 0) + 1;\n  }\n  progress[today].last_update = new Date().toISOString();\n  await updateDoc(userRef, {\n    progress\n  });\n};\nexport const updateUserStats = async (userId, stats) => {\n  const userRef = doc(db, 'users', userId);\n  const userDoc = await getDoc(userRef);\n  const userData = userDoc.data();\n  const currentStats = userData.stats || {};\n  const updatedStats = {\n    ...currentStats,\n    ...stats\n  };\n  await updateDoc(userRef, {\n    stats: updatedStats\n  });\n};","map":{"version":3,"names":["doc","updateDoc","getDoc","db","saveUserRoutine","userId","routine","userRef","getUserProfile","userDoc","exists","data","updateUserProgress","type","userData","progress","today","Date","toISOString","split","exercises","weight_updates","last_update","updateUserStats","stats","currentStats","updatedStats"],"sources":["C:/Users/nessc/AndroidStudioProjects/sementalfit/sementalfit2/src/services/firebaseUtils.js"],"sourcesContent":["import { doc, updateDoc, getDoc } from 'firebase/firestore';\r\nimport { db } from './firebase';\r\n\r\nexport const saveUserRoutine = async (userId, routine) => {\r\n    const userRef = doc(db, 'users', userId);\r\n    await updateDoc(userRef, { routine });\r\n};\r\n\r\nexport const getUserProfile = async (userId) => {\r\n    const userRef = doc(db, 'users', userId);\r\n    const userDoc = await getDoc(userRef);\r\n    return userDoc.exists() ? userDoc.data() : null;\r\n};\r\n\r\nexport const updateUserProgress = async (userId, type) => {\r\n    const userRef = doc(db, 'users', userId);\r\n    const userDoc = await getDoc(userRef);\r\n    const userData = userDoc.data();\r\n    \r\n    const progress = userData.progress || {};\r\n    const today = new Date().toISOString().split('T')[0];\r\n    \r\n    if (!progress[today]) {\r\n        progress[today] = {\r\n            exercises: 0,\r\n            weight_updates: 0,\r\n            last_update: new Date().toISOString()\r\n        };\r\n    }\r\n    \r\n    if (type === 'weight_update') {\r\n        progress[today].weight_updates = (progress[today].weight_updates || 0) + 1;\r\n    }\r\n    \r\n    progress[today].last_update = new Date().toISOString();\r\n    \r\n    await updateDoc(userRef, { progress });\r\n};\r\n\r\nexport const updateUserStats = async (userId, stats) => {\r\n    const userRef = doc(db, 'users', userId);\r\n    const userDoc = await getDoc(userRef);\r\n    const userData = userDoc.data();\r\n    \r\n    const currentStats = userData.stats || {};\r\n    const updatedStats = {\r\n        ...currentStats,\r\n        ...stats\r\n    };\r\n    \r\n    await updateDoc(userRef, { stats: updatedStats });\r\n}; "],"mappings":"AAAA,SAASA,GAAG,EAAEC,SAAS,EAAEC,MAAM,QAAQ,oBAAoB;AAC3D,SAASC,EAAE,QAAQ,YAAY;AAE/B,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAOC,MAAM,EAAEC,OAAO,KAAK;EACtD,MAAMC,OAAO,GAAGP,GAAG,CAACG,EAAE,EAAE,OAAO,EAAEE,MAAM,CAAC;EACxC,MAAMJ,SAAS,CAACM,OAAO,EAAE;IAAED;EAAQ,CAAC,CAAC;AACzC,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAOH,MAAM,IAAK;EAC5C,MAAME,OAAO,GAAGP,GAAG,CAACG,EAAE,EAAE,OAAO,EAAEE,MAAM,CAAC;EACxC,MAAMI,OAAO,GAAG,MAAMP,MAAM,CAACK,OAAO,CAAC;EACrC,OAAOE,OAAO,CAACC,MAAM,CAAC,CAAC,GAAGD,OAAO,CAACE,IAAI,CAAC,CAAC,GAAG,IAAI;AACnD,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAOP,MAAM,EAAEQ,IAAI,KAAK;EACtD,MAAMN,OAAO,GAAGP,GAAG,CAACG,EAAE,EAAE,OAAO,EAAEE,MAAM,CAAC;EACxC,MAAMI,OAAO,GAAG,MAAMP,MAAM,CAACK,OAAO,CAAC;EACrC,MAAMO,QAAQ,GAAGL,OAAO,CAACE,IAAI,CAAC,CAAC;EAE/B,MAAMI,QAAQ,GAAGD,QAAQ,CAACC,QAAQ,IAAI,CAAC,CAAC;EACxC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAEpD,IAAI,CAACJ,QAAQ,CAACC,KAAK,CAAC,EAAE;IAClBD,QAAQ,CAACC,KAAK,CAAC,GAAG;MACdI,SAAS,EAAE,CAAC;MACZC,cAAc,EAAE,CAAC;MACjBC,WAAW,EAAE,IAAIL,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACxC,CAAC;EACL;EAEA,IAAIL,IAAI,KAAK,eAAe,EAAE;IAC1BE,QAAQ,CAACC,KAAK,CAAC,CAACK,cAAc,GAAG,CAACN,QAAQ,CAACC,KAAK,CAAC,CAACK,cAAc,IAAI,CAAC,IAAI,CAAC;EAC9E;EAEAN,QAAQ,CAACC,KAAK,CAAC,CAACM,WAAW,GAAG,IAAIL,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAEtD,MAAMjB,SAAS,CAACM,OAAO,EAAE;IAAEQ;EAAS,CAAC,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMQ,eAAe,GAAG,MAAAA,CAAOlB,MAAM,EAAEmB,KAAK,KAAK;EACpD,MAAMjB,OAAO,GAAGP,GAAG,CAACG,EAAE,EAAE,OAAO,EAAEE,MAAM,CAAC;EACxC,MAAMI,OAAO,GAAG,MAAMP,MAAM,CAACK,OAAO,CAAC;EACrC,MAAMO,QAAQ,GAAGL,OAAO,CAACE,IAAI,CAAC,CAAC;EAE/B,MAAMc,YAAY,GAAGX,QAAQ,CAACU,KAAK,IAAI,CAAC,CAAC;EACzC,MAAME,YAAY,GAAG;IACjB,GAAGD,YAAY;IACf,GAAGD;EACP,CAAC;EAED,MAAMvB,SAAS,CAACM,OAAO,EAAE;IAAEiB,KAAK,EAAEE;EAAa,CAAC,CAAC;AACrD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
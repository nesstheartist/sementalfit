{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nessc\\\\Semental fit ultima\\\\sementalfit2\\\\src\\\\components\\\\DailyRoutine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { db } from '../firebase';\nimport { collection, doc, setDoc, getDoc, getDocs, query, where, serverTimestamp } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DAYS = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\nconst getToday = () => {\n  const jsDay = new Date().getDay();\n  // JS: 0=Domingo, 1=Lunes, ..., 6=Sábado\n  return DAYS[jsDay === 0 ? 6 : jsDay - 1];\n};\nconst DailyRoutine = () => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [selectedDay, setSelectedDay] = useState(getToday());\n  const [categories, setCategories] = useState([]);\n  const [exercises, setExercises] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [currentRoutine, setCurrentRoutine] = useState({\n    exercises: []\n  });\n  const [loading, setLoading] = useState(false);\n  // Timer helpers\n  const [timers, setTimers] = useState({}); // { [exerciseIndex_setIndex]: { running, timeLeft } }\n  const timerRefs = useRef({});\n\n  // Cargar categorías\n  useEffect(() => {\n    const loadCategories = async () => {\n      const categoriesSnapshot = await getDocs(collection(db, 'categories'));\n      setCategories(categoriesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      })));\n    };\n    loadCategories();\n  }, []);\n\n  // Cargar ejercicios cuando se selecciona una categoría\n  useEffect(() => {\n    const loadExercises = async () => {\n      if (!selectedCategory) return;\n      const exercisesSnapshot = await getDocs(query(collection(db, 'exercises'), where('categoryId', '==', selectedCategory)));\n      setExercises(exercisesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      })));\n    };\n    loadExercises();\n  }, [selectedCategory]);\n\n  // Cargar rutina del día seleccionado\n  useEffect(() => {\n    const loadRoutine = async () => {\n      if (!currentUser) return;\n      const routineRef = doc(db, 'users', currentUser.uid, 'routines', selectedDay);\n      const routineDoc = await getDoc(routineRef);\n      if (routineDoc.exists()) {\n        setCurrentRoutine(routineDoc.data());\n      } else {\n        setCurrentRoutine({\n          exercises: []\n        });\n      }\n    };\n    loadRoutine();\n  }, [selectedDay, currentUser]);\n  const addExercise = () => {\n    if (!selectedExercise) return;\n    const newExercise = {\n      exerciseId: selectedExercise,\n      sets: [{\n        weight: 0,\n        reps: 0,\n        completed: false\n      }]\n    };\n    setCurrentRoutine(prev => ({\n      ...prev,\n      exercises: [...prev.exercises, newExercise]\n    }));\n  };\n  const updateSet = (exerciseIndex, setIndex, field, value) => {\n    setCurrentRoutine(prev => {\n      const newExercises = [...prev.exercises];\n      newExercises[exerciseIndex].sets[setIndex][field] = value;\n      return {\n        ...prev,\n        exercises: newExercises\n      };\n    });\n  };\n  const addSet = exerciseIndex => {\n    setCurrentRoutine(prev => {\n      const newExercises = [...prev.exercises];\n      newExercises[exerciseIndex].sets.push({\n        weight: 0,\n        reps: 0,\n        completed: false,\n        timer: {\n          min: 0,\n          sec: 0\n        }\n      });\n      return {\n        ...prev,\n        exercises: newExercises\n      };\n    });\n  };\n  const removeSet = (exerciseIndex, setIndex) => {\n    setCurrentRoutine(prev => {\n      const newExercises = [...prev.exercises];\n      newExercises[exerciseIndex].sets = newExercises[exerciseIndex].sets.filter((_, i) => i !== setIndex);\n      return {\n        ...prev,\n        exercises: newExercises\n      };\n    });\n  };\n  const handleTimerChange = (exerciseIndex, setIndex, field, value) => {\n    setCurrentRoutine(prev => {\n      const newExercises = [...prev.exercises];\n      if (!newExercises[exerciseIndex].sets[setIndex].timer) {\n        newExercises[exerciseIndex].sets[setIndex].timer = {\n          min: 0,\n          sec: 0\n        };\n      }\n      newExercises[exerciseIndex].sets[setIndex].timer[field] = value;\n      return {\n        ...prev,\n        exercises: newExercises\n      };\n    });\n  };\n  const startTimer = (exerciseIndex, setIndex) => {\n    const key = `${exerciseIndex}_${setIndex}`;\n    setTimers(prev => ({\n      ...prev,\n      [key]: {\n        running: true,\n        timeLeft: getTimeLeft(exerciseIndex, setIndex)\n      }\n    }));\n    if (timerRefs.current[key]) clearInterval(timerRefs.current[key]);\n    timerRefs.current[key] = setInterval(() => {\n      setTimers(prev => {\n        var _prev$key;\n        const t = ((_prev$key = prev[key]) === null || _prev$key === void 0 ? void 0 : _prev$key.timeLeft) || 0;\n        if (t > 0) {\n          return {\n            ...prev,\n            [key]: {\n              ...prev[key],\n              timeLeft: t - 1\n            }\n          };\n        } else {\n          clearInterval(timerRefs.current[key]);\n          return {\n            ...prev,\n            [key]: {\n              ...prev[key],\n              running: false,\n              timeLeft: 0\n            }\n          };\n        }\n      });\n    }, 1000);\n  };\n  const pauseTimer = (exerciseIndex, setIndex) => {\n    const key = `${exerciseIndex}_${setIndex}`;\n    setTimers(prev => ({\n      ...prev,\n      [key]: {\n        ...prev[key],\n        running: false\n      }\n    }));\n    if (timerRefs.current[key]) clearInterval(timerRefs.current[key]);\n  };\n  const getTimeLeft = (exerciseIndex, setIndex) => {\n    var _set$timer, _set$timer2;\n    const set = currentRoutine.exercises[exerciseIndex].sets[setIndex];\n    const min = parseInt(((_set$timer = set.timer) === null || _set$timer === void 0 ? void 0 : _set$timer.min) || 0, 10);\n    const sec = parseInt(((_set$timer2 = set.timer) === null || _set$timer2 === void 0 ? void 0 : _set$timer2.sec) || 0, 10);\n    return min * 60 + sec;\n  };\n  const formatTime = seconds => {\n    const m = Math.floor(seconds / 60);\n    const s = seconds % 60;\n    return `${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`;\n  };\n  useEffect(() => {\n    return () => {\n      Object.values(timerRefs.current).forEach(clearInterval);\n    };\n  }, []);\n  const saveRoutine = async () => {\n    if (!currentUser) return;\n    setLoading(true);\n    try {\n      const routineRef = doc(db, 'users', currentUser.uid, 'routines', selectedDay);\n      await setDoc(routineRef, {\n        ...currentRoutine,\n        updatedAt: serverTimestamp()\n      });\n      alert('Rutina guardada exitosamente');\n    } catch (error) {\n      console.error('Error al guardar la rutina:', error);\n      alert('Error al guardar la rutina');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full px-2 py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold text-yellow-400 mb-3\",\n        children: \"Rutina Diaria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-1 mb-3\",\n        children: DAYS.map(day => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedDay(day),\n          className: `px-2 py-1 text-sm rounded ${selectedDay === day ? 'bg-yellow-500 text-black' : 'bg-gray-800 text-white'}`,\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg text-white mb-2\",\n        children: \"Agregar Ejercicio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCategory,\n          onChange: e => setSelectedCategory(e.target.value),\n          className: \"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccionar Grupo Muscular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat.id,\n            children: cat.name\n          }, cat.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedExercise,\n          onChange: e => setSelectedExercise(e.target.value),\n          className: \"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 text-sm\",\n          disabled: !selectedCategory,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccionar Ejercicio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), exercises.map(ex => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: ex.id,\n            children: ex.name\n          }, ex.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addExercise,\n          disabled: !selectedExercise,\n          className: \"w-full px-3 py-2 bg-yellow-500 text-black rounded text-sm hover:bg-yellow-600 disabled:opacity-50\",\n          children: \"Agregar Ejercicio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-3\",\n      children: currentRoutine.exercises.map((exercise, exerciseIndex) => {\n        const exerciseData = exercises.find(e => e.id === exercise.exerciseId);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 p-3 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-base text-white mb-2\",\n            children: (exerciseData === null || exerciseData === void 0 ? void 0 : exerciseData.name) || 'Ejercicio'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-x-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"w-full text-sm text-white\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-2 py-1\",\n                    children: \"Serie\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-2 py-1\",\n                    children: \"Peso\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-2 py-1\",\n                    children: \"Repeticiones\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-2 py-1\",\n                    children: \"Timer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-2 py-1\",\n                    children: \"\\u2714\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: exercise.sets.map((set, setIndex) => {\n                  var _set$timer3, _set$timer4;\n                  const key = `${exerciseIndex}_${setIndex}`;\n                  const timerState = timers[key] || {\n                    running: false,\n                    timeLeft: getTimeLeft(exerciseIndex, setIndex)\n                  };\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 py-1\",\n                      children: setIndex + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 py-1\",\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: set.weight,\n                        onChange: e => updateSet(exerciseIndex, setIndex, 'weight', e.target.value),\n                        placeholder: \"Peso (kg)\",\n                        className: \"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 300,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 py-1\",\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: set.reps,\n                        onChange: e => updateSet(exerciseIndex, setIndex, 'reps', e.target.value),\n                        placeholder: \"Reps\",\n                        className: \"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 309,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 py-1 flex items-center gap-1\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        min: \"0\",\n                        value: ((_set$timer3 = set.timer) === null || _set$timer3 === void 0 ? void 0 : _set$timer3.min) || 0,\n                        onChange: e => handleTimerChange(exerciseIndex, setIndex, 'min', e.target.value),\n                        className: \"w-10 p-1 rounded bg-gray-700 text-white border border-gray-600 text-xs mr-1\",\n                        placeholder: \"mm\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 318,\n                        columnNumber: 57\n                      }, this), \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        min: \"0\",\n                        max: \"59\",\n                        value: ((_set$timer4 = set.timer) === null || _set$timer4 === void 0 ? void 0 : _set$timer4.sec) || 0,\n                        onChange: e => handleTimerChange(exerciseIndex, setIndex, 'sec', e.target.value),\n                        className: \"w-10 p-1 rounded bg-gray-700 text-white border border-gray-600 text-xs ml-1\",\n                        placeholder: \"ss\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 327,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        onClick: () => timerState.running ? pauseTimer(exerciseIndex, setIndex) : startTimer(exerciseIndex, setIndex),\n                        className: \"ml-2 px-2 py-1 bg-yellow-500 text-black rounded text-xs\",\n                        children: timerState.running ? 'Pausar' : 'Iniciar'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 336,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"ml-2 font-mono\",\n                        children: formatTime(timerState.timeLeft)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 343,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 317,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 py-1\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        checked: set.completed,\n                        onChange: e => updateSet(exerciseIndex, setIndex, 'completed', e.target.checked),\n                        className: \"w-4 h-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 346,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        onClick: () => removeSet(exerciseIndex, setIndex),\n                        className: \"ml-2 px-2 py-1 bg-red-500 text-white rounded text-xs\",\n                        children: \"Eliminar\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 352,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 53\n                    }, this)]\n                  }, setIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addSet(exerciseIndex),\n              className: \"text-yellow-400 hover:text-yellow-500 text-sm mt-2\",\n              children: \"+ Agregar Serie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, this)]\n        }, exerciseIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveRoutine,\n      disabled: loading,\n      className: \"mt-4 w-full bg-yellow-500 text-black font-bold py-2 px-4 rounded text-sm hover:bg-yellow-600 disabled:opacity-50\",\n      children: loading ? 'Guardando...' : 'Guardar Rutina'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 9\n  }, this);\n};\n_s(DailyRoutine, \"4wLPPvQn0pjy3yiI2mLH1dd3ShQ=\", false, function () {\n  return [useAuth];\n});\n_c = DailyRoutine;\nexport default DailyRoutine;\nvar _c;\n$RefreshReg$(_c, \"DailyRoutine\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","db","collection","doc","setDoc","getDoc","getDocs","query","where","serverTimestamp","jsxDEV","_jsxDEV","DAYS","getToday","jsDay","Date","getDay","DailyRoutine","_s","currentUser","selectedDay","setSelectedDay","categories","setCategories","exercises","setExercises","selectedCategory","setSelectedCategory","selectedExercise","setSelectedExercise","currentRoutine","setCurrentRoutine","loading","setLoading","timers","setTimers","timerRefs","loadCategories","categoriesSnapshot","docs","map","id","data","loadExercises","exercisesSnapshot","loadRoutine","routineRef","uid","routineDoc","exists","addExercise","newExercise","exerciseId","sets","weight","reps","completed","prev","updateSet","exerciseIndex","setIndex","field","value","newExercises","addSet","push","timer","min","sec","removeSet","filter","_","i","handleTimerChange","startTimer","key","running","timeLeft","getTimeLeft","current","clearInterval","setInterval","_prev$key","t","pauseTimer","_set$timer","_set$timer2","set","parseInt","formatTime","seconds","m","Math","floor","s","toString","padStart","Object","values","forEach","saveRoutine","updatedAt","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","day","onClick","onChange","e","target","cat","name","disabled","ex","exercise","exerciseData","find","_set$timer3","_set$timer4","timerState","type","placeholder","max","checked","_c","$RefreshReg$"],"sources":["C:/Users/nessc/Semental fit ultima/sementalfit2/src/components/DailyRoutine.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { db } from '../firebase';\r\nimport { \r\n    collection, \r\n    doc, \r\n    setDoc, \r\n    getDoc, \r\n    getDocs, \r\n    query, \r\n    where,\r\n    serverTimestamp \r\n} from 'firebase/firestore';\r\n\r\nconst DAYS = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\r\n\r\nconst getToday = () => {\r\n    const jsDay = new Date().getDay();\r\n    // JS: 0=Domingo, 1=Lunes, ..., 6=Sábado\r\n    return DAYS[(jsDay === 0 ? 6 : jsDay - 1)];\r\n};\r\n\r\nconst DailyRoutine = () => {\r\n    const { currentUser } = useAuth();\r\n    const [selectedDay, setSelectedDay] = useState(getToday());\r\n    const [categories, setCategories] = useState([]);\r\n    const [exercises, setExercises] = useState([]);\r\n    const [selectedCategory, setSelectedCategory] = useState('');\r\n    const [selectedExercise, setSelectedExercise] = useState('');\r\n    const [currentRoutine, setCurrentRoutine] = useState({\r\n        exercises: []\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    // Timer helpers\r\n    const [timers, setTimers] = useState({}); // { [exerciseIndex_setIndex]: { running, timeLeft } }\r\n    const timerRefs = useRef({});\r\n\r\n    // Cargar categorías\r\n    useEffect(() => {\r\n        const loadCategories = async () => {\r\n            const categoriesSnapshot = await getDocs(collection(db, 'categories'));\r\n            setCategories(categoriesSnapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            })));\r\n        };\r\n        loadCategories();\r\n    }, []);\r\n\r\n    // Cargar ejercicios cuando se selecciona una categoría\r\n    useEffect(() => {\r\n        const loadExercises = async () => {\r\n            if (!selectedCategory) return;\r\n            const exercisesSnapshot = await getDocs(\r\n                query(collection(db, 'exercises'), \r\n                where('categoryId', '==', selectedCategory))\r\n            );\r\n            setExercises(exercisesSnapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            })));\r\n        };\r\n        loadExercises();\r\n    }, [selectedCategory]);\r\n\r\n    // Cargar rutina del día seleccionado\r\n    useEffect(() => {\r\n        const loadRoutine = async () => {\r\n            if (!currentUser) return;\r\n            const routineRef = doc(db, 'users', currentUser.uid, 'routines', selectedDay);\r\n            const routineDoc = await getDoc(routineRef);\r\n            if (routineDoc.exists()) {\r\n                setCurrentRoutine(routineDoc.data());\r\n            } else {\r\n                setCurrentRoutine({ exercises: [] });\r\n            }\r\n        };\r\n        loadRoutine();\r\n    }, [selectedDay, currentUser]);\r\n\r\n    const addExercise = () => {\r\n        if (!selectedExercise) return;\r\n        \r\n        const newExercise = {\r\n            exerciseId: selectedExercise,\r\n            sets: [\r\n                { weight: 0, reps: 0, completed: false }\r\n            ]\r\n        };\r\n\r\n        setCurrentRoutine(prev => ({\r\n            ...prev,\r\n            exercises: [...prev.exercises, newExercise]\r\n        }));\r\n    };\r\n\r\n    const updateSet = (exerciseIndex, setIndex, field, value) => {\r\n        setCurrentRoutine(prev => {\r\n            const newExercises = [...prev.exercises];\r\n            newExercises[exerciseIndex].sets[setIndex][field] = value;\r\n            return { ...prev, exercises: newExercises };\r\n        });\r\n    };\r\n\r\n    const addSet = (exerciseIndex) => {\r\n        setCurrentRoutine(prev => {\r\n            const newExercises = [...prev.exercises];\r\n            newExercises[exerciseIndex].sets.push({\r\n                weight: 0,\r\n                reps: 0,\r\n                completed: false,\r\n                timer: { min: 0, sec: 0 }\r\n            });\r\n            return { ...prev, exercises: newExercises };\r\n        });\r\n    };\r\n\r\n    const removeSet = (exerciseIndex, setIndex) => {\r\n        setCurrentRoutine(prev => {\r\n            const newExercises = [...prev.exercises];\r\n            newExercises[exerciseIndex].sets = newExercises[exerciseIndex].sets.filter((_, i) => i !== setIndex);\r\n            return { ...prev, exercises: newExercises };\r\n        });\r\n    };\r\n\r\n    const handleTimerChange = (exerciseIndex, setIndex, field, value) => {\r\n        setCurrentRoutine(prev => {\r\n            const newExercises = [...prev.exercises];\r\n            if (!newExercises[exerciseIndex].sets[setIndex].timer) {\r\n                newExercises[exerciseIndex].sets[setIndex].timer = { min: 0, sec: 0 };\r\n            }\r\n            newExercises[exerciseIndex].sets[setIndex].timer[field] = value;\r\n            return { ...prev, exercises: newExercises };\r\n        });\r\n    };\r\n\r\n    const startTimer = (exerciseIndex, setIndex) => {\r\n        const key = `${exerciseIndex}_${setIndex}`;\r\n        setTimers(prev => ({\r\n            ...prev,\r\n            [key]: {\r\n                running: true,\r\n                timeLeft: getTimeLeft(exerciseIndex, setIndex)\r\n            }\r\n        }));\r\n        if (timerRefs.current[key]) clearInterval(timerRefs.current[key]);\r\n        timerRefs.current[key] = setInterval(() => {\r\n            setTimers(prev => {\r\n                const t = prev[key]?.timeLeft || 0;\r\n                if (t > 0) {\r\n                    return {\r\n                        ...prev,\r\n                        [key]: { ...prev[key], timeLeft: t - 1 }\r\n                    };\r\n                } else {\r\n                    clearInterval(timerRefs.current[key]);\r\n                    return {\r\n                        ...prev,\r\n                        [key]: { ...prev[key], running: false, timeLeft: 0 }\r\n                    };\r\n                }\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    const pauseTimer = (exerciseIndex, setIndex) => {\r\n        const key = `${exerciseIndex}_${setIndex}`;\r\n        setTimers(prev => ({\r\n            ...prev,\r\n            [key]: { ...prev[key], running: false }\r\n        }));\r\n        if (timerRefs.current[key]) clearInterval(timerRefs.current[key]);\r\n    };\r\n\r\n    const getTimeLeft = (exerciseIndex, setIndex) => {\r\n        const set = currentRoutine.exercises[exerciseIndex].sets[setIndex];\r\n        const min = parseInt(set.timer?.min || 0, 10);\r\n        const sec = parseInt(set.timer?.sec || 0, 10);\r\n        return min * 60 + sec;\r\n    };\r\n\r\n    const formatTime = (seconds) => {\r\n        const m = Math.floor(seconds / 60);\r\n        const s = seconds % 60;\r\n        return `${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            Object.values(timerRefs.current).forEach(clearInterval);\r\n        };\r\n    }, []);\r\n\r\n    const saveRoutine = async () => {\r\n        if (!currentUser) return;\r\n        setLoading(true);\r\n        try {\r\n            const routineRef = doc(db, 'users', currentUser.uid, 'routines', selectedDay);\r\n            await setDoc(routineRef, {\r\n                ...currentRoutine,\r\n                updatedAt: serverTimestamp()\r\n            });\r\n            alert('Rutina guardada exitosamente');\r\n        } catch (error) {\r\n            console.error('Error al guardar la rutina:', error);\r\n            alert('Error al guardar la rutina');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full px-2 py-4\">\r\n            <div className=\"mb-4\">\r\n                <h2 className=\"text-xl font-bold text-yellow-400 mb-3\">Rutina Diaria</h2>\r\n                <div className=\"flex flex-wrap gap-1 mb-3\">\r\n                    {DAYS.map(day => (\r\n                        <button\r\n                            key={day}\r\n                            onClick={() => setSelectedDay(day)}\r\n                            className={`px-2 py-1 text-sm rounded ${\r\n                                selectedDay === day \r\n                                    ? 'bg-yellow-500 text-black' \r\n                                    : 'bg-gray-800 text-white'\r\n                            }`}\r\n                        >\r\n                            {day}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mb-4\">\r\n                <h3 className=\"text-lg text-white mb-2\">Agregar Ejercicio</h3>\r\n                <div className=\"flex flex-col gap-2 mb-3\">\r\n                    <select\r\n                        value={selectedCategory}\r\n                        onChange={(e) => setSelectedCategory(e.target.value)}\r\n                        className=\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 text-sm\"\r\n                    >\r\n                        <option value=\"\">Seleccionar Grupo Muscular</option>\r\n                        {categories.map(cat => (\r\n                            <option key={cat.id} value={cat.id}>\r\n                                {cat.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <select\r\n                        value={selectedExercise}\r\n                        onChange={(e) => setSelectedExercise(e.target.value)}\r\n                        className=\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 text-sm\"\r\n                        disabled={!selectedCategory}\r\n                    >\r\n                        <option value=\"\">Seleccionar Ejercicio</option>\r\n                        {exercises.map(ex => (\r\n                            <option key={ex.id} value={ex.id}>\r\n                                {ex.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <button\r\n                        onClick={addExercise}\r\n                        disabled={!selectedExercise}\r\n                        className=\"w-full px-3 py-2 bg-yellow-500 text-black rounded text-sm hover:bg-yellow-600 disabled:opacity-50\"\r\n                    >\r\n                        Agregar Ejercicio\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-3\">\r\n                {currentRoutine.exercises.map((exercise, exerciseIndex) => {\r\n                    const exerciseData = exercises.find(e => e.id === exercise.exerciseId);\r\n                    return (\r\n                        <div key={exerciseIndex} className=\"bg-gray-800 p-3 rounded\">\r\n                            <h4 className=\"text-base text-white mb-2\">\r\n                                {exerciseData?.name || 'Ejercicio'}\r\n                            </h4>\r\n                            <div className=\"overflow-x-auto\">\r\n                                <table className=\"w-full text-sm text-white\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"px-2 py-1\">Serie</th>\r\n                                            <th className=\"px-2 py-1\">Peso</th>\r\n                                            <th className=\"px-2 py-1\">Repeticiones</th>\r\n                                            <th className=\"px-2 py-1\">Timer</th>\r\n                                            <th className=\"px-2 py-1\">✔</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {exercise.sets.map((set, setIndex) => {\r\n                                            const key = `${exerciseIndex}_${setIndex}`;\r\n                                            const timerState = timers[key] || { running: false, timeLeft: getTimeLeft(exerciseIndex, setIndex) };\r\n                                            return (\r\n                                                <tr key={setIndex}>\r\n                                                    <td className=\"px-2 py-1\">{setIndex + 1}</td>\r\n                                                    <td className=\"px-2 py-1\">\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            value={set.weight}\r\n                                                            onChange={(e) => updateSet(exerciseIndex, setIndex, 'weight', e.target.value)}\r\n                                                            placeholder=\"Peso (kg)\"\r\n                                                            className=\"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className=\"px-2 py-1\">\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            value={set.reps}\r\n                                                            onChange={(e) => updateSet(exerciseIndex, setIndex, 'reps', e.target.value)}\r\n                                                            placeholder=\"Reps\"\r\n                                                            className=\"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className=\"px-2 py-1 flex items-center gap-1\">\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            min=\"0\"\r\n                                                            value={set.timer?.min || 0}\r\n                                                            onChange={(e) => handleTimerChange(exerciseIndex, setIndex, 'min', e.target.value)}\r\n                                                            className=\"w-10 p-1 rounded bg-gray-700 text-white border border-gray-600 text-xs mr-1\"\r\n                                                            placeholder=\"mm\"\r\n                                                        />\r\n                                                        :\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            min=\"0\"\r\n                                                            max=\"59\"\r\n                                                            value={set.timer?.sec || 0}\r\n                                                            onChange={(e) => handleTimerChange(exerciseIndex, setIndex, 'sec', e.target.value)}\r\n                                                            className=\"w-10 p-1 rounded bg-gray-700 text-white border border-gray-600 text-xs ml-1\"\r\n                                                            placeholder=\"ss\"\r\n                                                        />\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            onClick={() => timerState.running ? pauseTimer(exerciseIndex, setIndex) : startTimer(exerciseIndex, setIndex)}\r\n                                                            className=\"ml-2 px-2 py-1 bg-yellow-500 text-black rounded text-xs\"\r\n                                                        >\r\n                                                            {timerState.running ? 'Pausar' : 'Iniciar'}\r\n                                                        </button>\r\n                                                        <span className=\"ml-2 font-mono\">{formatTime(timerState.timeLeft)}</span>\r\n                                                    </td>\r\n                                                    <td className=\"px-2 py-1\">\r\n                                                        <input\r\n                                                            type=\"checkbox\"\r\n                                                            checked={set.completed}\r\n                                                            onChange={(e) => updateSet(exerciseIndex, setIndex, 'completed', e.target.checked)}\r\n                                                            className=\"w-4 h-4\"\r\n                                                        />\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            onClick={() => removeSet(exerciseIndex, setIndex)}\r\n                                                            className=\"ml-2 px-2 py-1 bg-red-500 text-white rounded text-xs\"\r\n                                                        >\r\n                                                            Eliminar\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                                <button\r\n                                    onClick={() => addSet(exerciseIndex)}\r\n                                    className=\"text-yellow-400 hover:text-yellow-500 text-sm mt-2\"\r\n                                >\r\n                                    + Agregar Serie\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <button\r\n                onClick={saveRoutine}\r\n                disabled={loading}\r\n                className=\"mt-4 w-full bg-yellow-500 text-black font-bold py-2 px-4 rounded text-sm hover:bg-yellow-600 disabled:opacity-50\"\r\n            >\r\n                {loading ? 'Guardando...' : 'Guardar Rutina'}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DailyRoutine; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
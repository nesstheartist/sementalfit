{"ast":null,"code":"import _objectSpread from\"C:/Users/nessc/Semental fit ultima/sementalfit2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import{useAuth}from'../contexts/AuthContext';import{db}from'../firebase';import{collection,doc,setDoc,getDoc,getDocs,query,where,serverTimestamp}from'firebase/firestore';import Header from'./Header';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DAYS=['Lunes','Martes','Miércoles','Jueves','Viernes','Sábado','Domingo'];const getToday=()=>{const days=['Domingo','Lunes','Martes','Miércoles','Jueves','Viernes','Sábado'];return days[new Date().getDay()];};const DailyRoutine=()=>{const{currentUser}=useAuth();const[selectedDay,setSelectedDay]=useState(getToday());const[categories,setCategories]=useState([]);const[exercises,setExercises]=useState([]);const[selectedCategory,setSelectedCategory]=useState('');const[selectedExercise,setSelectedExercise]=useState('');const[currentRoutine,setCurrentRoutine]=useState({exercises:[]});const[loading,setLoading]=useState(false);const[error,setError]=useState('');// Timer helpers\nconst[timers,setTimers]=useState({});// { [exerciseIndex_setIndex]: { running, timeLeft } }\nconst timerRefs=useRef({});const[showAvailable,setShowAvailable]=useState(false);const[availableRoutines,setAvailableRoutines]=useState([]);// Cargar categorías\nuseEffect(()=>{const loadCategories=async()=>{try{setError('');const categoriesSnapshot=await getDocs(collection(db,'categories'));const categoriesData=categoriesSnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));setCategories(categoriesData);}catch(error){console.error('Error al cargar categorías:',error);setError('Error al cargar las categorías. Por favor, intenta de nuevo.');}};loadCategories();},[]);// Cargar ejercicios cuando se selecciona una categoría\nuseEffect(()=>{const loadExercises=async()=>{if(!selectedCategory){setExercises([]);return;}try{setError('');const exercisesSnapshot=await getDocs(query(collection(db,'exercises'),where('categoryId','==',selectedCategory)));const exercisesData=exercisesSnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));setExercises(exercisesData);}catch(error){console.error('Error al cargar ejercicios:',error);setError('Error al cargar los ejercicios. Por favor, intenta de nuevo.');}};loadExercises();},[selectedCategory]);// Cargar rutina del día seleccionado\nuseEffect(()=>{const loadRoutine=async()=>{if(!currentUser)return;const routineRef=doc(db,'users',currentUser.uid,'routines',selectedDay);const routineDoc=await getDoc(routineRef);if(routineDoc.exists()){setCurrentRoutine(routineDoc.data());}else{setCurrentRoutine({exercises:[]});}};loadRoutine();},[selectedDay,currentUser]);useEffect(()=>{if(showAvailable){getDocs(collection(db,'routines')).then(snapshot=>{setAvailableRoutines(snapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data())));});}},[showAvailable]);const addExercise=()=>{if(!selectedExercise)return;const newExercise={exerciseId:selectedExercise,sets:[{weight:0,reps:0,completed:false}]};setCurrentRoutine(prev=>_objectSpread(_objectSpread({},prev),{},{exercises:[...prev.exercises,newExercise]}));};const updateSet=(exerciseIndex,setIndex,field,value)=>{setCurrentRoutine(prev=>{const newExercises=[...prev.exercises];newExercises[exerciseIndex].sets[setIndex][field]=value;return _objectSpread(_objectSpread({},prev),{},{exercises:newExercises});});};const addSet=exerciseIndex=>{setCurrentRoutine(prev=>{const newExercises=[...prev.exercises];newExercises[exerciseIndex].sets.push({weight:0,reps:0,completed:false,timer:{min:0,sec:0}});return _objectSpread(_objectSpread({},prev),{},{exercises:newExercises});});};const removeSet=(exerciseIndex,setIndex)=>{setCurrentRoutine(prev=>{const newExercises=[...prev.exercises];newExercises[exerciseIndex].sets=newExercises[exerciseIndex].sets.filter((_,i)=>i!==setIndex);return _objectSpread(_objectSpread({},prev),{},{exercises:newExercises});});};const handleTimerChange=(exerciseIndex,setIndex,field,value)=>{setCurrentRoutine(prev=>{const newExercises=[...prev.exercises];if(!newExercises[exerciseIndex].sets[setIndex].timer){newExercises[exerciseIndex].sets[setIndex].timer={min:0,sec:0};}newExercises[exerciseIndex].sets[setIndex].timer[field]=value;return _objectSpread(_objectSpread({},prev),{},{exercises:newExercises});});};const startTimer=(exerciseIndex,setIndex)=>{const key=\"\".concat(exerciseIndex,\"_\").concat(setIndex);setTimers(prev=>_objectSpread(_objectSpread({},prev),{},{[key]:{running:true,timeLeft:getTimeLeft(exerciseIndex,setIndex)}}));if(timerRefs.current[key])clearInterval(timerRefs.current[key]);timerRefs.current[key]=setInterval(()=>{setTimers(prev=>{var _prev$key;const t=((_prev$key=prev[key])===null||_prev$key===void 0?void 0:_prev$key.timeLeft)||0;if(t>0){return _objectSpread(_objectSpread({},prev),{},{[key]:_objectSpread(_objectSpread({},prev[key]),{},{timeLeft:t-1})});}else{clearInterval(timerRefs.current[key]);return _objectSpread(_objectSpread({},prev),{},{[key]:_objectSpread(_objectSpread({},prev[key]),{},{running:false,timeLeft:0})});}});},1000);};const pauseTimer=(exerciseIndex,setIndex)=>{const key=\"\".concat(exerciseIndex,\"_\").concat(setIndex);setTimers(prev=>_objectSpread(_objectSpread({},prev),{},{[key]:_objectSpread(_objectSpread({},prev[key]),{},{running:false})}));if(timerRefs.current[key])clearInterval(timerRefs.current[key]);};const getTimeLeft=(exerciseIndex,setIndex)=>{var _set$timer,_set$timer2;const set=currentRoutine.exercises[exerciseIndex].sets[setIndex];const min=parseInt(((_set$timer=set.timer)===null||_set$timer===void 0?void 0:_set$timer.min)||0,10);const sec=parseInt(((_set$timer2=set.timer)===null||_set$timer2===void 0?void 0:_set$timer2.sec)||0,10);return min*60+sec;};const formatTime=seconds=>{const m=Math.floor(seconds/60);const s=seconds%60;return\"\".concat(m.toString().padStart(2,'0'),\":\").concat(s.toString().padStart(2,'0'));};useEffect(()=>{return()=>{Object.values(timerRefs.current).forEach(clearInterval);};},[]);const saveRoutine=async()=>{if(!currentUser)return;setLoading(true);try{const routineRef=doc(db,'users',currentUser.uid,'routines',selectedDay);await setDoc(routineRef,_objectSpread(_objectSpread({},currentRoutine),{},{updatedAt:serverTimestamp()}));alert('Rutina guardada exitosamente');}catch(error){console.error('Error al guardar la rutina:',error);alert('Error al guardar la rutina');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"w-full px-2 py-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-yellow-400 mb-3\",children:\"Rutina Diaria\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-500 text-white p-2 rounded mb-2 text-xs\",children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"mb-2 px-4 py-2 bg-yellow-500 text-black rounded text-sm\",onClick:()=>setShowAvailable(v=>!v),children:showAvailable?'Ocultar Rutinas Prediseñadas':'Ver Rutinas Prediseñadas'}),showAvailable&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-900 p-2 rounded mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-white text-base mb-2\",children:\"Rutinas Disponibles\"}),availableRoutines.length===0&&/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400\",children:\"No hay rutinas predise\\xF1adas.\"}),availableRoutines.map(routine=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2 p-2 bg-gray-800 rounded\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-yellow-300 font-bold\",children:routine.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-white text-sm mb-1\",children:routine.description}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-yellow-500 text-black px-2 py-1 rounded text-xs\",onClick:async()=>{// Copiar la rutina prediseñada a la rutina del usuario para el día seleccionado\nsetCurrentRoutine({exercises:routine.exercises});alert('Rutina copiada. Ahora puedes modificarla y guardarla como tuya.');},children:\"Usar esta rutina\"})]},routine.id))]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-1 mb-3\",children:DAYS.map(day=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedDay(day),className:\"px-2 py-1 text-sm rounded \".concat(selectedDay===day?'bg-yellow-500 text-black':'bg-gray-800 text-white'),children:day},day))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg text-white mb-2\",children:\"Agregar Ejercicio\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsxs(\"select\",{value:selectedCategory,onChange:e=>setSelectedCategory(e.target.value),className:\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 text-sm\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Seleccionar Grupo Muscular\"}),categories.map(cat=>/*#__PURE__*/_jsx(\"option\",{value:cat.id,children:cat.name},cat.id))]}),/*#__PURE__*/_jsxs(\"select\",{value:selectedExercise,onChange:e=>setSelectedExercise(e.target.value),className:\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 text-sm\",disabled:!selectedCategory,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Seleccionar Ejercicio\"}),exercises.map(ex=>/*#__PURE__*/_jsx(\"option\",{value:ex.id,children:ex.name},ex.id))]}),/*#__PURE__*/_jsx(\"button\",{onClick:addExercise,disabled:!selectedExercise,className:\"w-full px-3 py-2 bg-yellow-500 text-black rounded text-sm hover:bg-yellow-600 disabled:opacity-50\",children:\"Agregar Ejercicio\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:currentRoutine.exercises.map((exercise,exerciseIndex)=>{const exerciseData=exercises.find(e=>e.id===exercise.exerciseId);return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-3 rounded\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-base text-white mb-2\",children:(exerciseData===null||exerciseData===void 0?void 0:exerciseData.name)||'Ejercicio'}),/*#__PURE__*/_jsxs(\"div\",{className:\"overflow-x-auto\",children:[/*#__PURE__*/_jsxs(\"table\",{className:\"w-full text-sm text-white\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1\",children:\"Serie\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1\",children:\"Peso\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1\",children:\"Repeticiones\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1\",children:\"Timer\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1\",children:\"\\u2714\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:exercise.sets.map((set,setIndex)=>{var _set$timer3,_set$timer4;const key=\"\".concat(exerciseIndex,\"_\").concat(setIndex);const timerState=timers[key]||{running:false,timeLeft:getTimeLeft(exerciseIndex,setIndex)};return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1\",children:setIndex+1}),/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:set.weight,onChange:e=>updateSet(exerciseIndex,setIndex,'weight',e.target.value),placeholder:\"Peso (kg)\",className:\"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:set.reps,onChange:e=>updateSet(exerciseIndex,setIndex,'reps',e.target.value),placeholder:\"Reps\",className:\"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"})}),/*#__PURE__*/_jsxs(\"td\",{className:\"px-2 py-1 flex items-center gap-1\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",value:((_set$timer3=set.timer)===null||_set$timer3===void 0?void 0:_set$timer3.min)||0,onChange:e=>handleTimerChange(exerciseIndex,setIndex,'min',e.target.value),className:\"w-10 p-1 rounded bg-gray-700 text-white border border-gray-600 text-xs mr-1\",placeholder:\"mm\"}),\":\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",max:\"59\",value:((_set$timer4=set.timer)===null||_set$timer4===void 0?void 0:_set$timer4.sec)||0,onChange:e=>handleTimerChange(exerciseIndex,setIndex,'sec',e.target.value),className:\"w-10 p-1 rounded bg-gray-700 text-white border border-gray-600 text-xs ml-1\",placeholder:\"ss\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>timerState.running?pauseTimer(exerciseIndex,setIndex):startTimer(exerciseIndex,setIndex),className:\"ml-2 px-2 py-1 bg-yellow-500 text-black rounded text-xs\",children:timerState.running?'Pausar':'Iniciar'}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 font-mono\",children:formatTime(timerState.timeLeft)})]}),/*#__PURE__*/_jsxs(\"td\",{className:\"px-2 py-1\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:set.completed,onChange:e=>updateSet(exerciseIndex,setIndex,'completed',e.target.checked),className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>removeSet(exerciseIndex,setIndex),className:\"ml-2 px-2 py-1 bg-red-500 text-white rounded text-xs\",children:\"Eliminar\"})]})]},setIndex);})})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>addSet(exerciseIndex),className:\"text-yellow-400 hover:text-yellow-500 text-sm mt-2\",children:\"+ Agregar Serie\"})]})]},exerciseIndex);})}),/*#__PURE__*/_jsx(\"button\",{onClick:saveRoutine,disabled:loading,className:\"mt-4 w-full bg-yellow-500 text-black font-bold py-2 px-4 rounded text-sm hover:bg-yellow-600 disabled:opacity-50\",children:loading?'Guardando...':'Guardar Rutina'})]});};export default DailyRoutine;","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","db","collection","doc","setDoc","getDoc","getDocs","query","where","serverTimestamp","Header","jsx","_jsx","jsxs","_jsxs","DAYS","getToday","days","Date","getDay","DailyRoutine","currentUser","selectedDay","setSelectedDay","categories","setCategories","exercises","setExercises","selectedCategory","setSelectedCategory","selectedExercise","setSelectedExercise","currentRoutine","setCurrentRoutine","loading","setLoading","error","setError","timers","setTimers","timerRefs","showAvailable","setShowAvailable","availableRoutines","setAvailableRoutines","loadCategories","categoriesSnapshot","categoriesData","docs","map","_objectSpread","id","data","console","loadExercises","exercisesSnapshot","exercisesData","loadRoutine","routineRef","uid","routineDoc","exists","then","snapshot","addExercise","newExercise","exerciseId","sets","weight","reps","completed","prev","updateSet","exerciseIndex","setIndex","field","value","newExercises","addSet","push","timer","min","sec","removeSet","filter","_","i","handleTimerChange","startTimer","key","concat","running","timeLeft","getTimeLeft","current","clearInterval","setInterval","_prev$key","t","pauseTimer","_set$timer","_set$timer2","set","parseInt","formatTime","seconds","m","Math","floor","s","toString","padStart","Object","values","forEach","saveRoutine","updatedAt","alert","className","children","onClick","v","length","routine","name","description","day","onChange","e","target","cat","disabled","ex","exercise","exerciseData","find","_set$timer3","_set$timer4","timerState","type","placeholder","max","checked"],"sources":["C:/Users/nessc/Semental fit ultima/sementalfit2/src/components/DailyRoutine.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { db } from '../firebase';\nimport { \n    collection, \n    doc, \n    setDoc, \n    getDoc, \n    getDocs, \n    query, \n    where,\n    serverTimestamp \n} from 'firebase/firestore';\nimport Header from './Header';\n\nconst DAYS = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\n\nconst getToday = () => {\n    const days = ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'];\n    return days[new Date().getDay()];\n};\n\nconst DailyRoutine = () => {\n    const { currentUser } = useAuth();\n    const [selectedDay, setSelectedDay] = useState(getToday());\n    const [categories, setCategories] = useState([]);\n    const [exercises, setExercises] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [selectedExercise, setSelectedExercise] = useState('');\n    const [currentRoutine, setCurrentRoutine] = useState({\n        exercises: []\n    });\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    // Timer helpers\n    const [timers, setTimers] = useState({}); // { [exerciseIndex_setIndex]: { running, timeLeft } }\n    const timerRefs = useRef({});\n    const [showAvailable, setShowAvailable] = useState(false);\n    const [availableRoutines, setAvailableRoutines] = useState([]);\n\n    // Cargar categorías\n    useEffect(() => {\n        const loadCategories = async () => {\n            try {\n                setError('');\n                const categoriesSnapshot = await getDocs(collection(db, 'categories'));\n                const categoriesData = categoriesSnapshot.docs.map(doc => ({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n                setCategories(categoriesData);\n            } catch (error) {\n                console.error('Error al cargar categorías:', error);\n                setError('Error al cargar las categorías. Por favor, intenta de nuevo.');\n            }\n        };\n        loadCategories();\n    }, []);\n\n    // Cargar ejercicios cuando se selecciona una categoría\n    useEffect(() => {\n        const loadExercises = async () => {\n            if (!selectedCategory) {\n                setExercises([]);\n                return;\n            }\n            try {\n                setError('');\n                const exercisesSnapshot = await getDocs(\n                    query(collection(db, 'exercises'), \n                    where('categoryId', '==', selectedCategory))\n                );\n                const exercisesData = exercisesSnapshot.docs.map(doc => ({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n                setExercises(exercisesData);\n            } catch (error) {\n                console.error('Error al cargar ejercicios:', error);\n                setError('Error al cargar los ejercicios. Por favor, intenta de nuevo.');\n            }\n        };\n        loadExercises();\n    }, [selectedCategory]);\n\n    // Cargar rutina del día seleccionado\n    useEffect(() => {\n        const loadRoutine = async () => {\n            if (!currentUser) return;\n            const routineRef = doc(db, 'users', currentUser.uid, 'routines', selectedDay);\n            const routineDoc = await getDoc(routineRef);\n            if (routineDoc.exists()) {\n                setCurrentRoutine(routineDoc.data());\n            } else {\n                setCurrentRoutine({ exercises: [] });\n            }\n        };\n        loadRoutine();\n    }, [selectedDay, currentUser]);\n\n    useEffect(() => {\n        if (showAvailable) {\n            getDocs(collection(db, 'routines')).then(snapshot => {\n                setAvailableRoutines(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\n            });\n        }\n    }, [showAvailable]);\n\n    const addExercise = () => {\n        if (!selectedExercise) return;\n        \n        const newExercise = {\n            exerciseId: selectedExercise,\n            sets: [\n                { weight: 0, reps: 0, completed: false }\n            ]\n        };\n\n        setCurrentRoutine(prev => ({\n            ...prev,\n            exercises: [...prev.exercises, newExercise]\n        }));\n    };\n\n    const updateSet = (exerciseIndex, setIndex, field, value) => {\n        setCurrentRoutine(prev => {\n            const newExercises = [...prev.exercises];\n            newExercises[exerciseIndex].sets[setIndex][field] = value;\n            return { ...prev, exercises: newExercises };\n        });\n    };\n\n    const addSet = (exerciseIndex) => {\n        setCurrentRoutine(prev => {\n            const newExercises = [...prev.exercises];\n            newExercises[exerciseIndex].sets.push({\n                weight: 0,\n                reps: 0,\n                completed: false,\n                timer: { min: 0, sec: 0 }\n            });\n            return { ...prev, exercises: newExercises };\n        });\n    };\n\n    const removeSet = (exerciseIndex, setIndex) => {\n        setCurrentRoutine(prev => {\n            const newExercises = [...prev.exercises];\n            newExercises[exerciseIndex].sets = newExercises[exerciseIndex].sets.filter((_, i) => i !== setIndex);\n            return { ...prev, exercises: newExercises };\n        });\n    };\n\n    const handleTimerChange = (exerciseIndex, setIndex, field, value) => {\n        setCurrentRoutine(prev => {\n            const newExercises = [...prev.exercises];\n            if (!newExercises[exerciseIndex].sets[setIndex].timer) {\n                newExercises[exerciseIndex].sets[setIndex].timer = { min: 0, sec: 0 };\n            }\n            newExercises[exerciseIndex].sets[setIndex].timer[field] = value;\n            return { ...prev, exercises: newExercises };\n        });\n    };\n\n    const startTimer = (exerciseIndex, setIndex) => {\n        const key = `${exerciseIndex}_${setIndex}`;\n        setTimers(prev => ({\n            ...prev,\n            [key]: {\n                running: true,\n                timeLeft: getTimeLeft(exerciseIndex, setIndex)\n            }\n        }));\n        if (timerRefs.current[key]) clearInterval(timerRefs.current[key]);\n        timerRefs.current[key] = setInterval(() => {\n            setTimers(prev => {\n                const t = prev[key]?.timeLeft || 0;\n                if (t > 0) {\n                    return {\n                        ...prev,\n                        [key]: { ...prev[key], timeLeft: t - 1 }\n                    };\n                } else {\n                    clearInterval(timerRefs.current[key]);\n                    return {\n                        ...prev,\n                        [key]: { ...prev[key], running: false, timeLeft: 0 }\n                    };\n                }\n            });\n        }, 1000);\n    };\n\n    const pauseTimer = (exerciseIndex, setIndex) => {\n        const key = `${exerciseIndex}_${setIndex}`;\n        setTimers(prev => ({\n            ...prev,\n            [key]: { ...prev[key], running: false }\n        }));\n        if (timerRefs.current[key]) clearInterval(timerRefs.current[key]);\n    };\n\n    const getTimeLeft = (exerciseIndex, setIndex) => {\n        const set = currentRoutine.exercises[exerciseIndex].sets[setIndex];\n        const min = parseInt(set.timer?.min || 0, 10);\n        const sec = parseInt(set.timer?.sec || 0, 10);\n        return min * 60 + sec;\n    };\n\n    const formatTime = (seconds) => {\n        const m = Math.floor(seconds / 60);\n        const s = seconds % 60;\n        return `${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`;\n    };\n\n    useEffect(() => {\n        return () => {\n            Object.values(timerRefs.current).forEach(clearInterval);\n        };\n    }, []);\n\n    const saveRoutine = async () => {\n        if (!currentUser) return;\n        setLoading(true);\n        try {\n            const routineRef = doc(db, 'users', currentUser.uid, 'routines', selectedDay);\n            await setDoc(routineRef, {\n                ...currentRoutine,\n                updatedAt: serverTimestamp()\n            });\n            alert('Rutina guardada exitosamente');\n        } catch (error) {\n            console.error('Error al guardar la rutina:', error);\n            alert('Error al guardar la rutina');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"w-full px-2 py-4\">\n            <div className=\"mb-4\">\n                <h2 className=\"text-xl font-bold text-yellow-400 mb-3\">Rutina Diaria</h2>\n                {error && (\n                    <div className=\"bg-red-500 text-white p-2 rounded mb-2 text-xs\">{error}</div>\n                )}\n                <button\n                    className=\"mb-2 px-4 py-2 bg-yellow-500 text-black rounded text-sm\"\n                    onClick={() => setShowAvailable(v => !v)}\n                >\n                    {showAvailable ? 'Ocultar Rutinas Prediseñadas' : 'Ver Rutinas Prediseñadas'}\n                </button>\n                {showAvailable && (\n                    <div className=\"bg-gray-900 p-2 rounded mb-4\">\n                        <h3 className=\"text-white text-base mb-2\">Rutinas Disponibles</h3>\n                        {availableRoutines.length === 0 && <p className=\"text-gray-400\">No hay rutinas prediseñadas.</p>}\n                        {availableRoutines.map(routine => (\n                            <div key={routine.id} className=\"mb-2 p-2 bg-gray-800 rounded\">\n                                <div className=\"text-yellow-300 font-bold\">{routine.name}</div>\n                                <div className=\"text-white text-sm mb-1\">{routine.description}</div>\n                                <button\n                                    className=\"bg-yellow-500 text-black px-2 py-1 rounded text-xs\"\n                                    onClick={async () => {\n                                        // Copiar la rutina prediseñada a la rutina del usuario para el día seleccionado\n                                        setCurrentRoutine({ exercises: routine.exercises });\n                                        alert('Rutina copiada. Ahora puedes modificarla y guardarla como tuya.');\n                                    }}\n                                >\n                                    Usar esta rutina\n                                </button>\n                            </div>\n                        ))}\n                    </div>\n                )}\n                <div className=\"flex flex-wrap gap-1 mb-3\">\n                    {DAYS.map(day => (\n                        <button\n                            key={day}\n                            onClick={() => setSelectedDay(day)}\n                            className={`px-2 py-1 text-sm rounded ${\n                                selectedDay === day \n                                    ? 'bg-yellow-500 text-black' \n                                    : 'bg-gray-800 text-white'\n                            }`}\n                        >\n                            {day}\n                        </button>\n                    ))}\n                </div>\n            </div>\n\n            <div className=\"mb-4\">\n                <h3 className=\"text-lg text-white mb-2\">Agregar Ejercicio</h3>\n                <div className=\"space-y-2\">\n                    <select\n                        value={selectedCategory}\n                        onChange={(e) => setSelectedCategory(e.target.value)}\n                        className=\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 text-sm\"\n                    >\n                        <option value=\"\">Seleccionar Grupo Muscular</option>\n                        {categories.map(cat => (\n                            <option key={cat.id} value={cat.id}>\n                                {cat.name}\n                            </option>\n                        ))}\n                    </select>\n\n                    <select\n                        value={selectedExercise}\n                        onChange={(e) => setSelectedExercise(e.target.value)}\n                        className=\"w-full p-2 rounded bg-gray-800 text-white border border-gray-700 text-sm\"\n                        disabled={!selectedCategory}\n                    >\n                        <option value=\"\">Seleccionar Ejercicio</option>\n                        {exercises.map(ex => (\n                            <option key={ex.id} value={ex.id}>\n                                {ex.name}\n                            </option>\n                        ))}\n                    </select>\n\n                    <button\n                        onClick={addExercise}\n                        disabled={!selectedExercise}\n                        className=\"w-full px-3 py-2 bg-yellow-500 text-black rounded text-sm hover:bg-yellow-600 disabled:opacity-50\"\n                    >\n                        Agregar Ejercicio\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"space-y-3\">\n                {currentRoutine.exercises.map((exercise, exerciseIndex) => {\n                    const exerciseData = exercises.find(e => e.id === exercise.exerciseId);\n                    return (\n                        <div key={exerciseIndex} className=\"bg-gray-800 p-3 rounded\">\n                            <h4 className=\"text-base text-white mb-2\">\n                                {exerciseData?.name || 'Ejercicio'}\n                            </h4>\n                            <div className=\"overflow-x-auto\">\n                                <table className=\"w-full text-sm text-white\">\n                                    <thead>\n                                        <tr>\n                                            <th className=\"px-2 py-1\">Serie</th>\n                                            <th className=\"px-2 py-1\">Peso</th>\n                                            <th className=\"px-2 py-1\">Repeticiones</th>\n                                            <th className=\"px-2 py-1\">Timer</th>\n                                            <th className=\"px-2 py-1\">✔</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {exercise.sets.map((set, setIndex) => {\n                                            const key = `${exerciseIndex}_${setIndex}`;\n                                            const timerState = timers[key] || { running: false, timeLeft: getTimeLeft(exerciseIndex, setIndex) };\n                                            return (\n                                                <tr key={setIndex}>\n                                                    <td className=\"px-2 py-1\">{setIndex + 1}</td>\n                                                    <td className=\"px-2 py-1\">\n                                                        <input\n                                                            type=\"number\"\n                                                            value={set.weight}\n                                                            onChange={(e) => updateSet(exerciseIndex, setIndex, 'weight', e.target.value)}\n                                                            placeholder=\"Peso (kg)\"\n                                                            className=\"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"\n                                                        />\n                                                    </td>\n                                                    <td className=\"px-2 py-1\">\n                                                        <input\n                                                            type=\"number\"\n                                                            value={set.reps}\n                                                            onChange={(e) => updateSet(exerciseIndex, setIndex, 'reps', e.target.value)}\n                                                            placeholder=\"Reps\"\n                                                            className=\"w-16 p-1 rounded bg-gray-700 text-white border border-gray-600 text-sm\"\n                                                        />\n                                                    </td>\n                                                    <td className=\"px-2 py-1 flex items-center gap-1\">\n                                                        <input\n                                                            type=\"number\"\n                                                            min=\"0\"\n                                                            value={set.timer?.min || 0}\n                                                            onChange={(e) => handleTimerChange(exerciseIndex, setIndex, 'min', e.target.value)}\n                                                            className=\"w-10 p-1 rounded bg-gray-700 text-white border border-gray-600 text-xs mr-1\"\n                                                            placeholder=\"mm\"\n                                                        />\n                                                        :\n                                                        <input\n                                                            type=\"number\"\n                                                            min=\"0\"\n                                                            max=\"59\"\n                                                            value={set.timer?.sec || 0}\n                                                            onChange={(e) => handleTimerChange(exerciseIndex, setIndex, 'sec', e.target.value)}\n                                                            className=\"w-10 p-1 rounded bg-gray-700 text-white border border-gray-600 text-xs ml-1\"\n                                                            placeholder=\"ss\"\n                                                        />\n                                                        <button\n                                                            type=\"button\"\n                                                            onClick={() => timerState.running ? pauseTimer(exerciseIndex, setIndex) : startTimer(exerciseIndex, setIndex)}\n                                                            className=\"ml-2 px-2 py-1 bg-yellow-500 text-black rounded text-xs\"\n                                                        >\n                                                            {timerState.running ? 'Pausar' : 'Iniciar'}\n                                                        </button>\n                                                        <span className=\"ml-2 font-mono\">{formatTime(timerState.timeLeft)}</span>\n                                                    </td>\n                                                    <td className=\"px-2 py-1\">\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            checked={set.completed}\n                                                            onChange={(e) => updateSet(exerciseIndex, setIndex, 'completed', e.target.checked)}\n                                                            className=\"w-4 h-4\"\n                                                        />\n                                                        <button\n                                                            type=\"button\"\n                                                            onClick={() => removeSet(exerciseIndex, setIndex)}\n                                                            className=\"ml-2 px-2 py-1 bg-red-500 text-white rounded text-xs\"\n                                                        >\n                                                            Eliminar\n                                                        </button>\n                                                    </td>\n                                                </tr>\n                                            );\n                                        })}\n                                    </tbody>\n                                </table>\n                                <button\n                                    onClick={() => addSet(exerciseIndex)}\n                                    className=\"text-yellow-400 hover:text-yellow-500 text-sm mt-2\"\n                                >\n                                    + Agregar Serie\n                                </button>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n\n            <button\n                onClick={saveRoutine}\n                disabled={loading}\n                className=\"mt-4 w-full bg-yellow-500 text-black font-bold py-2 px-4 rounded text-sm hover:bg-yellow-600 disabled:opacity-50\"\n            >\n                {loading ? 'Guardando...' : 'Guardar Rutina'}\n            </button>\n        </div>\n    );\n};\n\nexport default DailyRoutine; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Función auxiliar para verificar si el usuario está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Función auxiliar para verificar si el usuario es el propietario del documento
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Función auxiliar para verificar si el usuario es administrador
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 3;
    }

    // Función auxiliar para verificar si es personal trainer
    function isPersonalTrainer() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 2;
    }

    // Reglas para la colección de usuarios
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && (
        // Permitir crear usuarios normales (rol 1)
        request.resource.data.role == 1 ||
        // Permitir que los administradores creen personal trainers (rol 2)
        (isAdmin() && request.resource.data.role == 2)
      );
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Reglas para la colección de ejercicios
    match /exercises/{exerciseId} {
      // Permitir lectura a usuarios autenticados
      allow read: if isAuthenticated();
      // Permitir escritura solo a administradores
      allow write: if isAdmin();
    }
    
    // Reglas para la colección de entrenamientos
    match /training/{trainingId} {
      // Permitir lectura y escritura solo al propietario del entrenamiento
      allow read, write: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Reglas para la colección de categorías
    match /categories/{categoryId} {
      // Permitir lectura a usuarios autenticados
      allow read: if isAuthenticated();
      // Permitir escritura solo a administradores
      allow write: if isAdmin();
    }
    
    // Reglas para rutinas
    match /routines/{routineId} {
      // Permitir lectura si el usuario está autenticado
      allow read: if request.auth != null;
      
      // Permitir crear rutinas solo a usuarios autenticados
      allow create: if request.auth != null 
        && request.resource.data.userId == request.auth.uid;
      
      // Permitir actualizar/eliminar solo al dueño de la rutina
      allow update, delete: if request.auth != null 
        && resource.data.userId == request.auth.uid;
    }
    
    // Reglas para rutinas diarias
    match /users/{userId}/routines/{day} {
      allow read: if isAuthenticated() && (
        isOwner(userId) || 
        isAdmin() || 
        isPersonalTrainer()
      );
      allow write: if isAuthenticated() && (
        isOwner(userId) || 
        isAdmin() || 
        isPersonalTrainer()
      );
    }
    
    // Reglas para el carrito de compras
    match /carts/{userId} {
      // Permitir lectura y escritura solo al propietario del carrito
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Reglas para las órdenes
    match /orders/{orderId} {
      // Permitir lectura al propietario de la orden o administradores
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        isAdmin()
      );
      // Permitir creación solo a usuarios autenticados
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      // Permitir actualización solo a administradores
      allow update: if isAdmin();
    }
    
    // Reglas para productos
    match /products/{productId} {
      // Permitir lectura a todos los usuarios autenticados
      allow read: if isAuthenticated();
      // Permitir escritura solo a administradores
      allow create, update, delete: if isAdmin();
    }

    // Reglas para categorías de productos
    match /productCategories/{categoryId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }

    // Reglas para reseñas de productos
    match /productReviews/{reviewId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        isAdmin()
      );
    }

    // Reglas para favoritos de usuario
    match /users/{userId}/favorites/{productId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Reglas para historial de compras
    match /users/{userId}/purchaseHistory/{orderId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == userId || 
        isAdmin()
      );
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update, delete: if isAdmin();
    }

    // Reglas para la colección de clientes
    match /clientes/{clienteId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && (
        isAdmin() || 
        isPersonalTrainer()
      );
      allow update: if request.auth != null && (
        isAdmin() || 
        isPersonalTrainer() ||
        isOwner(resource.data.userId)
      );
      allow delete: if isAdmin();
    }

    // Reglas para la colección de rutinas
    match /rutinas/{rutinaId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && (
        isAdmin() || 
        isPersonalTrainer()
      );
      allow update: if request.auth != null && (
        isAdmin() || 
        isPersonalTrainer()
      );
      allow delete: if isAdmin();
    }

    // Reglas para la colección de ejercicios
    match /ejercicios/{ejercicioId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && (
        isAdmin() || 
        isPersonalTrainer()
      );
      allow update: if request.auth != null && (
        isAdmin() || 
        isPersonalTrainer()
      );
      allow delete: if isAdmin();
    }

    // Reglas para la colección de progreso
    match /progreso/{progresoId} {
      allow read: if request.auth != null && (
        isAdmin() || 
        isPersonalTrainer() ||
        isOwner(resource.data.userId)
      );
      allow create: if request.auth != null && (
        isAdmin() || 
        isPersonalTrainer() ||
        isOwner(request.resource.data.userId)
      );
      allow update: if request.auth != null && (
        isAdmin() || 
        isPersonalTrainer() ||
        isOwner(resource.data.userId)
      );
      allow delete: if isAdmin();
    }
  }
} 